;; -----------------------------------------------------------------------------------------------------------
;; Disassembly of "Batman" - Amstrad CPC (Jon Ritman and Bernie Drummond)
;; Batman BM.SCF
;; Author : Fred Limouzin (fphenix@hotmail.com)
;; Tool used: mostly WinApe and Notepad++!
;; -----------------------------------------------------------------------------------------------------------
;; THis is a Bonus work of the Head Over Heels dissassembly.
;; Compilable (need to run the txt2asm script). WORK UNDER PROGRESS
;; Note that Batman was the base game "HoH" was developped from, hence many functions are identical.
;; -----------------------------------------------------------------------------------------------------------

						ORG		&0100
						run		Entry
Stack:
Entry:
	0100 C3 03 01       JP Reentry
Reentry:
	0103 31 00 01       LD SP,Stack
	0106 CD DF 1A       CALL Init_setup
	0109 CD 14 09       CALL Keyboard_scanning_ending
	010C 18 0C          JR Main

;; -----------------------------------------------------------------------------------------------------------
current_Room_ID
	010E 00 00          DEFW &0000 ;; curr room id
Sound_amount
	0110 02             DEFB 2 ;; 2="nasty" (plenty), 1="useful", 0="late at night" (quiet)

Do_Objects_Phase
	0111 00             DEFB 0

Current_User_Inputs
	0112 FF             DEFB &FF
Last_User_Inputs:
	0113 EF             DEFB &EF

action_key_pressed
	0114 00             DEFB 0

Frame_counter:
	0115 01				DEFB	&01
win_state
	0116 00				DEFB 0		;; Boolean : 0 if not in last room in batcraft with all parts, else (winner) &FF

;; -----------------------------------------------------------------------------------------------------------
RoomID_Victory			EQU		&E500
RoomID_Batman_1st		EQU		&8A40					;; This is first room ID (8A4)

;; -----------------------------------------------------------------------------------------------------------
;; Main : Entry point and main loop
;; Game_over : Entry point after a game has been played
.Game_over:													;; when "game over" branch here and continue at 'Main'
	0117 CD 7C 24    	CALL Game_over_screen
Main:
	011A 31 00 01       LD SP,Stack
	011D AF             XOR A
	011E 32 16 01       LD (win_state),A					;; reset ....
	0121 CD 65 23       CALL Main_Screen
	0124 F5             PUSH AF
	0125 CD C8 06       CALL clr_screen
	0128 F1             POP AF
	0129 30 05          JR NC,Main_continue_game
	012B CD E5 1A       CALL Init_new_game
	012E 18 03          JR Main_game_start
Main_continue_game
	0130 CD 05 1B       CALL Init_Continue_game
Main_game_start
	0133 CD 2D 37       CALL WaitKey
Enter_New_Room
	0136 AF             XOR A
	0137 32 11 01       LD (Do_Objects_Phase),A
	013A ED 4B 0E 01    LD BC,(current_Room_ID)
	013E CD 0D 1B       CALL EnterRoom
Main_loop
	0141 CD DA 01       CALL Check_User_Input
	0144 CD 5A 02       CALL Do_Objects
	0147 CD C1 01       CALL WaitFrame_Delay
	014A CD 4F 01       CALL Victory_Room
	014D 18 F2          JR Main_loop

;; -----------------------------------------------------------------------------------------------------------
Victory_Room
	014F 3A B3 31       LD A,(parts_got_Mask)
	0152 FE 7F          CP &7F
	0154 C0             RET NZ
	0155 2A 0E 01       LD HL,(current_Room_ID)
	0158 11 00 E5       LD DE,RoomID_Victory		;; Victory room
	015B A7             AND A						;; carry = 0
	015C ED 52          SBC HL,DE					;; test if in victory room
	015E C0             RET NZ						;; no: leave
test_right_posish		;; test if the Batman sprite is in the right position in the room
	015F 21 EE 1B       LD HL,Batman_variables+O_FLAGS
	0162 11 81 01       LD DE,test_posish_data
	0165 01 05 00       LD BC,5
test_posish_loop
	0168 1A             LD A,(DE)
	0169 ED A1          CPI							;; CP (HL) ; INC HL; DEC BC
	016B 13             INC DE
	016C C0             RET NZ						;; leave if Batman not at the right position
	016D EA 68 01       JP PE,test_posish_loop		;; at CPI, if BC != 0, V (overflow floag) is set (loop), if BC=0 V is reset (cont)
beat_the_game:
	0170 CD 4D 0A       CALL Play_Batman_Theme
	0173 CD 44 37       CALL Wait_key_pressed
	0176 CD F2 24       CALL Batcraft_complete_screen
	0179 3E FF          LD A,&FF
	017B 32 16 01       LD (win_state),A
	017E C3 17 01       JP Game_over

;; -----------------------------------------------------------------------------------------------------------
;; position for winning the game
test_posish_data
	0181 				DEFB &08, &14, &28, &B4, SPR_BATMAN_0 ;; Winning position : Flag, U,V,Z,Sprite

;; -----------------------------------------------------------------------------------------------------------
;; Go_to_room ???
	0186 3A         	LD A,(access_new_room_code)
	0189 3D          	DEC A
	018A 2A 0E 01       LD HL,(current_Room_ID)
	018D FE 05          CP &05
	018F 30 25          JR NC,&01B6
	0191 1F             RRA
	0192 38 0B          JR c,&019F
	0194 11 10 F0       LD DE,&F010
	0197 1F             RRA
	0198 30 01          JR NC,&019B
	019A 53             LD D,E

	019B 7C             LD A,H
	019C 82             ADD A,D
	019D 18 0D          JR &01AC

	019F 11 01 FF       LD DE,&FF01
	01A2 1F             RRA
	01A3 30 01          JR NC,&01A6
	01A5 53             LD D,E

	01A6 7C             LD A,H
	01A7 82             ADD A,D
	01A8 AC             XOR H
	01A9 E6 0F          AND &0F
	01AB AC             XOR H

	01AC 67             LD H,A

	01AD 22 0E 01       LD (current_Room_ID),HL

	01B0 31 00 01       LD SP,Stack
	01B3 C3 36 01       JP Enter_New_Room

	01B6 1F             RRA
	01B7 3E 10          LD A,&10
	01B9 38 02          JR c,&01BD
	01BB 3E F0          LD A,&F0

	01BD 85             ADD A,L
	01BE 6F             LD L,A
	01BF 18 EC          JR &01AD

;; -----------------------------------------------------------------------------------------------------------
;; Controls the frame rate (FPS) by syncing with a number of VSYNC.
;; Frame_counter is updated in the Interrupt Handler and it
;; waits that it goes to 0 and sets it back to 4.
.WaitFrame_Delay:
	01C1 3A 15 01       LD A,(Frame_counter)
	01C4 A7             AND A
	01C5 20 FA          JR NZ,WaitFrame_Delay
	01C7 3E 04          LD A,4
	01C9 32 15 01       LD (Frame_counter),A
	01CC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Depending on the Sensitivity settings (Sensitivity Menu) self-modifying
;; the code to use either the Routine_High_sensitivity or the
;; Routine_Low_sensitivity. This only has an impact when pressing two keys
;; to move diagonally.
.Sub_Update_Sensitivity:													;; A = sensitivity ; (self-modifying code at &0232):
	01CD 21 1D 02       LD HL,Routine_High_sensitivity
	01D0 A7             AND A
	01D1 28 03          JR Z,us_skip
	01D3 21 2A 02       LD HL,Routine_Low_sensitivity
us_skip
	01D6 22 13 02       LD (smc_sens_routine+1),HL
	01D9 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This will scan the keyboard and get the user inputs
;; The value A from Get_user_inputs is:
;;		bit7:Carry, Fire, Swop, Left, Right, Down, Up, bit0: Jump (active low)
.Check_User_Input:
	01DA CD D0 08       CALL Get_user_inputs
	01DD CB 7F          BIT 7,A
	01DF 21 14 01       LD HL,action_key_pressed
	01E2 36 00          LD (HL),0
	01E4 20 02          JR NZ,cuiskp
	01E6 36 FF          LD (HL),&FF
cuiskp:
	01E8 CB 77          BIT 6,A
	01EA 20 1C          JR NZ,Update_key
;;Check_Pause
	01EC CD B2 0B       CALL Silence_all_Voices
	01EF CD 05 08       CALL Wait_anykey_released
	01F2 3E BE          LD A,Print_Paused
	01F4 CD 15 3C       CALL Print_String
pause_loop
	01F7 CD 0B 08       CALL Test_Enter_Shift_keys
	01FA 38 FB          JR c,pause_loop
	01FC 0D             DEC C
	01FD CA 17 01       JP Z,Game_over
leave_pause
	0200 CD 05 08       CALL Wait_anykey_released
	0203 CD 42 02       CALL LeavePause
	0206 18 D2          JR Check_User_Input

Update_key
	0208 4F             LD C,A
	0209 1F             RRA
	020A CD 16 36       CALL DirCode_from_LRDU
	020D FE FF          CP &FF
	020F 28 2C          JR Z,No_Key_pressed
	0211 1F             RRA
smc_sens_routine
	0212 DA 2A 02       JP c,Routine_Low_sensitivity
	0215 79             LD A,C
	0216 32 13 01       LD (Last_User_Inputs),A
	0219 32 12 01       LD (Current_User_Inputs),A
	021C C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Runs if HIGH Sensitivity is choosen in the menu (value set in smc_sens_routine)
;; If moving diagonaly, set the new direction each time.
;; Input: reg C has the "Carry,Fire,Swop,Left,Right,Down,Up,Jump" state (active low)
.Routine_High_sensitivity:
	021D 3A 13 01       LD A,(Last_User_Inputs)
	0220 A9             XOR C
	0221 2F             CPL
	0222 A9             XOR C
	0223 E6 FE          AND &FE
	0225 A9             XOR C
	0226 32 12 01       LD (Current_User_Inputs),A
	0229 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Runs if LOW Sensitivity is choosen in the menu (value set in smc_sens_routine)
;; if moving diagonaly, keep the old direction (the same one in the pair creating the diag)
;; Input: reg C has the "Carry,Fire,Swop,Left,Right,Down,Up,Jump" state (active low)
.Routine_Low_sensitivity:
	022A 3A 13 01       LD A,(Last_User_Inputs)
	022D A9             XOR C
	022E E6 FE          AND &FE
	0230 A9             XOR C
	0231 47             LD B,A
	0232 B1             OR C
	0233 B8             CP B
	0234 28 03          JR Z,rls_1
	0236 78             LD A,B
	0237 EE FE          XOR &FE
rls_1
	0239 32 12 01       LD (Current_User_Inputs),A
	023C C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Nothing pressed, update Current_User_Inputs with current CFSLRDUJ (active low)
;; Input: reg C has the "Carry,Fire,Swop,Left,Right,Down,Up,Jump" state
.No_Key_pressed:
	023D 79             LD A,C
	023E 32 12 01       LD (Current_User_Inputs),A
	0241 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; leave pause
LeavePause
	0242 CD 2E 1B       CALL Update_Screen_Periph
	0245 21 50 4C       LD HL,&4C * WORD_HIGH_BYTE + &50
pause_message_draw_over_loop
	0248 E5             PUSH HL
	0249 11 88 60       LD DE,&60 * WORD_HIGH_BYTE + &88
	024C CD 1C 15       CALL Draw_View
	024F E1             POP HL
	0250 7D             LD A,L
	0251 67             LD H,A
	0252 C6 14          ADD A,20
	0254 6F             LD L,A
	0255 FE B5          CP 181
	0257 38 EF          JR c,pause_message_draw_over_loop
	0259 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; In sync with the Do_Objects_Phase, process the next object in the
;; linked list (CallObjFn : call object function) and point on next Object.
;; The phase mechanism allows an object to not get processed for one frame.
.Do_Objects:
	025A 3A 11 01       LD A,(Do_Objects_Phase)
	025D EE 80          XOR &80				;; flip bit7
	025F 32 11 01       LD (Do_Objects_Phase),A
	0262 2A 7E 2D       LD HL,(ObjList_Regular_Near2Far)
	0265 18 1D          JR Sub_Do_Objects_entry

doob_loop
	0267 E5             PUSH HL
	0268 7E             LD A,(HL)
	0269 23             INC HL
	026A 66             LD H,(HL)
	026B 6F             LD L,A
	026C E3             EX (SP),HL
	026D EB             EX DE,HL
	026E 21 0A 00       LD HL,O_FUNC
	0271 19             ADD HL,DE
	0272 3A 11 01       LD A,(Do_Objects_Phase)
	0275 AE             XOR (HL)
	0276 FE 80          CP &80
	0278 38 09          JR c,doob_skip
	027A 7E             LD A,(HL)
	027B EE 80          XOR &80
	027D 77             LD (HL),A
	027E E6 7F          AND &7F
	0280 C4 82 2B       CALL NZ,CallObjFn
doob_skip
	0283 E1             POP HL
Sub_Do_Objects_entry
	0284 7C             LD A,H
	0285 B5             OR L
	0286 20 DF          JR NZ,doob_loop
	0288 C3 28 1C       JP Characters_Update

;; -----------------------------------------------------------------------------------------------------------
;; RST init
JUMP_OPCODE				EQU		&C3						;; "JP addr", used to generate RST7 (int handler) and 0 (reset to Entry)
LDIX_OPCODE				EQU		&DD						;; to transform a "LD HL,.." into a "LD IX,..." in order to cancel it
LDAvv_OPCODE			EQU		&3E 					;; "LD A,vv", used in BlitRot<*> functions
RST0_ADDR				EQU		&0000
RST7_ADDR				EQU		&0038

WORD_LOW_BYTE			EQU		&00FF
WORD_HIGH_BYTE			EQU		256

;; -----------------------------------------------------------------------------------------------------------
;; Amastrad CPC System specific constants
GATEARRAY_BORDER		EQU		&7F10
GATEARRAY_PENS			EQU		&7F00
GATEARRAY_INKS			EQU		&7F40
GATEARRAY_MODE1			EQU		&7F8D

CRTC_REGSEL				EQU		&BC00
CRTC_DATAOUT			EQU		&BD00
;;CRTC_STATUS			EQU		&BE00
;;CRTC_DATAIN			EQU		&BF00

PSG_PORTA				EQU		&F400
PSG_PORTB				EQU		&F500
PSG_PORTC				EQU		&F600
PSG_INACTIVE			EQU		&F600
PSG_KB_LINESEL			EQU		&F600
PSG_REG_READ			EQU		&F640
PSG_REG_WRITE			EQU		&F680
PSG_REG_SEL				EQU		&F6C0
PSG_PORTCTRL			EQU		&F700
PSG_PORTA_OUT			EQU		&F782
PSG_PORTA_IN			EQU		&F792

;; -----------------------------------------------------------------------------------------------------------
;; Data block is moved at init from 4C00-AC8F to 56D8-B767 . That frees the 4C00-56D7 area, used by buffers.
;; The copy is done backwards (from last byte to first)
;; &0AD8 is the offset between the pre-init (data) block.
;; in Init_table_and_crtc (see move_loaded_data_section)
MOVE_BLOCK_DEST_END		EQU		&B767												;; last byte of the destination block
MOVE_BLOCK_SOURCE_END	EQU		&AC8F												;; last byte of the source block
MOVE_BLOCK_LENGTH		EQU		&6090												;; length of the moved block
MOVE_OFFSET				EQU		MOVE_BLOCK_DEST_END - MOVE_BLOCK_SOURCE_END			;; &0AD8 : gap betwwen blocks

;; -----------------------------------------------------------------------------------------------------------CPC
;; This will 1) Move a big block of loaded data 2) initialize some
;; Tables 3) set the interrupts/RST and 4) initialize the CRT (mode, colors, etc.).
Init_table_and_crtc:
	028B F3             DI
move_loaded_data_section
	028C 11 67 B7       LD DE,MOVE_BLOCK_DEST_END
	028F 21 8F AC       LD HL,MOVE_BLOCK_SOURCE_END
	0292 01 90 60       LD BC,MOVE_BLOCK_LENGTH
	0295 ED B8          LDDR
erase_buffer_6800
	0297 21 00 4E       LD HL,DestBuff
	029A 01 00 01       LD BC,&0100				;; length
	029D CD A8 1B       CALL Erase_forward_Block_RAM
	02A0 CD C8 06       CALL clr_screen
	02A3 3E 08          LD A,COLOR_SCHEME_ALLBLACK
	02A5 CD 5D 03       CALL Set_colors
inth_and_rst
	02A8 3E C3          LD A,JUMP_OPCODE
	02AA 21 ED 02       LD HL,Interrupt_Handler
	02AD 32 38 00       LD (RST7_ADDR),A
	02B0 22 39 00       LD (RST7_ADDR+1),HL
	02B3 21 00 01       LD HL,Entry
	02B6 32 00 00       LD (RST0_ADDR),A
	02B9 22 01 00       LD (RST0_ADDR+1),HL
	02BC ED 56          IM 1
	02BE CD 1C 03       CALL Init_6600_table
init_CTRC_and_screen
	02C1 01 8D 7F       LD BC,GATEARRAY_MODE1
	02C4 ED 49          OUT (C),C
	02C6 21 DC 02       LD HL,array_CRTC_init_values
	02C9 01 00 BC       LD BC,CRTC_REGSEL
init_CRTC_loop
	02CC ED 49          OUT (C),C
	02CE 7E             LD A,(HL)
	02CF 04             INC B
	02D0 ED 79          OUT (C),A
	02D2 05             DEC B
	02D3 23             INC HL
	02D4 0C             INC C
	02D5 79             LD A,C
	02D6 FE 10          CP &10
	02D8 20 F2          JR NZ,init_CRTC_loop
	02DA FB             EI
	02DB C9             RET

;; -----------------------------------------------------------------------------------------------------------CPC
array_CRTC_init_values:
	02DC 3F	            DEFB 	&3F             	;; CRTC reg 0 value : Width of the screen, in characters. Should always be 63 (&3F) (64 characters). 1 character == 1μs
	02DD 28				DEFB 	&28 				;; CRTC reg 1 value : Displayed char value, 40 (&28) is the default!
	02DE 2E       		DEFB 	&2E		 			;; CRTC reg 2 value : 46; When to start the HSync signal.
	02DF 8E          	DEFB 	&8E	  				;; CRTC reg 3 value : 142 (128+14); HSync pulse width in characters
	02E0 26 			DEFB 	&26					;; CRTC reg 4 value : 38; Height of the screen, in characters
	02E1 00				DEFB 	&00					;; CRTC reg 5 value : 0; Measured in scanlines
	02E2 19             DEFB 	&19					;; CRTC reg 6 value : 25; Height of displayed screen in characters
	02E3 21				DEFB	&21					;; CRTC reg 7 value : 33 Note: default is 30; when to start the VSync signal, in characters.
	02E4 00				DEFB 	&00					;; CRTC reg 8 value : 0 = No interlace
	02E5 07      		DEFB 	&07					;; CRTC reg 9 value : 7; Maximum scan line address
	02E6 0F             DEFB 	&0F					;; CRTC reg 10 value : Cursor Start Raster (0 is the default)
	02E7 0F             DEFB 	&0F					;; CRTC reg 11 value : Cursor End Raster (0 is the default)
	02E8 30				DEFB 	&30					;; CRTC reg 12 value : 48 (&30) Display Start Address (High)
	02E9 00        		DEFB 	&00					;; CRTC reg 13 value : Display Start Address (Low) (0 is the default)
	02EA 30				DEFB 	&30					;; CRTC reg 14 value : Cursor Address (High) (0 is the default)
	02EB 00         	DEFB 	&00 				;; CRTC reg 15 value : Cursor Address (Low)

;; -----------------------------------------------------------------------------------------------------------
VSYNC_wait_value:
	02EC 06				DEFB 	6

;; -----------------------------------------------------------------------------------------------------------CPC
;; The interrupt is only run every VSYNC_wait_value VSYNCs
.Interrupt_Handler:
	02ED F5          	PUSH AF
	02EE C5             PUSH BC
	02EF E5             PUSH HL
	02F0 21 EC 02       LD HL,VSYNC_wait_value
	02F3 06 F5          LD B,PSG_PORTB / WORD_HIGH_BYTE
	02F5 ED 48          IN C,(C)
	02F7 CB 19          RR C
	02F9 38 03          JR c,ih_0
	02FB 35             DEC (HL)
	02FC 20 19          JR NZ,exit_int_handler
ih_0
	02FE D5             PUSH DE
	02FF 36 06          LD (HL),6
	0301 DD E5          PUSH IX
	0303 FD E5          PUSH IY
	0305 CD BF 0B       CALL sub_IntH_play_update
	0308 FD E1          POP IY
	030A DD E1          POP IX
	030C 3A 15 01       LD A,(Frame_counter)
	030F A7             AND A
	0310 28 04          JR Z,ih_1
	0312 3D             DEC A
	0313 32 15 01       LD (Frame_counter),A
ih_1
	0316 D1             POP DE
exit_int_handler
	0317 E1             POP HL
	0318 C1             POP BC
	0319 F1             POP AF
	031A FB             EI
	031B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This initialize a table for the blit routines from 6600 to 66FF:
;;    6600 : 00 10 20 30 ... E0 F0
;;    6610 : 01 11 21 31 ... E1 F1
;;    6620 : 02 12 22 32 ... E2 F2
;;     ...
;;    66E0 : 0E 1E 2E 3E ... EE EF
;;    66F0 : 0F 1F 2F 3F ... EF FF
.Init_6600_table:
	031C 21 00 4C       LD HL,BlitBuff
init_fill_loop
	031F 7D             LD A,L
	0320 0F             RRCA
	0321 0F             RRCA
	0322 0F             RRCA
	0323 0F             RRCA
	0324 77             LD (HL),A
	0325 2C             INC L
	0326 20 F7          JR NZ,init_fill_loop
	0328 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Draws the screen, box per box, all colors black to hides the room drawing process.
;; X extent from 24 (&30/2 = 48/2 = 24) to 208 (< 209 (&D1)) (7 boxes wide)
;; Y extent from 64 (&40) to 255 maxY. (5 boxes high)
X_START 				EQU 	&30
Y_START					EQU		&40

.DrawBlacked:
	0329 3E 08          LD A,8
	032B CD 5D 03       CALL Set_colors
	032E 21 40 30       LD HL,&30 * WORD_HIGH_BYTE + &40			;; first box X extent (min=&30, first block up to &40, 16 pix, 4pix per byts (mode1) so 4 bytes per block);
	0331 11 57 40       LD DE,&40 * WORD_HIGH_BYTE + &57			;; first box Y extent (min=&40, first block up to &57, 23 lines per block)
dbl_loop1
	0334 E5             PUSH HL
	0335 D5             PUSH DE
	0336 CD 0C 15       CALL DrawXSafe
	0339 D1             POP DE
	033A E1             POP HL
	033B 65             LD H,L
	033C 7D             LD A,L
	033D C6 18          ADD A,&18	;; 24
	033F 6F             LD L,A
	0340 FE D1          CP &D1		;; 209
	0342 38 F0          JR c,dbl_loop1
	0344 21 40 30       LD HL,&30 * WORD_HIGH_BYTE + &40
	0347 53             LD D,E
	0348 7B             LD A,E
	0349 C6 2A          ADD A,&2A	;; 42
	034B 5F             LD E,A
	034C 30 E6          JR NC,dbl_loop1
	034E C9             RET

;; -----------------------------------------------------------------------------------------------------------CPC
;; This reconfigure the value of PEN 3 only from the color Scheme numer in A
;; Note : not used in HoH but used in Batman!
Set_pen3_only:
	034F CD 7B 03       CALL Get_color_scheme_value
	0352 23             INC HL
	0353 23             INC HL
	0354 23             INC HL
	0355 01 03 7F       LD BC,GATEARRAY_PENS+3
	0358 1E 01          LD E,1
	035A C3 6E 03       JP program_Gate_array_colors

;; -----------------------------------------------------------------------------------------------------------CPC
;; Reconfigure the CRTC to setup the color Scheme, from the color Scheme
;; number in A (0 to 10, 8 is "All black").
.Set_colors:
	035D CD 7B 03       CALL Get_color_scheme_value
	0360 01 10 7F       LD BC,GATEARRAY_BORDER
	0363 1E 01          LD E,1
	0365 CD 6E 03       CALL program_Gate_array_colors
	0368 2B             DEC HL
	0369 1E 04          LD E,4
	036B 01 00 7F       LD BC,GATEARRAY_PENS
program_Gate_array_colors
	036E ED 49          OUT (C),C
	0370 0C             INC C
	0371 7E             LD A,(HL)
	0372 F6 40          OR GATEARRAY_INKS and WORD_LOW_BYTE
	0374 ED 79          OUT (C),A
	0376 23             INC HL
	0377 1D             DEC E
	0378 20 F4          JR NZ,program_Gate_array_colors
	037A C9             RET

;; -----------------------------------------------------------------------------------------------------------CPC
;; This converts the color Scheme number in A to the pointer in HL
;; on the Color Scheme data.
.Get_color_scheme_value:
	037B 87             ADD A,A
	037C 87             ADD A,A
	037D 11 85 03       LD DE,array_Color_Schemes
	0380 6F             LD L,A
	0381 26 00          LD H,0
	0383 19             ADD HL,DE
	0384 C9             RET

;; -----------------------------------------------------------------------------------------------------------CPC
;; Table for the Color Scheme 4 colors
;; (Index = color Scheme number * 4)
C_BLACK					EQU		&14	;; Firmware color 0, Hardware color &14 (program &54)
C_DKBLUE				EQU		&04
C_BLUE					EQU		&15
C_MAROON				EQU		&1C
C_MAGENTA				EQU		&18
C_MAUVE					EQU		&1D
C_RED					EQU		&0C
C_PURPLE				EQU		&05 ;; or &08
C_MAGENTAVIF			EQU		&0D
C_DKGREEN				EQU		&16
C_DKCYAN				EQU		&06
C_SKYBLUE				EQU		&17
C_DRKYELLOW				EQU		&1E
C_GREY					EQU		&00 ;; or &01
C_PASTELBLUE			EQU		&1F
C_ORANGE				EQU		&0E
C_PINK					EQU		&07
C_DARKPINK				EQU		&0F
C_GREEN					EQU		&12
C_SEAGREEN				EQU		&02	;; or &11
C_CYAN					EQU		&13
C_LIME					EQU		&1A
C_PSTLGREEN				EQU		&19
C_TURQUOISE				EQU		&1B
C_YELLOW				EQU		&0A
C_CREAM					EQU		&03	;; or &09
C_WHITE					EQU		&0B	;; Firmware color 26, Hardware color &0B (program &4B)

COLOR_SCHEME_ALLBLACK	EQU		8

array_Color_Schemes:
	0385 14 0C 15 0A    DEFB  C_BLACK, C_RED,		C_BLUE,		  C_YELLOW		;; Scheme 0
	0389 14 15 0C 13    DEFB  C_BLACK, C_BLUE,		C_RED,		  C_CYAN		;; Scheme 1
	038D 14 1E 0C 1B    DEFB  C_BLACK, C_DRKYELLOW,	C_RED,		  C_TURQUOISE	;; Scheme 2
	0391 14 16 17 0E    DEFB  C_BLACK, C_DKGREEN,	C_SKYBLUE,	  C_ORANGE		;; Scheme 3
	0395 14 0C 0D 1A    DEFB  C_BLACK, C_RED,		C_MAGENTAVIF, C_LIME		;; Scheme 4
	0399 14 15 1E 1B    DEFB  C_BLACK, C_BLUE,		C_DRKYELLOW,  C_TURQUOISE	;; Scheme 5
	039D 14 15 0C 0A    DEFB  C_BLACK, C_BLUE,		C_RED,		  C_YELLOW		;; Scheme 6
	03A1 14 0C 16 03    DEFB  C_BLACK, C_RED,		C_DKGREEN,	  C_CREAM		;; Scheme 7
	03A5 14 14 14 14    DEFB  C_BLACK, C_BLACK,		C_BLACK,	  C_BLACK		;; Scheme 8
	03A9 14 0C 15 0A    DEFB  C_BLACK, C_RED,		C_BLUE,		  C_YELLOW		;; Scheme 9
	03AD 14 16 15 0A    DEFB  C_BLACK, C_DKGREEN,	C_BLUE,		  C_YELLOW		;; Scheme 10

;; -----------------------------------------------------------------------------------------------------------
;; Tap foot if facing us and not moving
TapFoot_Offset			EQU		85    ;; Batman's foot offset in SPR_BM_STANDING sprite

TapFoot:
	03B1 3A E2 56       LD A,(SpriteFlips_buffer + 2 + MOVE_OFFSET) ;; 56E2 : check if the sprite is flipped or not
	03B4 CB 47          BIT 0,A
	03B6 11 DC 03       LD DE,TapFoot_XOR_facing_Right ;; Blink_XOR_facing_right
	03B9 28 03          JR Z,weybw_doit
	03BB 11 D5 03       LD DE,TapFoot_XOR_facing_Left ;; Blink_XOR_facing_Left
weybw_doit
	03BE 21 E5 83       LD HL,img_bm_standing_1 + TapFoot_Offset + MOVE_OFFSET ;; 83E5
	03C1 06 03          LD B,3
	03C3 CD CB 03       CALL TapFoot_XORify
	03C6 06 04          LD B,4
	03C8 21 45 84       LD HL,msk_bm_standing_1 + TapFoot_Offset + MOVE_OFFSET ;; 8445
TapFoot_XORify: ;; BlinkEyes_XORify
	03CB 1A             LD A,(DE)
	03CC AE             XOR (HL)
	03CD 77             LD (HL),A
	03CE 13             INC DE
	03CF 23             INC HL
	03D0 23             INC HL
	03D1 23             INC HL
	03D2 10 F7          DJNZ TapFoot_XORify
	03D4 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Xor table to invert chosen bits and move Batman's foot;
;; One set is used if Batman is facing left, the other for facing right.
TapFoot_XOR_facing_Left: ;; Blink_XOR_facing_Left
	03D5				DEFB	&10, &02, &18, &10, &02, &3A, &18
TapFoot_XOR_facing_Right: ;; Blink_XOR_facing_right
	03DC				DEFB	&08, &40, &18, &08, &40, &5C, &18

;; -----------------------------------------------------------------------------------------------------------
;; Convert the CharCode - &20 to a Symbol data address in DE
Char_code_to_Addr
	03E3 FE 08          CP &08
	03E5 38 08          JR c,cc2a_0
	03E7 D6 04          SUB 4
	03E9 FE 18          CP &18
	03EB 38 02          JR c,cc2a_0
	03ED D6 04          SUB 4
cc2a_0
	03EF 87             ADD A,A
	03F0 87             ADD A,A
	03F1 6F             LD L,A
	03F2 26 00          LD H,0
	03F4 29             ADD HL,HL
	03F5 11 00 B5       LD DE,Char_symbol_data + MOVE_OFFSET ;; B500
	03F8 19             ADD HL,DE
	03F9 EB             EX DE,HL
	03FA C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Provides 2 functions:
;; 	* Clear_View_Buffer: This will be implicitely CALLed by
;; 			the RET of the blit subroutines (blit_sub_subroutine_1 to 6)
;;			It erases the sprite buffer.
;;	* Clear_mem_array_256bytes: This will erase a memory block from the
;;			addr value in HL (Starts at HL, HL++ and until Lmax = &FF)
Clear_View_Buffer
	03FB 21 00 4D       LD HL,ViewBuff ;; 4D00
Clear_mem_array_256bytes
	03FE AF             XOR A
cma_loop
	03FF 77             LD (HL),A
	0400 2C             INC L
	0401 77             LD (HL),A
	0402 2C             INC L
	0403 77             LD (HL),A
	0404 2C             INC L
	0405 77             LD (HL),A
	0406 2C             INC L
	0407 20 F6          JR NZ,cma_loop
	0409 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; BlitScreen copies from ViewBuff to the screen coordinates of
;; ViewYExtent and ViewXExtent. The X extent can be from 1 up to 6 bytes
;; (4 pix per bytes, so up to 24 double pixels).
;; The "Extent" are Max,Min values.
;; At the end, the selected blit subroutine (having been pushed on the stack)
;; is implicitely CALLed by the RET (and so is the Erase function).
;;
;; ViewBuff is expected to be a 6 bytes wide, and the Y origin can
;; be adjusted by overwriting BlitYOffset. It is usually Y_START, but
;; is set to 0 during Draw_Sprite. The X origin is always fixed at 0x30
;; in double-width pixels.
.Blit_screen:
	040A 2A C6 14       LD HL,(ViewXExtent)
	040D 7C             LD A,H
	040E D6 30          SUB X_START
	0410 4F             LD C,A
	0411 7D             LD A,L
	0412 94             SUB H
	0413 1F             RRA
	0414 1F             RRA
	0415 E6 07          AND &07
	0417 3D             DEC A
	0418 87             ADD A,A
	0419 5F             LD E,A
	041A 16 00          LD D,0
	041C 21 3C 04       LD HL,Sub_routines_table
	041F 19             ADD HL,DE
	0420 11 FB 03       LD DE,Clear_View_Buffer
	0423 D5             PUSH DE
	0424 5E             LD E,(HL)
	0425 23             INC HL
	0426 56             LD D,(HL)
	0427 D5             PUSH DE
	0428 2A C8 14       LD HL,(ViewYExtent)
	042B 7D             LD A,L
	042C 94             SUB H
	042D 08             EX AF,AF'
	042E 7C             LD A,H
smc_BlitYOffset_value
	042F D6 40          SUB Y_START
	0431 47             LD B,A
	0432 CD AE 06       CALL Get_screen_mem_addr
	0435 08             EX AF,AF'
	0436 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE ;; 4C00
	0438 21 00 4D       LD HL,ViewBuff ;; 4D00
	043B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This table will return the pointer address for the blit routine to
;; be used, with index = N-1; N being the byte width of the sprite.
.Sub_routines_table:
	043C 48 04          DEFW 	blit_sub_subroutine_1
	043E 81 04          DEFW 	blit_sub_subroutine_2
	0440 CC 04			DEFW 	blit_sub_subroutine_3
	0442 29 05          DEFW 	blit_sub_subroutine_4
	0444 98 05          DEFW 	blit_sub_subroutine_5
	0446 19 06			DEFW 	blit_sub_subroutine_6

;; -----------------------------------------------------------------------------------------------------------
;; All these (6 functions) provide Sprite Bliting functions.
;; They are implicitely CALLed by the final RET of Blit_screen.
;; The "blit_sub_subroutine_1 to 6" copies an N-byte-wide image
;; (in the buffer at HL) to the screen.
;; They use the table initialized at 6600-66FF and a buffer at 6700-67FF.
;; Input: HL = image location; DE = screen location, size in lines in B.
;; Note : HL buffer must be 6 bytes wide.
;; The RET will implicitely CALL the Clear_View_Buffer (that has
;; been pushed on the Stack)
.blit_sub_subroutine_1:
	0448 08         	EX		AF,AF'
	0449 4E             LD C,(HL)
	044A 24             INC H
	044B 0A             LD A,(BC)
	044C AE             XOR (HL)
	044D E6 0F          AND &0F
	044F AE             XOR (HL)
	0450 12             LD (DE),A
	0451 4E             LD C,(HL)
	0452 0A             LD A,(BC)
	0453 25             DEC H
	0454 AE             XOR (HL)
	0455 E6 F0          AND &F0
	0457 AE             XOR (HL)
	0458 1C             INC E
	0459 12             LD (DE),A
	045A 2C             INC L
	045B 2C             INC L
	045C 2C             INC L
	045D 2C             INC L
	045E 2C             INC L
	045F 2C             INC L
	0460 01 FF FF       LD BC,&FFFF
	0463 EB             EX DE,HL
	0464 09             ADD HL,BC
	0465 EB             EX DE,HL
	0466 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE
	0468 7A             LD A,D
	0469 C6 08          ADD A,8
	046B 57             LD D,A
	046C 38 05          JR c,blit_ss_1
	046E 08             EX AF,AF'
	046F 3D             DEC A
	0470 20 D6          JR NZ,blit_sub_subroutine_1
	0472 C9             RET
blit_ss_1
	0473 7B             LD A,E
	0474 C6 50          ADD A,&50
	0476 5F             LD E,A
	0477 8A             ADC A,D
	0478 93             SUB E
	0479 D6 40          SUB &40
	047B 57             LD D,A
	047C 08             EX AF,AF'
	047D 3D             DEC A
	047E 20 C8          JR NZ,blit_sub_subroutine_1
	0480 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.blit_sub_subroutine_2:
	0481 08             EX AF,AF'
	0482 4E             LD C,(HL)
	0483 24             INC H
	0484 0A             LD A,(BC)
	0485 AE             XOR (HL)
	0486 E6 0F          AND &0F
	0488 AE             XOR (HL)
	0489 12             LD (DE),A
	048A 4E             LD C,(HL)
	048B 0A             LD A,(BC)
	048C 25             DEC H
	048D AE             XOR (HL)
	048E E6 F0          AND &F0
	0490 AE             XOR (HL)
	0491 1C             INC E
	0492 12             LD (DE),A
	0493 2C             INC L
	0494 13             INC DE
	0495 4E             LD C,(HL)
	0496 24             INC H
	0497 0A             LD A,(BC)
	0498 AE             XOR (HL)
	0499 E6 0F          AND &0F
	049B AE             XOR (HL)
	049C 12             LD (DE),A
	049D 4E             LD C,(HL)
	049E 0A             LD A,(BC)
	049F 25             DEC H
	04A0 AE             XOR (HL)
	04A1 E6 F0          AND &F0
	04A3 AE             XOR (HL)
	04A4 1C             INC E
	04A5 12             LD (DE),A
	04A6 2C             INC L
	04A7 2C             INC L
	04A8 2C             INC L
	04A9 2C             INC L
	04AA 2C             INC L
	04AB 01 FD FF       LD BC,&FFFD
	04AE EB             EX DE,HL
	04AF 09             ADD HL,BC
	04B0 EB             EX DE,HL
	04B1 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE
	04B3 7A             LD A,D
	04B4 C6 08          ADD A,8
	04B6 57             LD D,A
	04B7 38 05          JR c,blit_ss_2
	04B9 08             EX AF,AF'
	04BA 3D             DEC A
	04BB 20 C4          JR NZ,blit_sub_subroutine_2
	04BD C9             RET
blit_ss_2
	04BE 7B             LD A,E
	04BF C6 50          ADD A,&50
	04C1 5F             LD E,A
	04C2 8A             ADC A,D
	04C3 93             SUB E
	04C4 D6 40          SUB &40
	04C6 57             LD D,A
	04C7 08             EX AF,AF'
	04C8 3D             DEC A
	04C9 20 B6          JR NZ,blit_sub_subroutine_2
	04CB C9             RET

;; -----------------------------------------------------------------------------------------------------------
.blit_sub_subroutine_3:
	04CC 08             EX AF,AF'
	04CD 4E             LD C,(HL)
	04CE 24             INC H
	04CF 0A             LD A,(BC)
	04D0 AE             XOR (HL)
	04D1 E6 0F          AND &0F
	04D3 AE             XOR (HL)
	04D4 12             LD (DE),A
	04D5 4E             LD C,(HL)
	04D6 0A             LD A,(BC)
	04D7 25             DEC H
	04D8 AE             XOR (HL)
	04D9 E6 F0          AND &F0
	04DB AE             XOR (HL)
	04DC 1C             INC E
	04DD 12             LD (DE),A
	04DE 2C             INC L
	04DF 13             INC DE
	04E0 4E             LD C,(HL)
	04E1 24             INC H
	04E2 0A             LD A,(BC)
	04E3 AE             XOR (HL)
	04E4 E6 0F          AND &0F
	04E6 AE             XOR (HL)
	04E7 12             LD (DE),A
	04E8 4E             LD C,(HL)
	04E9 0A             LD A,(BC)
	04EA 25             DEC H
	04EB AE             XOR (HL)
	04EC E6 F0          AND &F0
	04EE AE             XOR (HL)
	04EF 1C             INC E
	04F0 12             LD (DE),A
	04F1 2C             INC L
	04F2 13             INC DE
	04F3 4E             LD C,(HL)
	04F4 24             INC H
	04F5 0A             LD A,(BC)
	04F6 AE             XOR (HL)
	04F7 E6 0F          AND &0F
	04F9 AE             XOR (HL)
	04FA 12             LD (DE),A
	04FB 4E             LD C,(HL)
	04FC 0A             LD A,(BC)
	04FD 25             DEC H
	04FE AE             XOR (HL)
	04FF E6 F0          AND &F0
	0501 AE             XOR (HL)
	0502 1C             INC E
	0503 12             LD (DE),A
	0504 2C             INC L
	0505 2C             INC L
	0506 2C             INC L
	0507 2C             INC L
	0508 01 FB FF       LD BC,&FFFB
	050B EB             EX DE,HL
	050C 09             ADD HL,BC
	050D EB             EX DE,HL
	050E 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE
	0510 7A             LD A,D
	0511 C6 08          ADD A,8
	0513 57             LD D,A
	0514 38 05          JR c,blit_ss_3
	0516 08             EX AF,AF'
	0517 3D             DEC A
	0518 20 B2          JR NZ,blit_sub_subroutine_3
	051A C9             RET
blit_ss_3
	051B 7B             LD A,E
	051C C6 50          ADD A,&50
	051E 5F             LD E,A
	051F 8A             ADC A,D
	0520 93             SUB E
	0521 D6 40          SUB &40
	0523 57             LD D,A
	0524 08             EX AF,AF'
	0525 3D             DEC A
	0526 20 A4          JR NZ,blit_sub_subroutine_3
	0528 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.blit_sub_subroutine_4:
	0529 08             EX AF,AF'
	052A 4E             LD C,(HL)
	052B 24             INC H
	052C 0A             LD A,(BC)
	052D AE             XOR (HL)
	052E E6 0F          AND &0F
	0530 AE             XOR (HL)
	0531 12             LD (DE),A
	0532 4E             LD C,(HL)
	0533 0A             LD A,(BC)
	0534 25             DEC H
	0535 AE             XOR (HL)
	0536 E6 F0          AND &F0
	0538 AE             XOR (HL)
	0539 1C             INC E
	053A 12             LD (DE),A
	053B 2C             INC L
	053C 13             INC DE
	053D 4E             LD C,(HL)
	053E 24             INC H
	053F 0A             LD A,(BC)
	0540 AE             XOR (HL)
	0541 E6 0F          AND &0F
	0543 AE             XOR (HL)
	0544 12             LD (DE),A
	0545 4E             LD C,(HL)
	0546 0A             LD A,(BC)
	0547 25             DEC H
	0548 AE             XOR (HL)
	0549 E6 F0          AND &F0
	054B AE             XOR (HL)
	054C 1C             INC E
	054D 12             LD (DE),A
	054E 2C             INC L
	054F 13             INC DE
	0550 4E             LD C,(HL)
	0551 24             INC H
	0552 0A             LD A,(BC)
	0553 AE             XOR (HL)
	0554 E6 0F          AND &0F
	0556 AE             XOR (HL)
	0557 12             LD (DE),A
	0558 4E             LD C,(HL)
	0559 0A             LD A,(BC)
	055A 25             DEC H
	055B AE             XOR (HL)
	055C E6 F0          AND &F0
	055E AE             XOR (HL)
	055F 1C             INC E
	0560 12             LD (DE),A
	0561 2C             INC L
	0562 13             INC DE
	0563 4E             LD C,(HL)
	0564 24             INC H
	0565 0A             LD A,(BC)
	0566 AE             XOR (HL)
	0567 E6 0F          AND &0F
	0569 AE             XOR (HL)
	056A 12             LD (DE),A
	056B 4E             LD C,(HL)
	056C 0A             LD A,(BC)
	056D 25             DEC H
	056E AE             XOR (HL)
	056F E6 F0          AND &F0
	0571 AE             XOR (HL)
	0572 1C             INC E
	0573 12             LD (DE),A
	0574 2C             INC L
	0575 2C             INC L
	0576 2C             INC L
	0577 01 F9 FF       LD BC,&FFF9
	057A EB             EX DE,HL
	057B 09             ADD HL,BC
	057C EB             EX DE,HL
	057D 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE   ;; 4C(00)
	057F 7A             LD A,D
	0580 C6 08          ADD A,8
	0582 57             LD D,A
	0583 38 05          JR c,blit_ss_4
	0585 08             EX AF,AF'
	0586 3D             DEC A
	0587 20 A0          JR NZ,blit_sub_subroutine_4
	0589 C9             RET
blit_ss_4
	058A 7B             LD A,E
	058B C6 50          ADD A,&50
	058D 5F             LD E,A
	058E 8A             ADC A,D
	058F 93             SUB E
	0590 D6 40          SUB &40
	0592 57             LD D,A
	0593 08             EX AF,AF'
	0594 3D             DEC A
	0595 20 92          JR NZ,blit_sub_subroutine_4
	0597 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.blit_sub_subroutine_5:
	0598 08             EX AF,AF'
	0599 4E             LD C,(HL)
	059A 24             INC H
	059B 0A             LD A,(BC)
	059C AE             XOR (HL)
	059D E6 0F          AND &0F
	059F AE             XOR (HL)
	05A0 12             LD (DE),A
	05A1 4E             LD C,(HL)
	05A2 0A             LD A,(BC)
	05A3 25             DEC H
	05A4 AE             XOR (HL)
	05A5 E6 F0          AND &F0
	05A7 AE             XOR (HL)
	05A8 1C             INC E
	05A9 12             LD (DE),A
	05AA 2C             INC L
	05AB 13             INC DE
	05AC 4E             LD C,(HL)
	05AD 24             INC H
	05AE 0A             LD A,(BC)
	05AF AE             XOR (HL)
	05B0 E6 0F          AND &0F
	05B2 AE             XOR (HL)
	05B3 12             LD (DE),A
	05B4 4E             LD C,(HL)
	05B5 0A             LD A,(BC)
	05B6 25             DEC H
	05B7 AE             XOR (HL)
	05B8 E6 F0          AND &F0
	05BA AE             XOR (HL)
	05BB 1C             INC E
	05BC 12             LD (DE),A
	05BD 2C             INC L
	05BE 13             INC DE
	05BF 4E             LD C,(HL)
	05C0 24             INC H
	05C1 0A             LD A,(BC)
	05C2 AE             XOR (HL)
	05C3 E6 0F          AND &0F
	05C5 AE             XOR (HL)
	05C6 12             LD (DE),A
	05C7 4E             LD C,(HL)
	05C8 0A             LD A,(BC)
	05C9 25             DEC H
	05CA AE             XOR (HL)
	05CB E6 F0          AND &F0
	05CD AE             XOR (HL)
	05CE 1C             INC E
	05CF 12             LD (DE),A
	05D0 2C             INC L
	05D1 13             INC DE
	05D2 4E             LD C,(HL)
	05D3 24             INC H
	05D4 0A             LD A,(BC)
	05D5 AE             XOR (HL)
	05D6 E6 0F          AND &0F
	05D8 AE             XOR (HL)
	05D9 12             LD (DE),A
	05DA 4E             LD C,(HL)
	05DB 0A             LD A,(BC)
	05DC 25             DEC H
	05DD AE             XOR (HL)
	05DE E6 F0          AND &F0
	05E0 AE             XOR (HL)
	05E1 1C             INC E
	05E2 12             LD (DE),A
	05E3 2C             INC L
	05E4 13             INC DE
	05E5 4E             LD C,(HL)
	05E6 24             INC H
	05E7 0A             LD A,(BC)
	05E8 AE             XOR (HL)
	05E9 E6 0F          AND &0F
	05EB AE             XOR (HL)
	05EC 12             LD (DE),A
	05ED 4E             LD C,(HL)
	05EE 0A             LD A,(BC)
	05EF 25             DEC H
	05F0 AE             XOR (HL)
	05F1 E6 F0          AND &F0
	05F3 AE             XOR (HL)
	05F4 1C             INC E
	05F5 12             LD (DE),A
	05F6 2C             INC L
	05F7 2C             INC L
	05F8 01 F7 FF       LD BC,&FFF7
	05FB EB             EX DE,HL
	05FC 09             ADD HL,BC
	05FD EB             EX DE,HL
	05FE 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE
	0600 7A             LD A,D
	0601 C6 08          ADD A,8
	0603 57             LD D,A
	0604 38 05          JR c,blit_ss_5
	0606 08             EX AF,AF'
	0607 3D             DEC A
	0608 20 8E          JR NZ,blit_sub_subroutine_5
	060A C9             RET
blit_ss_5
	060B 7B             LD A,E
	060C C6 50          ADD A,&50
	060E 5F             LD E,A
	060F 8A             ADC A,D
	0610 93             SUB E
	0611 D6 40          SUB &40
	0613 57             LD D,A
	0614 08             EX AF,AF'
	0615 3D             DEC A
	0616 20 80          JR NZ,blit_sub_subroutine_5
	0618 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.blit_sub_subroutine_6:
	0619 08             EX AF,AF'
	061A 4E             LD C,(HL)
	061B 24             INC H
	061C 0A             LD A,(BC)
	061D AE             XOR (HL)
	061E E6 0F          AND &0F
	0620 AE             XOR (HL)
	0621 12             LD (DE),A
	0622 4E             LD C,(HL)
	0623 0A             LD A,(BC)
	0624 25             DEC H
	0625 AE             XOR (HL)
	0626 E6 F0          AND &F0
	0628 AE             XOR (HL)
	0629 1C             INC E
	062A 12             LD (DE),A
	062B 2C             INC L
	062C 13             INC DE
	062D 4E             LD C,(HL)
	062E 24             INC H
	062F 0A             LD A,(BC)
	0630 AE             XOR (HL)
	0631 E6 0F          AND &0F
	0633 AE             XOR (HL)
	0634 12             LD (DE),A
	0635 4E             LD C,(HL)
	0636 0A             LD A,(BC)
	0637 25             DEC H
	0638 AE             XOR (HL)
	0639 E6 F0          AND &F0
	063B AE             XOR (HL)
	063C 1C             INC E
	063D 12             LD (DE),A
	063E 2C             INC L
	063F 13             INC DE
	0640 4E             LD C,(HL)
	0641 24             INC H
	0642 0A             LD A,(BC)
	0643 AE             XOR (HL)
	0644 E6 0F          AND &0F
	0646 AE             XOR (HL)
	0647 12             LD (DE),A
	0648 4E             LD C,(HL)
	0649 0A             LD A,(BC)
	064A 25             DEC H
	064B AE             XOR (HL)
	064C E6 F0          AND &F0
	064E AE             XOR (HL)
	064F 1C             INC E
	0650 12             LD (DE),A
	0651 2C             INC L
	0652 13             INC DE
	0653 4E             LD C,(HL)
	0654 24             INC H
	0655 0A             LD A,(BC)
	0656 AE             XOR (HL)
	0657 E6 0F          AND &0F
	0659 AE             XOR (HL)
	065A 12             LD (DE),A
	065B 4E             LD C,(HL)
	065C 0A             LD A,(BC)
	065D 25             DEC H
	065E AE             XOR (HL)
	065F E6 F0          AND &F0
	0661 AE             XOR (HL)
	0662 1C             INC E
	0663 12             LD (DE),A
	0664 2C             INC L
	0665 13             INC DE
	0666 4E             LD C,(HL)
	0667 24             INC H
	0668 0A             LD A,(BC)
	0669 AE             XOR (HL)
	066A E6 0F          AND &0F
	066C AE             XOR (HL)
	066D 12             LD (DE),A
	066E 4E             LD C,(HL)
	066F 0A             LD A,(BC)
	0670 25             DEC H
	0671 AE             XOR (HL)
	0672 E6 F0          AND &F0
	0674 AE             XOR (HL)
	0675 1C             INC E
	0676 12             LD (DE),A
	0677 2C             INC L
	0678 13             INC DE
	0679 4E             LD C,(HL)
	067A 24             INC H
	067B 0A             LD A,(BC)
	067C AE             XOR (HL)
	067D E6 0F          AND &0F
	067F AE             XOR (HL)
	0680 12             LD (DE),A
	0681 4E             LD C,(HL)
	0682 0A             LD A,(BC)
	0683 25             DEC H
	0684 AE             XOR (HL)
	0685 E6 F0          AND &F0
	0687 AE             XOR (HL)
	0688 1C             INC E
	0689 12             LD (DE),A
	068A 2C             INC L
	068B 01 F5 FF       LD BC,&FFF5
	068E EB             EX DE,HL
	068F 09             ADD HL,BC
	0690 EB             EX DE,HL
	0691 06 4C          LD B,BlitBuff / WORD_HIGH_BYTE
	0693 7A             LD A,D
	0694 C6 08          ADD A,8
	0696 57             LD D,A
	0697 38 06          JR c,blit_ss_6
	0699 08             EX AF,AF'
	069A 3D             DEC A
	069B C2 19 06       JP NZ,blit_sub_subroutine_6
	069E C9             RET
blit_ss_6
	069F 7B             LD A,E
	06A0 C6 50          ADD A,&50
	06A2 5F             LD E,A
	06A3 8A             ADC A,D
	06A4 93             SUB E
	06A5 D6 40          SUB &40
	06A7 57             LD D,A
	06A8 08             EX AF,AF'
	06A9 3D             DEC A
	06AA C2 19 06       JP NZ,blit_sub_subroutine_6
	06AD C9             RET

;; -----------------------------------------------------------------------------------------------------------CPC
;; This is the CPC screen mem address calculation from the pixel we target.
;; Input: B = y (line),
;;        C = x single-pixel coordinate (in mode 1 real x is double that value).
;; Note: top left coord is (0,0) at addr &C000. Mode 1 ppb (pix per byte) is 4
;; This will calculate the Output in DE:
;; 		DE = address = 0xC000 + ((y / 8) * 80) + ((y % 8) * &0800) + (x / ppb)
SCREEN_ADDR_START		EQU		&C000
SCREEN_LENGTH			EQU		&4000

.Get_screen_mem_addr:
	06AE 78             LD A,B
	06AF E6 F8          AND &F8
	06B1 5F             LD E,A
	06B2 0F             RRCA
	06B3 0F             RRCA
	06B4 83             ADD A,E
	06B5 87             ADD A,A
	06B6 CB 10          RL B
	06B8 87             ADD A,A
	06B9 CB 10          RL B
	06BB 87             ADD A,A
	06BC CB 10          RL B
	06BE CB 39          SRL C
	06C0 81             ADD A,C
	06C1 5F             LD E,A
	06C2 88             ADC A,B
	06C3 93             SUB E
	06C4 F6 C0          OR SCREEN_ADDR_START / WORD_HIGH_BYTE
	06C6 57             LD D,A
	06C7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
clr_screen:
	06C8 21 00 C0       LD HL,SCREEN_ADDR_START
	06CB 01 00 40       LD BC,SCREEN_LENGTH
	06CE C3 A8 1B       JP Erase_forward_Block_RAM

;; -----------------------------------------------------------------------------------------------------------
;; Draw a sprite (or char Symbol), with attributes in A (color style).
;; Source in DE, dest coords in BC, size in HL (H height, L width)
;; Attribute "color style" in A (1 = shadow mode, 3 = color mode)
;; (X measured in double-pixels, centered on &80)
;; Top of screen is Y = 8, for once.
.Draw_Sprite:
	06D1 D5             PUSH DE
	06D2 F5             PUSH AF
	06D3 3E F8          LD A,&F8
	06D5 32 30 04       LD (smc_BlitYOffset_value+1),A
	06D8 50             LD D,B
	06D9 78             LD A,B
	06DA 84             ADD A,H
	06DB 5F             LD E,A
	06DC ED 53 C8 14    LD (ViewYExtent),DE
	06E0 79             LD A,C
	06E1 41             LD B,C
	06E2 85             ADD A,L
	06E3 4F             LD C,A
	06E4 ED 43 C6 14    LD (ViewXExtent),BC
	06E8 7D             LD A,L
	06E9 0F             RRCA
	06EA 0F             RRCA
	06EB E6 07          AND &07
	06ED 4F             LD C,A
	06EE F1             POP AF
	06EF 11 00 4D       LD DE,ViewBuff
	06F2 FE 03          CP &03
	06F4 3F             CCF
	06F5 38 05          JR c,drwspr_1
	06F7 FE 01          CP &01
	06F9 20 01          JR NZ,drwspr_1
	06FB 14             INC D
drwspr_1
	06FC 7C             LD A,H
	06FD 08             EX AF,AF'
	06FE 21 00 4E       LD HL,DestBuff
	0701 CD FE 03       CALL Clear_mem_array_256bytes
	0704 08             EX AF,AF'
	0705 EB             EX DE,HL
	0706 D1             POP DE
drwspr_2
	0707 08             EX AF,AF'
	0708 41             LD B,C
drwspr_3
	0709 1A             LD A,(DE)
	070A 77             LD (HL),A
	070B 08             EX AF,AF'
	070C 30 05          JR NC,drwspr_4
	070E 24             INC H
	070F 08             EX AF,AF'
	0710 77             LD (HL),A
	0711 08             EX AF,AF'
	0712 25             DEC H
drwspr_4
	0713 08             EX AF,AF'
	0714 2C             INC L
	0715 13             INC DE
	0716 10 F1          DJNZ drwspr_3
	0718 3E 06          LD A,6
	071A 91             SUB C
	071B 85             ADD A,L
	071C 6F             LD L,A
	071D 08             EX AF,AF'
	071E 3D             DEC A
	071F 20 E6          JR NZ,drwspr_2
	0721 CD 0A 04       CALL Blit_screen
	0724 3E 40          LD A,Y_START
	0726 32 30 04       LD (smc_BlitYOffset_value+1),A
	0729 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This table will be used to convert a keyboard key code to a printable char or string.
;; (scan line * 8) + bitnb, or can be seen as [7:3]=scan line and [2:0]=bitnb.
;; These are therefore listed in the keyboard scan order: line0 to line9 and bit 0 to 7
;; For instance the &AF (line0, bit6) is related to the string ID &AF ie Print_ENTER
;; whereas the &36 (line6, bit0) is the symbol for "6".
KEPMAP_RETURN			EQU		2 * 8 + 2		;; &12 : line=2, bitnb=2, "Enter/Return" key
KEPMAP_4				EQU		2 * 8 + 4		;; &14 : line=1, bitnb=4, "4" key
KEPMAP_SHIFT			EQU		2 * 8 + 5		;; &15 : line=2, bitnb=5, "Shift" key
KEPMAP_ESC				EQU		8 * 8 + 2		;; &42 : line=8, bitnb=2, "ESC" key

.Char_Set:													;;     bit:  0    1    2   3     4   5    6    7
	072A 				DEFB &5E, &60, &5F, &39, &36, &33, &AF, &2E	;; (line 0) "Up", "Right", "Down", "9", "6", "3", "ENTER", "."
	0732 				DEFB &61, &A7, &37, &38, &35, &31, &32, &30 ;; line 1 "Left", "COPY", "7", "8", "5", "1", "2", 0"
	073A 				DEFB &AE, &5B, &AF, &5D, &34, &A2, &5C, &A6 ;; line 2 "CLR", "[", "|RETURN", "]", "4", "|SHIFT", "\", "CTRL"
	0742 				DEFB &5E, &2D, &40, &50, &3B, &3A, &2F, &2E ;; line 3 "^", "-", "@", "P", ";", ":", "/", ","
	074A 				DEFB &30, &39, &4F, &49, &4C, &4B, &4D, &2C ;; line 4 "0", "9", "O", "I", "L", "K", "M", "."
	0752 				DEFB &38, &37, &55, &59, &48, &4A, &4E, &A0 ;; line 5 "8", "7", "U", "Y", "H", "J", "N", "SPACE"
	075A 				DEFB &36, &35, &52, &54, &47, &46, &42, &56 ;; line 6 "6", "5", "R", "T", "G", "F", "B", "V"
	0762 				DEFB &34, &33, &45, &57, &53, &44, &43, &58 ;; line 7 "4", "3", "E", "W", "S", "D", "C", "X"
	076A 				DEFB &31, &32, &A8, &51, &A3, &41, &A5, &5A ;; line 8 "1", "2", ESC, "Q", TAB, "A", LOCK, "Z"
	0772 				DEFB &B9, &BA, &BC, &BB, &B8, &B8, &58, &A4 ;; line 9 JOYU, JOYD, JOYL, JOYR, JOYF, JOYF, (unused), DEL

;; -----------------------------------------------------------------------------------------------------------
;; These are the map codes for the keyboard (CPC 6128) when scanning the
;; keyloard lines, in order to check if the wanted key is pressed or not.
;; For exemple, if, while scanning the keyboard lines, at line1, bit0,
;; (current offset = 1*8 + 0 = 8 (9th value)) the value returned by the
;; AY-3 is "FE", the matching (reg OR map) will result in "FE" (ie. non-FF)
;; indicating that the "Left" arrow key is being pressed. (active low)
;; In other words, if (only) the Right key is pressed, since it corresponds
;; to bit1, the line0 will return &FD (bit1=0, others are 1), hence the &FD
;; at index 1 below, which will match that we want to do "Right" when scanning line0.
.Array_Key_map:		;;		Lft  Rgt  Dwn  Up _ Jmp  Cry  Fir		; line	Left  Rgt   Down  Up   Jump  Carry  Fire
	077A 				DEFB &FF, &FD, &FB, &FE, &FF, &0F, &FF		;; 0 :	___ , RGT , DWN , UP , ___ , (*)  , ___   : (*) Carry : Left or Copy or 7 or 8
	0781 				DEFB &FE, &FF, &FF, &FF, &FD, &0F, &FF		;; 1 : LEFT , ___ , ___ , ___, Copy, (*)  , ___   : (*) Carry : Left or Copy or 7 or 8
	0788 				DEFB &FF, &FF, &FF, &FF, &FF, &EF, &FF		;; 2 :  ___ , ___ , ___ , ___, ___ , CTRL , ___
	078F 				DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF		;; 3 : nothing
	0796 				DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF		;; 4 : nothing
	079D 				DEFB &FF, &FF, &FF, &FF, &7F, &7F, &FF		;; 5 :  ___ , ___ , ___ , ___, Spc ,  Spc , ___
	07A4 				DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF		;; 6 : nothing
	07AB 				DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF		;; 7 : nothing
	07B2 				DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FB		;; 8 :  ___ , ___ , ___ , ___, ___ ,  ___ , Esc
	07B9 				DEFB &FB, &F7, &FD, &FE, &EF, &FF, &FF		;; 9 : JOYL , JOYR, JOYD,JOYU,JOYF ,  ___ , ___

KB_SCAN_LINES			EQU		10

;; -----------------------------------------------------------------------------------------------------------
;; Scan the keyboard;
;; Output: A = 0: a key was pressed;
;;         A != 0: no key pressed;
;; If a key has been pressed, the key map index is in B
;; (B[7:3] = line_number ; B[2:0] = active_bit_number)
.Scan_keyboard:
	07C0 21 C0 55       LD HL,KeyScanningBuffer
	07C3 F3             DI
	07C4 CD 00 09       CALL Keyboard_scanning_setup
	07C7 0E 40          LD C,PSG_REG_READ and WORD_LOW_BYTE
scan_loop_1
	07C9 06 F6          LD B,PSG_KB_LINESEL / WORD_HIGH_BYTE
	07CB ED 49          OUT (C),C
	07CD 06 F4          LD B,PSG_PORTA / WORD_HIGH_BYTE
	07CF ED 78          IN A,(C)
	07D1 3C             INC A
	07D2 20 0E          JR NZ,find_key_pressed
	07D4 23             INC HL
	07D5 0C             INC C
	07D6 79             LD A,C
	07D7 E6 0F          AND &0F
	07D9 FE 0A          CP KB_SCAN_LINES
	07DB 38 EC          JR c,scan_loop_1
	07DD CD 14 09       CALL Keyboard_scanning_ending
	07E0 3C             INC A
	07E1 C9             RET

find_key_pressed
	07E2 3D             DEC A
	07E3 01 7F FF       LD BC,&FF * WORD_HIGH_BYTE + &7F
fkp_1
	07E6 CB 01          RLC C
	07E8 04             INC B
	07E9 1F             RRA
	07EA 38 FA          JR c,fkp_1
	07EC 7D             LD A,L
	07ED D6 C0          SUB &C0
	07EF 87             ADD A,A
	07F0 87             ADD A,A
	07F1 87             ADD A,A
	07F2 80             ADD A,B
	07F3 47             LD B,A
	07F4 D9             EXX
	07F5 CD 14 09       CALL Keyboard_scanning_ending
	07F8 D9             EXX
	07F9 AF             XOR A
	07FA C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; From a Char_Set key code index in B, get the printable character in A.
;; eg. B = &26 will return A = &4D ("M", keyboard scan line 4 in B[7:3],
;; bitnb=6 in B[2:0], or B=(4*8)+6 = 38 = &26)
.GetCharStrId:
	07FB 78             LD A,B
	07FC C6 2A          ADD A,Char_Set and WORD_LOW_BYTE
	07FE 6F             LD L,A
	07FF CE 07          ADC A,Char_Set / WORD_HIGH_BYTE	 ;; 072A
	0801 95             SUB L
	0802 67             LD H,A
	0803 7E             LD A,(HL)
	0804 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Check if a key has been pressed and released.
.Wait_anykey_released:
	0805 CD C0 07       CALL Scan_keyboard
	0808 28 FB          JR Z,Wait_anykey_released
	080A C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Test if Enter of Shift has been pressed
;; Output: Carry=1 (and NZ): no key pressed, A=non-0
;;    else Carry=0 (and Z) and C=0: Enter, C=1: Shift, C=2: other, A=0
.Test_Enter_Shift_keys:
	080B CD C0 07       CALL Scan_keyboard
	080E 37             SCF
	080F C0             RET NZ
	0810 78             LD A,B
	0811 0E 00          LD C,0
	0813 FE 12          CP KEPMAP_RETURN
	0815 C8             RET Z
	0816 0C             INC C
	0817 FE 15          CP KEPMAP_SHIFT
	0819 C8             RET Z
	081A 0C             INC C
	081B AF             XOR A
	081C C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Input: A = key map index we want to point ((scan line * 8) + bitnb)
;; Output: HL : the address of the key map data for the wanted key
.Get_Key_Map_Addr:
	081D 11 7A 07       LD DE,Array_Key_map
	0820 6F             LD L,A
	0821 26 00          LD H,0
	0823 19             ADD HL,DE
	0824 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Used by the "Controls" Menu to list all assigned keys.
.ListControls:
	0825 CD 1D 08       CALL Get_Key_Map_Addr
	0828 0E 00          LD C,0
lc_3
	082A 7E             LD A,(HL)
	082B 06 FF          LD B,&FF
lc_0
	082D FE FF          CP &FF
	082F 28 16          JR Z,lc_2
lc_1
	0831 04             INC B
	0832 37             SCF
	0833 1F             RRA
	0834 38 FB          JR c,lc_1
	0836 E5             PUSH HL
	0837 F5             PUSH AF
	0838 79             LD A,C
	0839 80             ADD A,B
	083A C5             PUSH BC
	083B 47             LD B,A
	083C CD FB 07       CALL GetCharStrId
	083F CD BB 08       CALL PrintCharAttr2
	0842 C1             POP BC
	0843 F1             POP AF
	0844 E1             POP HL
	0845 18 E6          JR lc_0
lc_2
	0847 11 07 00       LD DE,7			;; 7 keys
	084A 19             ADD HL,DE
	084B 79             LD A,C
	084C C6 08          ADD A,&08
	084E 4F             LD C,A
	084F FE 50          CP &50
	0851 38 D7          JR c,lc_3
	0853 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Used by the "Controls" Menu to Edit the assigned keys.
Edit_control
	0854 CD 1D 08       CALL Get_Key_Map_Addr
	0857 E5             PUSH HL
	0858 CD 05 08       CALL Wait_anykey_released
	085B 21 C0 55       LD HL,KeyScanningBuffer
	085E 1E FF          LD E,&FF
	0860 01 0A 00       LD BC,10
	0863 CD AA 1B       CALL Erase_block_val_in_E
ec_wait
	0866 CD C0 07       CALL Scan_keyboard
	0869 20 FB          JR NZ,ec_wait
	086B 78             LD A,B
	086C FE 12          CP KEPMAP_RETURN
	086E 28 23          JR Z,ec_1
ec_0
	0870 79             LD A,C
	0871 A6             AND (HL)
	0872 BE             CP (HL)
	0873 77             LD (HL),A
	0874 28 F0          JR Z,ec_wait
	0876 CD FB 07       CALL GetCharStrId
	0879 CD BB 08       CALL PrintCharAttr2
	087C 2A 12 3C       LD HL,(Char_cursor_pixel_position)
	087F E5             PUSH HL
	0880 3E B1          LD A,Print_Enter2Finish
	0882 CD 15 3C       CALL Print_String
	0885 CD 05 08       CALL Wait_anykey_released
	0888 E1             POP HL
	0889 22 12 3C       LD (Char_cursor_pixel_position),HL
	088C 3E C0          LD A,&C0
	088E 95             SUB L
	088F FE 14          CP &14
	0891 30 D3          JR NC,ec_wait
ec_1
	0893 D9             EXX
	0894 21 C0 55       LD HL,KeyScanningBuffer
	0897 3E FF          LD A,&FF
	0899 06 0A          LD B,KB_SCAN_LINES
ec_1_loop
	089B BE             CP (HL)
	089C 23             INC HL
	089D 20 07          JR NZ,ec_2
	089F 10 FA          DJNZ ec_1_loop
	08A1 D9             EXX
	08A2 3E 12          LD A,&12
	08A4 18 CA          JR ec_0
ec_2
	08A6 E1             POP HL
	08A7 01 07 00       LD BC,7			;; 7 keys
	08AA 3E 0A          LD A,10			;; ??10 lines?
	08AC 11 C0 55       LD DE,KeyScanningBuffer
ec_3
	08AF 08             EX AF,AF'
	08B0 1A             LD A,(DE)
	08B1 77             LD (HL),A
	08B2 13             INC DE
	08B3 09             ADD HL,BC
	08B4 08             EX AF,AF'
	08B5 3D             DEC A
	08B6 20 F7          JR NZ,ec_3
	08B8 C3 05 08       JP Wait_anykey_released

;; -----------------------------------------------------------------------------------------------------------
;; This is used on the "Select the keys" Menu;
;; Note that some of the keys have an attribute attached to them
;; But most keys do not have an attribute attached, so this function
;; will attached a color attribute.
;;   &83 (yellow on that page) for the arrows, the numbers, the dot.
;;        (ie. all keyboard scanline 0 & 1, plus the "4" on scanline 2)
;;   &82 (darkblue) for anything else (again, except if they have an
;;       attribute attached)
;; Input: B = Key scan code index in Char_Set array
;;        A = corresponding printable Character
;; Output: None
.PrintCharAttr2:
	08BB F5             PUSH AF
	08BC 78             LD A,B
	08BD FE 14          CP KEPMAP_4
	08BF 28 06          JR Z,pca2_1
	08C1 FE 10          CP &10
	08C3 3E 82          LD A,Print_Color_Attr_2
	08C5 30 02          JR NC,pca2_2
pca2_1
	08C7 3E 83          LD A,Print_Color_Attr_3
pca2_2
	08C9 CD 15 3C       CALL Print_String
	08CC F1             POP AF
	08CD C3 15 3C       JP Print_String

;; -----------------------------------------------------------------------------------------------------------
;; Read user inputs, scan the keyboard and returns A so that
;; from MSb to LSb ("CFLRDUJ" format, active low bits):
;; 		bit7:Carry, Fire, Left, Right, Down, Up, bit0: Jump
.Get_user_inputs:
	08D0 F3             DI
	08D1 CD 00 09       CALL Keyboard_scanning_setup
	08D4 0E 40          LD C,PSG_REG_READ and WORD_LOW_BYTE
	08D6 3E FF          LD A,&FF
	08D8 21 7A 07       LD HL,Array_Key_map
	08DB 08             EX AF,AF'
gui_0
	08DC 06 F6          LD B,PSG_KB_LINESEL / WORD_HIGH_BYTE
	08DE ED 49          OUT (C),C
	08E0 06 F4          LD B,PSG_PORTA / WORD_HIGH_BYTE
	08E2 ED 58          IN E,(C)
	08E4 06 07          LD B,7			;; 7 keys, 7 bits per line
gui_1
	08E6 7E             LD A,(HL)
	08E7 B3             OR E
	08E8 FE FF          CP &FF
	08EA 3F             CCF
	08EB CB 12          RL D
	08ED 23             INC HL
	08EE 10 F6          DJNZ gui_1
	08F0 08             EX AF,AF'
	08F1 A2             AND D
	08F2 08             EX AF,AF'
	08F3 0C             INC C
	08F4 79             LD A,C
	08F5 FE 4A          CP PSG_REG_READ and WORD_LOW_BYTE + KB_SCAN_LINES
	08F7 38 E3          JR c,gui_0
	08F9 08             EX AF,AF'
	08FA F6 80          OR &80 ;; Head Over heels as a RRCA here
	08FC 0F             RRCA
	08FD 0F             RRCA
	08FE 18 14          JR Keyboard_scanning_ending

;; -----------------------------------------------------------------------------------------------------------
;; This will setup the PSG for keyboard scanning
.Keyboard_scanning_setup:
	0900 01 0E F4       LD BC,PSG_PORTA + &0E							;; select PSG reg14 (Keyboard Reg)
	0903 ED 49          OUT (C),C
	0905 01 00 F6       LD BC,PSG_KB_LINESEL							;; prepare PSG Control (Keyboard feature)
	0908 3E C0          LD A,PSG_REG_SEL and WORD_LOW_BYTE				;; line 0 + &C0
	090A ED 79          OUT (C),A										;; PSG control : reg select (reg value on portA = reg14)
	090C ED 49          OUT (C),C										;; Validate
	090E 04             INC B											;; Port Control BC=F700 : PSG_PORTCTRL
	090F 3E 92          LD A,PSG_PORTA_IN and WORD_LOW_BYTE				;; Port A in, Port C out
	0911 ED 79          OUT (C),A
	0913 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This will end the keyboard scanning in the PSG
Keyboard_scanning_ending:
	0914 01 82 F7       LD BC,PSG_PORTA_OUT
	0917 ED 49          OUT (C),C
	0919 01 00 F6       LD BC,PSG_INACTIVE
	091C ED 49          OUT (C),C
	091E FB             EI
	091F C9             RET

;; -----------------------------------------------------------------------------------------------------------
	0920 00             DEFB 0		;; ref note
	0921 09             DEFB 9
	0922 00             DEFB 0		;; envp num
silence_sound
	0923 00             DEFB 0
	0924 FF FF          DEFB &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0926 14             DEFB 20		;; ref note
	0927 08             DEFB 8
	0928 00             DEFB 0		;; envp num
sound_run
	0929 00             DEFB 0
	092A 				DEFB &81, &B9, &A1, &E1, &FF, &00

;; -----------------------------------------------------------------------------------------------------------
	0930 14             DEFB 20		;; ref note
	0931 08             DEFB 8
	0932 00             DEFB 0		;; envp num
sound_speed_run
	0933 00             DEFB 0
	0934 				DEFB &80, &B8, &A0, &E0, &FF, &00

;; -----------------------------------------------------------------------------------------------------------
	093A 14             DEFB 20		;; ref note
	093B 08             DEFB 8
	093C 00             DEFB 0		;; envp num

	093D 00             DEFB 0
	093E 				DEFB &81, &79, &69, &59, &49, &41, &FF, &00

;; -----------------------------------------------------------------------------------------------------------
	0946 1E				DEFB 30		;; ref note
	0947 08          	DEFB 8
	0948 04             DEFB 4		;; envp num

	0949 00             DEFB 0
	094A 				DEFB &30, &50, &68, &90, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0950 14             DEFB 20		;; ref note
	0951 01				DEFB 1
	0952 06				DEFB 6		;; envp num

	0953 00       		DEFB 0
	0954 54 FF FF       DEFB &54, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0957 14             DEFB 20		;; ref note
	0958 08             DEFB 8
	0959 00             DEFB 0		;; envp num

	095A 00             DEFB 0
	095B 10 FF FF       DEFB &10, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	095E 14             DEFB 20		;; ref note
	095F 08             DEFB 8
	0960 04             DEFB 4		;; envp num

	0961 00             DEFB 0
	0962 18 FF FF     	DEFB &18, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0965 1E				DEFB 30		;; ref note
	0966 08          	DEFB 8
	0967 04             DEFB 4		;; envp num

	0968 00             DEFB 0
	0969 A2 FF FF       DEFB &A2, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	096C 12             DEFB 18		;; ref note
	096D 08             DEFB 8
	096E 02             DEFB 2		;; envp num

	096F 00             DEFB 0
	0970 11 FF FF       DEFB &11, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0973 1E				DEFB 30		;; ref note
	0974 08          	DEFB 8
	0975 04             DEFB 4		;; envp num

	0976 00             DEFB 0
	0977 30 FF FF       DEFB &30, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	097A 14             DEFB 20		;; ref note
	097B 08             DEFB 8
	097C 07             DEFB 7		;; envp num
hq_pickupsong_voice0
	097D 00             DEFB 0
	097E 				DEFB &6A, &8A, &6A, &AA, &92, &AA, &D3, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0987 1E				DEFB 30		;; ref note
	0988 08          	DEFB 8
	0989 07             DEFB 7		;; envp num
hq_pickupsong_voice1
	098A 00             DEFB 0
	098B 				DEFB &3A, &5A, &3A, &7A, &62, &7A, &AB, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0994 14             DEFB 20		;; ref note
	0995 08             DEFB 8
	0996 07             DEFB 7		;; envp num
hq_pickupsong_voice2
	0997 00             DEFB 0
	0998 				DEFB &42, &62, &42, &82, &6A, &82, &AB, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	09A1 19             DEFB 25		;; ref note
	09A2 08             DEFB 8
	09A3 07             DEFB 7		;; envp num
hq_deadlysong_voice0
	09A4 00             DEFB 0
	09A5 				DEFB &92, &8A, &6A, &83, &00, &2A, &32, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	09AE 14             DEFB 20		;; ref note
	09AF 08             DEFB 8
	09B0 07             DEFB 7		;; envp num
hq_deadlysong_voice1
	09B1 00             DEFB 0
	09B2 				DEFB &7A, &72, &52, &6B, &00, &12, &1A, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	09BB 14             DEFB 20		;; ref note
	09BC 08             DEFB 8
	09BD 07             DEFB 7		;; envp num
hq_deadlysong_voice2
	09BE 00             DEFB 0
	09BF 				DEFB &92, &8A, &6A, &83, &00, &2A, &32, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	09C8 1C             DEFB 28		;; ref note
	09C9 08             DEFB 8
	09CA 07             DEFB 7		;; envp num
hq_bmsong_voice0
	09CB 00             DEFB 0
	09CC 				DEFB &32, &32, &2A, &2A, &12, &12, &2A, &2A, &32, &32, &2A, &2A, &12, &12, &2A, &2A
	09DC 				DEFB &5A, &5A, &52, &52, &4A, &4A, &52, &52, &5A, &5A, &52, &52, &4A, &4A, &52, &52
	09EC 				DEFB &32, &32, &2A, &2A, &12, &12, &2A, &2A, &93, &05, &94, &97, &07, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	09FB 14             DEFB 20		;; ref note
	09FC 08             DEFB 8
	09FD 07             DEFB 7		;; envp num
hq_bmsong_voice1
	09FE 00             DEFB 0
	09FF 				DEFB &24, &24, &24, &24, &24, &24, &24, &24, &4C, &4C, &4C, &4C, &4C, &4C, &4C, &4C
	0A0F 				DEFB &5C, &5C, &84, &5C, &73, &05, &74, &77, &07, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
	0A1A 1E				DEFB 30		;; ref note
	0A1B 08         	DEFB 8
	0A1C 07             DEFB 7		;; envp num
hq_bmsong_voice2
	0A1D 00             DEFB 0
	0A1E 				DEFB &8A, &8A, &82, &82, &7A, &7A, &82, &82, &8A, &8A, &82, &82, &7A, &7A, &82, &82
	0A2E 				DEFB &B2, &B2, &AA, &AA, &A2, &A2, &AA, &AA, &B2, &B2, &AA, &AA, &A2, &A2, &AA, &AA
	0A3E 				DEFB &92, &92, &8A, &8A, &82, &82, &8A, &8A, &33, &05, &34, &37, &07, &FF, &FF

;; -----------------------------------------------------------------------------------------------------------
Play_Batman_Theme
	0A4D CD AD 0C       CALL Check_volume_amount	;; if Sound_amount = 0 ("late at night") silence it, else
	0A50 AF             XOR A						;; V0
	0A51 21 CB 09       LD HL,hq_bmsong_voice0
	0A54 CD 88 0B       CALL Snd_Play				;; play
	0A57 3E 01          LD A,1						;; V1
	0A59 21 FE 09       LD HL,hq_bmsong_voice1
	0A5C CD 88 0B       CALL Snd_Play				;; play
	0A5F 3E 02          LD A,2						;; V2
	0A61 21 1D 0A       LD HL,hq_bmsong_voice2
	0A64 C3 97 0A       JP PlayVoice				;; play

GetSpecialSong
	0A67 CD AD 0C       CALL Check_volume_amount	;; if Sound_amount = 0 ("late at night") silence it, else
	0A6A AF             XOR A       				;; V0
	0A6B 21 7D 09       LD HL,hq_pickupsong_voice0
	0A6E CD 88 0B       CALL Snd_Play   			;; play
	0A71 3E 01          LD A,1    	  				;; V1
	0A73 21 8A 09       LD HL,hq_pickupsong_voice1
	0A76 CD 88 0B       CALL Snd_Play   			;; play
	0A79 3E 02          LD A,2    					;; V2
	0A7B 21 97 09       LD HL,hq_pickupsong_voice2
	0A7E 18 17          JR PlayVoice		  		;; play

DeadlyContactSong
	0A80 CD AD 0C       CALL Check_volume_amount    ;; if Sound_amount = 0 ("late at night") silence it, else
	0A83 AF             XOR A        				;; V0
	0A84 21 A4 09       LD HL,hq_deadlysong_voice0
	0A87 CD 88 0B       CALL Snd_Play   			;; play
	0A8A 3E 01          LD A,1       				;; V1
	0A8C 21 B1 09       LD HL,hq_deadlysong_voice1
	0A8F CD 88 0B       CALL Snd_Play    			;; play
	0A92 3E 02          LD A,2       				;; V2
	0A94 21 BE 09       LD HL,hq_deadlysong_voice2
	;; flows in PlayVoice
PlayVoice
	0A97 18 38          JR Snd_Play_curr_voice

;; -----------------------------------------------------------------------------------------------------------
	0A99 21 53 09       LD HL,&0953
	0A9C DD 21 5A 09    LD IX,&095A
	0AA0 CD AD 0C       CALL Check_volume_amount   ;; if Sound_amount = 0 ("late at night") silence it, else
	0AA3 E5             PUSH HL
	0AA4 CD B5 0C       CALL TestHasSomthingToBePlayed
	0AA7 E1             POP HL
	0AA8 C0             RET NZ
	0AA9 3E 01          LD A,1
	0AAB 18 24          JR Snd_Play_curr_voice

;; -----------------------------------------------------------------------------------------------------------
;; *****
	0AAD 21 23 09       LD HL,silence_sound
	0AB0 CD D0 0A       CALL Snd_Play_voice0
	0AB3 21 23 09       LD HL,silence_sound
	0AB6 18 2E          JR Snd_Play_voice2

;; -----------------------------------------------------------------------------------------------------------
;; *****
Sound_ID_Run
	0AB8 21 29 09       LD HL,sound_run
	0ABB 3A D0 1B       LD A,(Counter_speed)
	0ABE A7             AND A
	0ABF 28 0B          JR Z,&0ACC
	0AC1 21 33 09		LD HL,sound_speed_run
	0AC4 DD				DEFB LDIX_OPCODE			;; LD IX,&0949
;; *****
	0AC5 21 49 09    	LD HL, &0949				;; this instruction is cancelled if comming from 0AC4
	0AC8 DD 			DEFB LDIX_OPCODE			;; LD IX,&093D
;; *****
	0AC9 21 3D 09    	LD HL,&093D					;; this instruction is cancelled if comming from 0AC5

	0ACC CD AD 0C       CALL Check_volume_amount
	0ACF C8             RET Z
Snd_Play_voice0
	0AD0 AF             XOR A
Snd_Play_curr_voice:
	0AD1 C3 88 0B       JP Snd_Play

;; -----------------------------------------------------------------------------------------------------------
;; *****
	0AD4 21 6F 09       LD HL,&096F
	0AD7 DD 			DEFB LDIX_OPCODE			;; LD IX,&0976
;; *****
	0AD8 21 76 09    	LD HL,&0976					;; this instruction is cancelled if comming from 0AD4
	0ADB DD 			DEFB LDIX_OPCODE			;; LD IX,&0961
Sound_ID_Menu_Blip
	0ADC 21 61 09		LD HL,&0961					;; this instruction is cancelled if comming from 0AD8
	0ADF DD				DEFB LDIX_OPCODE			;; LD IX,&0968
;; *****
	0AE0 21 68 09		LD HL,&0968					;; this instruction is cancelled if comming from 0ADC
	0AE3 CD AD 0C       CALL Check_volume_amount
Snd_Play_voice2
	0AE6 3E 02          LD A,2
	0AE8 18 E7          JR Snd_Play_curr_voice

;; -----------------------------------------------------------------------------------------------------------
;; AY-3-8912 registers:
AY_A_FINE				EQU 	&00			;; Channel A fine pitch    8-bit (0-255)
AY_A_COARSE				EQU 	&01			;; Channel A coarse pitch  4-bit (0-15)
AY_B_FINE				EQU 	&02			;; Channel B fine pitch    8-bit (0-255)
AY_B_COARSE				EQU 	&03			;; Channel B coarse pitch  4-bit (0-15)
AY_C_FINE				EQU 	&04			;; Channel C fine pitch    8-bit (0-255)
AY_C_COARSE				EQU 	&05			;; Channel C coarse pitch  4-bit (0-15)
AY_NOISE				EQU 	&06			;; Noise pitch             5-bit (0-31)
AY_MIXER				EQU 	&07			;; Mixer                   8-bit
AY_A_VOL				EQU 	&08			;; Channel A volume        4-bit (0-15)
AY_B_VOL				EQU 	&09			;; Channel B volume        4-bit (0-15)
AY_C_VOL				EQU 	&0A			;; Channel C volume        4-bit (0-15)

SONG_PTR				EQU		5

;; -----------------------------------------------------------------------------------------------------------
Voice_0_data
	0AEA 00        		DEFB 0			;; +0	; voice nb
	0AEB 00             DEFB 0			;; +1	; duration offset
	0AEC 00             DEFB 0			;; +2	;
	0AED 00             DEFB 0			;; +3 	; envp ???
	0AEE 00             DEFB 0			;; +4 	; note offset
	0AEF 23 09          DEFW silence_sound      ;; +5&6 SONG_PTR

Voice_1_data
	0AF1 01             DEFB 1			;; +0
	0AF2 00             DEFB 0			;; +1
	0AF3 00       		DEFB 0			;; +2
	0AF4 00             DEFB 0			;; +3
	0AF5 00             DEFB 0			;; +4
	0AF6 23 09          DEFW silence_sound     ;; +5&6 SONG_PTR

Voice_2_data
	0AF8 02				DEFB 2			;; +0
	0AF9 00            	DEFB 0			;; +1
	0AFA 00            	DEFB 0			;; +2
	0AFB 00            	DEFB 0			;; +3
	0AFC 00            	DEFB 0			;; +4
	0AFD 23 09         	DEFW silence_sound      ;; +5&6 SONG_PTR

;; -----------------------------------------------------------------------------------------------------------
Mixer_control
	0AFF 3F             DEFB &3F

Envelope_array:
	0B00 	            DEFB 3, 7, 7, 6, 4, 2, 1, 0		;; enveloppe
Duration_array:
	0B08 	      		DEFB 3, 5, 7, 11, 15, 23, 31, 47 ;; duration fast to slow

;; -----------------------------------------------------------------------------------------------------------
Notes_array
	0B10 77 07          DEFW &0777 ;; id &00 : do oct -2 ; 65.4Hz 1911
	0B12 0C 07          DEFW &070C ;; id &01 : do# oct -2 ; 69.3Hz 1804
	0B14 A7 06          DEFW &06A7 ;; id &02 : re
	0B16 47 06          DEFW &0647 ;; id &03 : re#
	0B18 ED 05          DEFW &05ED ;; id &04 : mi
	0B1A 98 05          DEFW &0598 ;; id &05 : fa
	0B1C 47 05          DEFW &0547 ;; id &06 : fa#
	0B1E FC 04          DEFW &04FC ;; id &07 : sol
	0B20 D4 04          DEFW &04D4 ;; id &08 : sol#
	0B22 70 04          DEFW &0470 ;; id &09 : la
	0B24 31 04          DEFW &0431 ;; id &0A : la#
	0B26 F4 03          DEFW &03F4 ;; id &0B : si
	0B28 BC 03          DEFW &03BC ;; id &0C : do oct -1
	0B2A 86 03          DEFW &0386 ;; id &0D : do#
	0B2C 53 03          DEFW &0353 ;; id &0E : re
	0B2E 24 03          DEFW &0324 ;; id &0F : re#
	0B30 F6 02          DEFW &02F6 ;; id &10 : mi
	0B32 CC 02          DEFW &02CC ;; id &11 : fa
	0B34 A4 02          DEFW &02A4 ;; id &12 : fa#
	0B36 7E 02          DEFW &027E ;; id &13 : sol
	0B38 5A 02          DEFW &025A ;; id &14 : sol#
	0B3A 38 02          DEFW &0238 ;; id &15 : la
	0B3C 18 02          DEFW &0218 ;; id &16 : la#
	0B3E FA 01          DEFW &01FA ;; id &17 : si
	0B40 DE 01          DEFW &01DE ;; id &18 : do oct 0
	0B42 C3 01          DEFW &01C3 ;; id &19 : do#
	0B44 AA 01          DEFW &01AA ;; id &1A : re
	0B46 92 01          DEFW &0192 ;; id &1B : re#
	0B48 7B 01          DEFW &017B ;; id &1C : mi
	0B4A 66 01          DEFW &0166 ;; id &1D : fa
	0B4C 52 01          DEFW &0152 ;; id &1E : fa#
	0B4E 3F 01          DEFW &013F ;; id &1F : sol
	0B50 2D 01          DEFW &012D ;; id &20 : sol#
	0B52 1C 01          DEFW &011C ;; id &21 : la
	0B54 0C 01          DEFW &010C ;; id &22 : la#
	0B56 FD 00          DEFW &00FD ;; id &23 : si
	0B58 EF 00          DEFW &00EF ;; id &24 : do oct 1
	0B5A E1 00          DEFW &00E1 ;; id &25 : do#
	0B5C D5 00          DEFW &00D5 ;; id &26 : re
	0B5E C9 00          DEFW &00C9 ;; id &27 : re#
	0B60 BE 00          DEFW &00BE ;; id &28 : mi
	0B62 B3 00          DEFW &00B3 ;; id &29 : fa
	0B64 A9 00          DEFW &00A9 ;; id &2A : fa#
	0B66 9F 00          DEFW &009F ;; id &2B : sol
	0B68 96 00          DEFW &0096 ;; id &2C : sol#
	0B6A 8E 00          DEFW &008E ;; id &2D : la
	0B6C 86 00          DEFW &0086 ;; id &2E : la#
	0B6E 7F 00          DEFW &007F ;; id &2F : si
	0B70 77 00          DEFW &0077 ;; id &30 : do oct 2
	0B72 71 00          DEFW &0071 ;; id &31 : do#
	0B74 6A 00          DEFW &006A ;; id &32 : re
	0B76 64 00          DEFW &0064 ;; id &33 : re#
	0B78 5F 00          DEFW &005F ;; id &34 : mi
	0B7A 59 00          DEFW &0059 ;; id &35 : fa
	0B7C 54 00          DEFW &0054 ;; id &36 : fa#
	0B7E 50 00          DEFW &0050 ;; id &37 : sol
	0B80 4B 00          DEFW &004B ;; id &38 : sol#
	0B82 47 00          DEFW &0047 ;; id &39 : la
	0B84 43 00          DEFW &0043 ;; id &3A : la#
	0B86 3F 00          DEFW &003F ;; id &3B (59) ; si oct2 1975.5Hz

;; -----------------------------------------------------------------------------------------------------------
Snd_Play
	0B88 DD 21 EA 0A    LD IX,Voice_0_data
	0B8C EB             EX DE,HL				;;
	0B8D A7             AND A					;; test voice 0
	0B8E 28 0B          JR Z,Snd_Program		;; if so, play
	0B90 3D             DEC A					;; test voice 1
	0B91 DD 21 F1 0A    LD IX,Voice_1_data
	0B95 28 04          JR Z,Snd_Program		;; if so play
	0B97 DD 21 F8 0A    LD IX,Voice_2_data 		;; else voice2
Snd_Program
	0B9B DD 6E 05       LD L,(IX+SONG_PTR)
	0B9E DD 66 06       LD H,(IX+SONG_PTR+1)	;; HL = pointer on current song data
	0BA1 AF             XOR A					;; clear Carry and reset byte pointer to 0
	0BA2 ED 52          SBC HL,DE				;; diff HL and DE
	0BA4 C8             RET Z					;; if they were equal, leave
	0BA5 12             LD (DE),A				;; else 1st byte is voice num ## &09CB
	0BA6 F3             DI
	0BA7 DD 73 05       LD (IX+SONG_PTR),E		;; ## IX=&0AEA (v0), &0AF1 (v1), &0A1D (v2)
	0BAA DD 72 06       LD (IX+SONG_PTR+1),D
	0BAD DD 77 01       LD (IX+1),A				;; byte pointer reset
	0BB0 FB             EI
	0BB1 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Silence_all_Voices:
	0BB2 21 23 09       LD HL,silence_sound
	0BB5 22 EF 0A       LD (Voice_0_data+SONG_PTR),HL
	0BB8 22 F6 0A       LD (Voice_1_data+SONG_PTR),HL
	0BBB 22 FD 0A       LD (Voice_2_data+SONG_PTR),HL
	0BBE C9             RET

;; -----------------------------------------------------------------------------------------------------------
sub_IntH_play_update
	0BBF FD 21 EA 0A    LD IY,Voice_0_data
	0BC3 06 03          LD B,3					;; 3 voices ??
pu_loopv
	0BC5 FD 6E 05       LD L,(IY+SONG_PTR)
	0BC8 FD 66 06       LD H,(IY+SONG_PTR+1)
	0BCB E5             PUSH HL
	0BCC DD E1          POP IX					;; ## 09CB
	0BCE C5             PUSH BC					;; ## 032F
	0BCF CD DB 0B       CALL &0BDB
	0BD2 C1             POP BC					;; ## 032F
	0BD3 11 07 00       LD DE,7					;; length of data array ??
	0BD6 FD 19          ADD IY,DE				;; next Voice_x_data
	0BD8 10 EB          DJNZ pu_loopv			;; loop all voices
	0BDA C9             RET

;; -----------------------------------------------------------------------------------------------------------
	0BDB FD 7E 01       LD A,(IY+1)				;; ## 0AEA get byte pointer
	0BDE A7             AND A
	0BDF C2 84 0C       JP NZ,&0C84				;; not 0 (already started), jump 0c84

	0BE2 DD E5          PUSH IX					;; else, starting
	0BE4 E1             POP HL					;; ## &09CB
	0BE5 34             INC (HL) 				;; point on next data
	0BE6 7E             LD A,(HL)				;; read data
	0BE7 85             ADD A,L
	0BE8 6F             LD L,A
	0BE9 8C             ADC A,H
	0BEA 95             SUB L
	0BEB 67             LD H,A					;; HL = HL + A (byte nb)
	0BEC 7E             LD A,(HL)				;; read song note
	0BED FE FF          CP &FF
	0BEF 20 29          JR NZ,&0C1A				;; not &FF, jump
	0BF1 23             INC HL					;; else read next byte
	0BF2 BE             CP (HL)					;; CP avec un 2eme &FF
	0BF3 28 06          JR Z,&0BFB				;; if &FF jump (end) 0BFB
	0BF5 DD 36 00 00    LD (IX+0),0
	0BF9 18 E7          JR &0BE2

	0BFB 21 23 09       LD HL,silence_sound
	0BFE 36 00          LD (HL),0
	0C00 FD 75 05       LD (IY+SONG_PTR),L
	0C03 FD 74 06       LD (IY+SONG_PTR+1),H

	0C06 FD 7E 03       LD A,(IY+3)
	0C09 A7             AND A
	0C0A C8             RET Z
	0C0B FD 35 03       DEC (IY+3)

	0C0E FD 5E 03       LD E,(IY+3)	;; AY3 value
	0C11 FD 7E 00       LD A,(IY+0)	;; voice num
	0C14 C6 08          ADD A,&08
	0C16 57             LD D,A	     ;; AY3 reg (8: AY_A_VOL, 9: AY_B_VOL, 10: AY_C_VOL)
	0C17 C3 93 0C       JP SubF_Write_AY3Reg

	0C1A 4F             LD C,A		;; data ##&32 = 6 (offset from refnote) << 3 + 2 (duration index)
	0C1B E6 07          AND &07		;; 1st song byte [7:3] ; [2:0]=idx Duration_array array array(2) = 7
	0C1D 5F             LD E,A
	0C1E 16 00          LD D,0
	0C20 21 08 0B       LD HL,Duration_array
	0C23 19             ADD HL,DE
	0C24 7E             LD A,(HL)
	0C25 FD 77 01       LD (IY+1),A			;; &0AEA+1
	0C28 79             LD A,C				;; first byte data
	0C29 E6 F8          AND &F8
	0C2B 0F             RRCA
	0C2C 0F             RRCA
	0C2D 0F             RRCA				;; [7:3] >> 3 put [7:3] as [4:0]
	0C2E FD 77 04       LD (IY+4),A 		;; offset note = &30 >> 3 = 6
	0C31 28 D3          JR Z,&0C06
	0C33 DD 86 FD       ADD A,(IX-3) 		;; refnote	## &09CB-3 = &1C+6 = &22
	0C36 6F             LD L,A				;; ## HL = &22
	0C37 26 00          LD H,0
	0C39 29             ADD HL,HL   		;; HL = 2*A ## &44
	0C3A 11 10 0B       LD DE,Notes_array
	0C3D 19             ADD HL,DE			;; HL = Notes_array + 2*index # &0B54
	0C3E 5E             LD E,(HL)  			;; AY3 value ## &0C
	0C3F 23             INC HL
	0C40 66             LD H,(HL) 			;; AY3 next value  ## &0155
	0C41 FD 7E 00       LD A,(IY+0)			;; voice num
	0C44 87             ADD A,A				;; voice num x2
	0C45 57             LD D,A     			;; AY3 reg (0 : AY_A_FINE, 2 : AY_B_FINE or 4 : AY_C_FINE)
	0C46 CD 93 0C       CALL SubF_Write_AY3Reg
	0C49 14             INC D				;; next AY3 reg (0 : AY_A_COARSE, 2 : AY_B_COARSE or 4 : AY_C_COARSE)
	0C4A 5C             LD E,H				;; AY3 value
	0C4B CD 93 0C       CALL SubF_Write_AY3Reg
	0C4E FD 36 02 00    LD (IY+2),0			;; &0AEA+2
	0C52 FD 46 00       LD B,(IY+0)			;;
	0C55 04             INC B
	0C56 DD 7E FE       LD A,(IX-2)			;; &09CB-2 ##8
	0C59 0F             RRCA				;; >> 1
	0C5A 0E 84          LD C,&84

	0C5C 07             RLCA				;; << 1
	0C5D CB 01          RLC C				;; &09
	0C5F 10 FB          DJNZ &0C5C
	0C61 21 FF 0A       LD HL,&0AFF
	0C64 AE             XOR (HL)    		;; &37
	0C65 A1             AND C				;; &01
	0C66 AE             XOR (HL)			;; &3E
	0C67 77             LD (HL),A
	0C68 5F             LD E,A				;; AY3 value
	0C69 16 07          LD D,7				;; AY3 reg : AY_MIXER ; D/E=&07/&3E en voice0
	0C6B CD 93 0C       CALL SubF_Write_AY3Reg

	0C6E FD 7E 02       LD A,(IY+2)			;; &0AEA ## 0
	0C71 FE 08          CP &08
	0C73 D0             RET NC
	0C74 6F             LD L,A
	0C75 26 00          LD H,0				;; idx b00 = 0
	0C77 11 00 0B       LD DE,Envelope_array
	0C7A 19             ADD HL,DE			;; HL = &0B00 + A
	0C7B 7E             LD A,(HL)			;; value 3
	0C7C DD 86 FF       ADD A,(IX-1)		;; &09CB-1
	0C7F FD 77 03       LD (IY+3),A			;; &0aea+3
	0C82 18 8A          JR &0C0E

	0C84 FD 35 01       DEC (IY+1)
	0C87 FD 7E 04       LD A,(IY+4)
	0C8A A7             AND A
	0C8B CA 06 0C       JP Z,&0C06
	0C8E FD 34 02       INC (IY+2)
	0C91 18 DB          JR &0C6E

;; -----------------------------------------------------------------------------------------------------------
;; Sub function for Write_AY3_Registers (write one AY-3 reg)
;; Input: D = reg number, E = value
.SubF_Write_AY3Reg:
	0C93 06 F4          LD B,PSG_PORTA	/ WORD_HIGH_BYTE
	0C95 ED 51          OUT (C),D
	0C97 01 00 F6       LD BC,PSG_INACTIVE
	0C9A 3E C0          LD A,PSG_REG_SEL and WORD_LOW_BYTE
	0C9C ED 79          OUT (C),A
	0C9E ED 49          OUT (C),C
	0CA0 3E 80          LD A,PSG_REG_WRITE and WORD_LOW_BYTE
	0CA2 06 F4          LD B,PSG_PORTA / WORD_HIGH_BYTE
	0CA4 ED 59          OUT (C),E
	0CA6 06 F6          LD B,PSG_PORTC / WORD_HIGH_BYTE
	0CA8 ED 79          OUT (C),A
	0CAA ED 49          OUT (C),C
	0CAC C9             RET

;; -----------------------------------------------------------------------------------------------------------
Check_volume_amount
	0CAD 3A 10 01       LD A,(Sound_amount)
	0CB0 FE 01          CP &01			;; amount 1 or 2, ret NC
	0CB2 D0             RET NC
	0CB3 E1             POP HL			;; else Silence
	0CB4 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Returns Zero if nothing to play, NZ if something to play
TestHasSomthingToBePlayed
	0CB5 2A F6 0A       LD HL,(&0AF6)
	0CB8 11 23 09       LD DE,silence_sound
	0CBB A7             AND A
	0CBC ED 52          SBC HL,DE
	0CBE C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; BlitMaskNofM does a masked blit into a dest buffer assumed 6 bytes wide.
;; The blit is from a source N bytes wide in a buffer M bytes wide.
;; The height is in B.
;; Destination is BC', source image is in DE', mask is in HL'.
BlitMask1of3
	0CBF D9             EXX
	0CC0 0A             LD A,(BC)
	0CC1 A6             AND (HL)
	0CC2 EB             EX DE,HL
	0CC3 B6             OR (HL)
	0CC4 02             LD (BC),A
	0CC5 04             INC B
	0CC6 0A             LD A,(BC)
	0CC7 B6             OR (HL)
	0CC8 EB             EX DE,HL
	0CC9 A6             AND (HL)
	0CCA 02             LD (BC),A
	0CCB 05             DEC B
	0CCC 23             INC HL
	0CCD 13             INC DE
	0CCE 79             LD A,C
	0CCF C6 06          ADD A,6
	0CD1 4F             LD C,A
	0CD2 23             INC HL
	0CD3 13             INC DE
	0CD4 23             INC HL
	0CD5 13             INC DE
	0CD6 D9             EXX
	0CD7 10 E6          DJNZ BlitMask1of3
	0CD9 C9             RET

BlitMask2of3
	0CDA D9             EXX
	0CDB 0A             LD A,(BC)
	0CDC A6             AND (HL)
	0CDD EB             EX DE,HL
	0CDE B6             OR (HL)
	0CDF 02             LD (BC),A
	0CE0 04             INC B
	0CE1 0A             LD A,(BC)
	0CE2 B6             OR (HL)
	0CE3 EB             EX DE,HL
	0CE4 A6             AND (HL)
	0CE5 02             LD (BC),A
	0CE6 05             DEC B
	0CE7 0C             INC C
	0CE8 23             INC HL
	0CE9 13             INC DE
	0CEA 0A             LD A,(BC)
	0CEB A6             AND (HL)
	0CEC EB             EX DE,HL
	0CED B6             OR (HL)
	0CEE 02             LD (BC),A
	0CEF 04             INC B
	0CF0 0A             LD A,(BC)
	0CF1 B6             OR (HL)
	0CF2 EB             EX DE,HL
	0CF3 A6             AND (HL)
	0CF4 02             LD (BC),A
	0CF5 05             DEC B
	0CF6 23             INC HL
	0CF7 13             INC DE
	0CF8 79             LD A,C
	0CF9 C6 05          ADD A,5
	0CFB 4F             LD C,A
	0CFC 23             INC HL
	0CFD 13             INC DE
	0CFE D9             EXX
	0CFF 10 D9          DJNZ BlitMask2of3
	0D01 C9             RET

BlitMask3of3
	0D02 D9             EXX
	0D03 0A             LD A,(BC)
	0D04 A6             AND (HL)
	0D05 EB             EX DE,HL
	0D06 B6             OR (HL)
	0D07 02             LD (BC),A
	0D08 04             INC B
	0D09 0A             LD A,(BC)
	0D0A B6             OR (HL)
	0D0B EB             EX DE,HL
	0D0C A6             AND (HL)
	0D0D 02             LD (BC),A
	0D0E 05             DEC B
	0D0F 0C             INC C
	0D10 23             INC HL
	0D11 13             INC DE
	0D12 0A             LD A,(BC)
	0D13 A6             AND (HL)
	0D14 EB             EX DE,HL
	0D15 B6             OR (HL)
	0D16 02             LD (BC),A
	0D17 04             INC B
	0D18 0A             LD A,(BC)
	0D19 B6             OR (HL)
	0D1A EB             EX DE,HL
	0D1B A6             AND (HL)
	0D1C 02             LD (BC),A
	0D1D 05             DEC B
	0D1E 0C             INC C
	0D1F 23             INC HL
	0D20 13             INC DE
	0D21 0A             LD A,(BC)
	0D22 A6             AND (HL)
	0D23 EB             EX DE,HL
	0D24 B6             OR (HL)
	0D25 02             LD (BC),A
	0D26 04             INC B
	0D27 0A             LD A,(BC)
	0D28 B6             OR (HL)
	0D29 EB             EX DE,HL
	0D2A A6             AND (HL)
	0D2B 02             LD (BC),A
	0D2C 05             DEC B
	0D2D 23             INC HL
	0D2E 13             INC DE
	0D2F 79             LD A,C
	0D30 C6 04          ADD A,4
	0D32 4F             LD C,A
	0D33 D9             EXX
	0D34 10 CC          DJNZ BlitMask3of3
	0D36 C9             RET

BlitMask1of4
	0D37 D9             EXX
	0D38 0A             LD A,(BC)
	0D39 A6             AND (HL)
	0D3A EB             EX DE,HL
	0D3B B6             OR (HL)
	0D3C 02             LD (BC),A
	0D3D 04             INC B
	0D3E 0A             LD A,(BC)
	0D3F B6             OR (HL)
	0D40 EB             EX DE,HL
	0D41 A6             AND (HL)
	0D42 02             LD (BC),A
	0D43 05             DEC B
	0D44 23             INC HL
	0D45 13             INC DE
	0D46 79             LD A,C
	0D47 C6 06          ADD A,6
	0D49 4F             LD C,A
	0D4A 23             INC HL
	0D4B 13             INC DE
	0D4C 23             INC HL
	0D4D 13             INC DE
	0D4E 23             INC HL
	0D4F 13             INC DE
	0D50 D9             EXX
	0D51 10 E4          DJNZ BlitMask1of4
	0D53 C9             RET

BlitMask2of4
	0D54 D9             EXX
	0D55 0A             LD A,(BC)
	0D56 A6             AND (HL)
	0D57 EB             EX DE,HL
	0D58 B6             OR (HL)
	0D59 02             LD (BC),A
	0D5A 04             INC B
	0D5B 0A             LD A,(BC)
	0D5C B6             OR (HL)
	0D5D EB             EX DE,HL
	0D5E A6             AND (HL)
	0D5F 02             LD (BC),A
	0D60 05             DEC B
	0D61 0C             INC C
	0D62 23             INC HL
	0D63 13             INC DE
	0D64 0A             LD A,(BC)
	0D65 A6             AND (HL)
	0D66 EB             EX DE,HL
	0D67 B6             OR (HL)
	0D68 02             LD (BC),A
	0D69 04             INC B
	0D6A 0A             LD A,(BC)
	0D6B B6             OR (HL)
	0D6C EB             EX DE,HL
	0D6D A6             AND (HL)
	0D6E 02             LD (BC),A
	0D6F 05             DEC B
	0D70 23             INC HL
	0D71 13             INC DE
	0D72 79             LD A,C
	0D73 C6 05          ADD A,5
	0D75 4F             LD C,A
	0D76 23             INC HL
	0D77 13             INC DE
	0D78 23             INC HL
	0D79 13             INC DE
	0D7A D9             EXX
	0D7B 10 D7          DJNZ BlitMask2of4
	0D7D C9             RET

BlitMask3of4
	0D7E D9             EXX
	0D7F 0A             LD A,(BC)
	0D80 A6             AND (HL)
	0D81 EB             EX DE,HL
	0D82 B6             OR (HL)
	0D83 02             LD (BC),A
	0D84 04             INC B
	0D85 0A             LD A,(BC)
	0D86 B6             OR (HL)
	0D87 EB             EX DE,HL
	0D88 A6             AND (HL)
	0D89 02             LD (BC),A
	0D8A 05             DEC B
	0D8B 0C             INC C
	0D8C 23             INC HL
	0D8D 13             INC DE
	0D8E 0A             LD A,(BC)
	0D8F A6             AND (HL)
	0D90 EB             EX DE,HL
	0D91 B6             OR (HL)
	0D92 02             LD (BC),A
	0D93 04             INC B
	0D94 0A             LD A,(BC)
	0D95 B6             OR (HL)
	0D96 EB             EX DE,HL
	0D97 A6             AND (HL)
	0D98 02             LD (BC),A
	0D99 05             DEC B
	0D9A 0C             INC C
	0D9B 23             INC HL
	0D9C 13             INC DE
	0D9D 0A             LD A,(BC)
	0D9E A6             AND (HL)
	0D9F EB             EX DE,HL
	0DA0 B6             OR (HL)
	0DA1 02             LD (BC),A
	0DA2 04             INC B
	0DA3 0A             LD A,(BC)
	0DA4 B6             OR (HL)
	0DA5 EB             EX DE,HL
	0DA6 A6             AND (HL)
	0DA7 02             LD (BC),A
	0DA8 05             DEC B
	0DA9 23             INC HL
	0DAA 13             INC DE
	0DAB 79             LD A,C
	0DAC C6 04          ADD A,4
	0DAE 4F             LD C,A
	0DAF 23             INC HL
	0DB0 13             INC DE
	0DB1 D9             EXX
	0DB2 10 CA          DJNZ BlitMask3of4
	0DB4 C9             RET

BlitMask4of4
	0DB5 D9             EXX
	0DB6 0A             LD A,(BC)
	0DB7 A6             AND (HL)
	0DB8 EB             EX DE,HL
	0DB9 B6             OR (HL)
	0DBA 02             LD (BC),A
	0DBB 04             INC B
	0DBC 0A             LD A,(BC)
	0DBD B6             OR (HL)
	0DBE EB             EX DE,HL
	0DBF A6             AND (HL)
	0DC0 02             LD (BC),A
	0DC1 05             DEC B
	0DC2 0C             INC C
	0DC3 23             INC HL
	0DC4 13             INC DE
	0DC5 0A             LD A,(BC)
	0DC6 A6             AND (HL)
	0DC7 EB             EX DE,HL
	0DC8 B6             OR (HL)
	0DC9 02             LD (BC),A
	0DCA 04             INC B
	0DCB 0A             LD A,(BC)
	0DCC B6             OR (HL)
	0DCD EB             EX DE,HL
	0DCE A6             AND (HL)
	0DCF 02             LD (BC),A
	0DD0 05             DEC B
	0DD1 0C             INC C
	0DD2 23             INC HL
	0DD3 13             INC DE
	0DD4 0A             LD A,(BC)
	0DD5 A6             AND (HL)
	0DD6 EB             EX DE,HL
	0DD7 B6             OR (HL)
	0DD8 02             LD (BC),A
	0DD9 04             INC B
	0DDA 0A             LD A,(BC)
	0DDB B6             OR (HL)
	0DDC EB             EX DE,HL
	0DDD A6             AND (HL)
	0DDE 02             LD (BC),A
	0DDF 05             DEC B
	0DE0 0C             INC C
	0DE1 23             INC HL
	0DE2 13             INC DE
	0DE3 0A             LD A,(BC)
	0DE4 A6             AND (HL)
	0DE5 EB             EX DE,HL
	0DE6 B6             OR (HL)
	0DE7 02             LD (BC),A
	0DE8 04             INC B
	0DE9 0A             LD A,(BC)
	0DEA B6             OR (HL)
	0DEB EB             EX DE,HL
	0DEC A6             AND (HL)
	0DED 02             LD (BC),A
	0DEE 05             DEC B
	0DEF 23             INC HL
	0DF0 13             INC DE
	0DF1 0C             INC C
	0DF2 0C             INC C
	0DF3 0C             INC C
	0DF4 D9             EXX
	0DF5 10 BE          DJNZ BlitMask4of4
	0DF7 C9             RET

BlitMask1of5
	0DF8 D9             EXX
	0DF9 0A             LD A,(BC)
	0DFA A6             AND (HL)
	0DFB EB             EX DE,HL
	0DFC B6             OR (HL)
	0DFD 02             LD (BC),A
	0DFE 04             INC B
	0DFF 0A             LD A,(BC)
	0E00 B6             OR (HL)
	0E01 EB             EX DE,HL
	0E02 A6             AND (HL)
	0E03 02             LD (BC),A
	0E04 05             DEC B
	0E05 23             INC HL
	0E06 13             INC DE
	0E07 79             LD A,C
	0E08 C6 06          ADD A,6
	0E0A 4F             LD C,A
	0E0B 23             INC HL
	0E0C 13             INC DE
	0E0D 23             INC HL
	0E0E 13             INC DE
	0E0F 23             INC HL
	0E10 13             INC DE
	0E11 23             INC HL
	0E12 13             INC DE
	0E13 D9             EXX
	0E14 10 E2          DJNZ BlitMask1of5
	0E16 C9             RET

BlitMask2of5
	0E17 D9             EXX
	0E18 0A             LD A,(BC)
	0E19 A6             AND (HL)
	0E1A EB             EX DE,HL
	0E1B B6             OR (HL)
	0E1C 02             LD (BC),A
	0E1D 04             INC B
	0E1E 0A             LD A,(BC)
	0E1F B6             OR (HL)
	0E20 EB             EX DE,HL
	0E21 A6             AND (HL)
	0E22 02             LD (BC),A
	0E23 05             DEC B
	0E24 0C             INC C
	0E25 23             INC HL
	0E26 13             INC DE
	0E27 0A             LD A,(BC)
	0E28 A6             AND (HL)
	0E29 EB             EX DE,HL
	0E2A B6             OR (HL)
	0E2B 02             LD (BC),A
	0E2C 04             INC B
	0E2D 0A             LD A,(BC)
	0E2E B6             OR (HL)
	0E2F EB             EX DE,HL
	0E30 A6             AND (HL)
	0E31 02             LD (BC),A
	0E32 05             DEC B
	0E33 23             INC HL
	0E34 13             INC DE
	0E35 79             LD A,C
	0E36 C6 05          ADD A,5
	0E38 4F             LD C,A
	0E39 23             INC HL
	0E3A 13             INC DE
	0E3B 23             INC HL
	0E3C 13             INC DE
	0E3D 23             INC HL
	0E3E 13             INC DE
	0E3F D9             EXX
	0E40 10 D5          DJNZ BlitMask2of5
	0E42 C9             RET

BlitMask3of5
	0E43 D9             EXX
	0E44 0A             LD A,(BC)
	0E45 A6             AND (HL)
	0E46 EB             EX DE,HL
	0E47 B6             OR (HL)
	0E48 02             LD (BC),A
	0E49 04             INC B
	0E4A 0A             LD A,(BC)
	0E4B B6             OR (HL)
	0E4C EB             EX DE,HL
	0E4D A6             AND (HL)
	0E4E 02             LD (BC),A
	0E4F 05             DEC B
	0E50 0C             INC C
	0E51 23             INC HL
	0E52 13             INC DE
	0E53 0A             LD A,(BC)
	0E54 A6             AND (HL)
	0E55 EB             EX DE,HL
	0E56 B6             OR (HL)
	0E57 02             LD (BC),A
	0E58 04             INC B
	0E59 0A             LD A,(BC)
	0E5A B6             OR (HL)
	0E5B EB             EX DE,HL
	0E5C A6             AND (HL)
	0E5D 02             LD (BC),A
	0E5E 05             DEC B
	0E5F 0C             INC C
	0E60 23             INC HL
	0E61 13             INC DE
	0E62 0A             LD A,(BC)
	0E63 A6             AND (HL)
	0E64 EB             EX DE,HL
	0E65 B6             OR (HL)
	0E66 02             LD (BC),A
	0E67 04             INC B
	0E68 0A             LD A,(BC)
	0E69 B6             OR (HL)
	0E6A EB             EX DE,HL
	0E6B A6             AND (HL)
	0E6C 02             LD (BC),A
	0E6D 05             DEC B
	0E6E 23             INC HL
	0E6F 13             INC DE
	0E70 79             LD A,C
	0E71 C6 04          ADD A,4
	0E73 4F             LD C,A
	0E74 23             INC HL
	0E75 13             INC DE
	0E76 23             INC HL
	0E77 13             INC DE
	0E78 D9             EXX
	0E79 10 C8          DJNZ BlitMask3of5
	0E7B C9             RET

BlitMask4of5
	0E7C D9             EXX
	0E7D 0A             LD A,(BC)
	0E7E A6             AND (HL)
	0E7F EB             EX DE,HL
	0E80 B6             OR (HL)
	0E81 02             LD (BC),A
	0E82 04             INC B
	0E83 0A             LD A,(BC)
	0E84 B6             OR (HL)
	0E85 EB             EX DE,HL
	0E86 A6             AND (HL)
	0E87 02             LD (BC),A
	0E88 05             DEC B
	0E89 0C             INC C
	0E8A 23             INC HL
	0E8B 13             INC DE
	0E8C 0A             LD A,(BC)
	0E8D A6             AND (HL)
	0E8E EB             EX DE,HL
	0E8F B6             OR (HL)
	0E90 02             LD (BC),A
	0E91 04             INC B
	0E92 0A             LD A,(BC)
	0E93 B6             OR (HL)
	0E94 EB             EX DE,HL
	0E95 A6             AND (HL)
	0E96 02             LD (BC),A
	0E97 05             DEC B
	0E98 0C             INC C
	0E99 23             INC HL
	0E9A 13             INC DE
	0E9B 0A             LD A,(BC)
	0E9C A6             AND (HL)
	0E9D EB             EX DE,HL
	0E9E B6             OR (HL)
	0E9F 02             LD (BC),A
	0EA0 04             INC B
	0EA1 0A             LD A,(BC)
	0EA2 B6             OR (HL)
	0EA3 EB             EX DE,HL
	0EA4 A6             AND (HL)
	0EA5 02             LD (BC),A
	0EA6 05             DEC B
	0EA7 0C             INC C
	0EA8 23             INC HL
	0EA9 13             INC DE
	0EAA 0A             LD A,(BC)
	0EAB A6             AND (HL)
	0EAC EB             EX DE,HL
	0EAD B6             OR (HL)
	0EAE 02             LD (BC),A
	0EAF 04             INC B
	0EB0 0A             LD A,(BC)
	0EB1 B6             OR (HL)
	0EB2 EB             EX DE,HL
	0EB3 A6             AND (HL)
	0EB4 02             LD (BC),A
	0EB5 05             DEC B
	0EB6 23             INC HL
	0EB7 13             INC DE
	0EB8 0C             INC C
	0EB9 0C             INC C
	0EBA 0C             INC C
	0EBB 23             INC HL
	0EBC 13             INC DE
	0EBD D9             EXX
	0EBE 10 BC          DJNZ BlitMask4of5
	0EC0 C9             RET

BlitMask5of5
	0EC1 D9             EXX
	0EC2 0A             LD A,(BC)
	0EC3 A6             AND (HL)
	0EC4 EB             EX DE,HL
	0EC5 B6             OR (HL)
	0EC6 02             LD (BC),A
	0EC7 04             INC B
	0EC8 0A             LD A,(BC)
	0EC9 B6             OR (HL)
	0ECA EB             EX DE,HL
	0ECB A6             AND (HL)
	0ECC 02             LD (BC),A
	0ECD 05             DEC B
	0ECE 0C             INC C
	0ECF 23             INC HL
	0ED0 13             INC DE
	0ED1 0A             LD A,(BC)
	0ED2 A6             AND (HL)
	0ED3 EB             EX DE,HL
	0ED4 B6             OR (HL)
	0ED5 02             LD (BC),A
	0ED6 04             INC B
	0ED7 0A             LD A,(BC)
	0ED8 B6             OR (HL)
	0ED9 EB             EX DE,HL
	0EDA A6             AND (HL)
	0EDB 02             LD (BC),A
	0EDC 05             DEC B
	0EDD 0C             INC C
	0EDE 23             INC HL
	0EDF 13             INC DE
	0EE0 0A             LD A,(BC)
	0EE1 A6             AND (HL)
	0EE2 EB             EX DE,HL
	0EE3 B6             OR (HL)
	0EE4 02             LD (BC),A
	0EE5 04             INC B
	0EE6 0A             LD A,(BC)
	0EE7 B6             OR (HL)
	0EE8 EB             EX DE,HL
	0EE9 A6             AND (HL)
	0EEA 02             LD (BC),A
	0EEB 05             DEC B
	0EEC 0C             INC C
	0EED 23             INC HL
	0EEE 13             INC DE
	0EEF 0A             LD A,(BC)
	0EF0 A6             AND (HL)
	0EF1 EB             EX DE,HL
	0EF2 B6             OR (HL)
	0EF3 02             LD (BC),A
	0EF4 04             INC B
	0EF5 0A             LD A,(BC)
	0EF6 B6             OR (HL)
	0EF7 EB             EX DE,HL
	0EF8 A6             AND (HL)
	0EF9 02             LD (BC),A
	0EFA 05             DEC B
	0EFB 0C             INC C
	0EFC 23             INC HL
	0EFD 13             INC DE
	0EFE 0A             LD A,(BC)
	0EFF A6             AND (HL)
	0F00 EB             EX DE,HL
	0F01 B6             OR (HL)
	0F02 02             LD (BC),A
	0F03 04             INC B
	0F04 0A             LD A,(BC)
	0F05 B6             OR (HL)
	0F06 EB             EX DE,HL
	0F07 A6             AND (HL)
	0F08 02             LD (BC),A
	0F09 05             DEC B
	0F0A 23             INC HL
	0F0B 13             INC DE
	0F0C 0C             INC C
	0F0D 0C             INC C
	0F0E D9             EXX
	0F0F 10 B0          DJNZ BlitMask5of5
	0F11 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; When we need to draw pillar sprites below a Door, this is the height of the pillars.
;; In multiples of 6.
.PillarHeight:
	0F12 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; Re-fills the Pillar sprite buffer. Preserves 16b registers.
.FillPillarBuf:
	0F13 D5             PUSH DE
	0F14 C5             PUSH BC
	0F15 E5             PUSH HL
	0F16 3A 12 0F       LD A,(PillarHeight)
	0F19 CD 23 0F       CALL DrawPillarBuf
	0F1C E1             POP HL
	0F1D C1             POP BC
	0F1E D1             POP DE
	0F1F C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Redraws the Pillar in PillarBuf, pillar height in A.
;; In function of the height, the middle part will be stacked as many times as needed
;; Output: pointer on result sprite in DE.
.SetPillarHeight:
	0F20 32 12 0F       LD (PillarHeight),A
DrawPillarBuf
	0F23 F5             PUSH AF
	0F24 21 68 B7       LD HL,PillarBuf + MOVE_OFFSET ;; B768
	0F27 01 28 01       LD BC,&0128 ;; 296
	0F2A CD A8 1B       CALL Erase_forward_Block_RAM
	0F2D AF             XOR A
	0F2E 32 EE 12       LD (IsPillarBufFlipped),A
	0F31 3D             DEC A
	0F32 32 6F 11       LD (hasPillarUnderDoor),A
	0F35 F1             POP AF
	0F36 A7             AND A
	0F37 C8             RET Z
	0F38 11 8F B8       LD DE,PillarBuf + 296 - 1 + MOVE_OFFSET
	0F3B F5             PUSH AF
	0F3C CD 5A 0F       CALL drawPillarBtm
drawPillarLoop
	0F3F F1             POP AF
	0F40 D6 06          SUB 6
	0F42 28 06          JR Z,drawPillarTop
	0F44 F5             PUSH AF
	0F45 CD 52 0F       CALL drawPillarMid
	0F48 18 F5          JR drawPillarLoop

drawPillarTop
	0F4A 21 17 B7       LD HL,img_pillar_top + &48 - 1 + MOVE_OFFSET ;; B6D0-B717
	0F4D 01 48 00       LD BC,&48
	0F50 18 0E          JR drawPillarReverseCopy
drawPillarMid
	0F52 21 47 B7       LD HL,img_pillar_mid + &30 - 1 + MOVE_OFFSET ;; B718-B747
	0F55 01 30 00       LD BC,&30
	0F58 18 06          JR drawPillarReverseCopy
drawPillarBtm
	0F5A 21 67 B7       LD HL,img_pillar_btm + &20 - 1 + MOVE_OFFSET ;; B748-B767
	0F5D 01 20 00       LD BC,&20
drawPillarReverseCopy
	0F60 ED B8          LDDR
	0F62 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Given extents stored in ViewXExtent and ViewYExtent,
;; draw the appropriate piece of screen background into
;; ViewBuff (to be drawn over and blitted to display later)
;; Buffer to write to is assumed to be 6 bytes wide.
.DrawBkgnd:
	0F63 2A C6 14       LD HL,(ViewXExtent)
	0F66 7C             LD A,H
	0F67 1F             RRA
	0F68 1F             RRA
	0F69 4F             LD C,A
	0F6A E6 3E          AND &3E
	0F6C D9             EXX
	0F6D 6F             LD L,A
	0F6E 26 50          LD H,BackgrdBuff / WORD_HIGH_BYTE ;; 50
	0F70 D9             EXX
	0F71 7D             LD A,L
	0F72 94             SUB H
	0F73 1F             RRA
	0F74 1F             RRA
	0F75 E6 07          AND &07
	0F77 D6 02          SUB 2
	0F79 11 00 4E       LD DE,DestBuff
	0F7C CB 19          RR C
	0F7E 30 15          JR NC,dbg_1
	0F80 FD 21 E4 11    LD IY,ClearOne
	0F84 DD 21 95 12    LD IX,OneColBlitR
	0F88 21 5F 12       LD HL,BlitFloorR
	0F8B CD BB 0F       CALL DrawBkgndCol
	0F8E FE FF          CP &FF
	0F90 C8             RET Z
	0F91 D6 01          SUB 1
	0F93 18 11          JR dbg_2
dbg_1
	0F95 FD 21 F3 11    LD IY,ClearTwo
	0F99 DD 21 AE 12    LD IX,TwoColBlit
	0F9D 21 32 12       LD HL,BlitFloor
	0FA0 CD BB 0F       CALL DrawBkgndCol
	0FA3 1C             INC E
	0FA4 D6 02          SUB 2
dbg_2
	0FA6 30 ED          JR NC,dbg_1
	0FA8 3C             INC A
	0FA9 C0             RET NZ
	0FAA FD 21 E4 11    LD IY,ClearOne
	0FAE DD 21 9A 12    LD IX,OneColBlitL
	0FB2 21 6C 12       LD HL,BlitFloorL
	0FB5 22 77 10       LD (smc_blitfloor_fnptr+1),HL
	0FB8 D9             EXX
	0FB9 18 12          JR DrawBkgndCol2

;; -----------------------------------------------------------------------------------------------------------
;; ???TODO??? Performs register-saving and incrementing HL'/E. Not needed
;; for the last call from DrawBkgnd.
.DrawBkgndCol:
	0FBB 22 77 10       LD (smc_blitfloor_fnptr+1),HL
	0FBE D5             PUSH DE
	0FBF F5             PUSH AF
	0FC0 D9             EXX
	0FC1 E5             PUSH HL
	0FC2 CD CD 0F       CALL DrawBkgndCol2
	0FC5 E1             POP HL
	0FC6 2C             INC L
	0FC7 2C             INC L
	0FC8 D9             EXX
	0FC9 F1             POP AF
	0FCA D1             POP DE
	0FCB 1C             INC E
	0FCC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Reads from ViewYExtent
;; * Takes in:
;;   HL' - Floor drawing function
;;   DE' - Destination buffer (only modified via IX, IY, etc.)
;;   IX  - Copying function (takes &rows in A, writes to DE' and updates it)
;;   IY  - Clearing function (takes &rows in A, writes to DE' and updates it)
;;   HL  - Pointer to BackgrdBuff array entry:
;;           Byte 0: Y of wall bottom (0 = clear)
;;           Byte 1: Id for wall panel sprite
;;                   (0-3 - world-specific, 4 - Pillar, 5 - blank, | &80 to flip)
;; Note that the Y coordinates are downward-increasing, matching memory.
;; The basic walls are 56 pixels high
SHORT_WALL     			EQU 	56				;; &38
;; Pillar/spaces (indices 4 and 5) are up to 74 pixels high, made up
;; of top, repeated middle and bottom section.
TALL_WALL	      		EQU 	74				;; &4A =  (9 + 24 + 4) * 2
EDGE_HEIGHT				EQU 	&0B

DrawBkgndCol2
	0FCD ED 5B C8 14    LD DE,(ViewYExtent)
	0FD1 7B             LD A,E
	0FD2 92             SUB D
	0FD3 5F             LD E,A
	0FD4 7E             LD A,(HL)
	0FD5 A7             AND A
	0FD6 28 4C          JR Z,DBC_Clear
	0FD8 7A             LD A,D
	0FD9 96             SUB (HL)
	0FDA 57             LD D,A
	0FDB 30 4A          JR NC,DBC_DoFloor
	0FDD 23             INC HL
	0FDE 0E 38          LD C,SHORT_WALL
	0FE0 CB 56          BIT 2,(HL)
	0FE2 28 02          JR Z,dbcflag
	0FE4 0E 4A          LD C,TALL_WALL
dbcflag
	0FE6 81             ADD A,C
	0FE7 30 0B          JR NC,DBC_TopSpace
	0FE9 87             ADD A,A
	0FEA CD 5D 11       CALL GetOffsetWall
	0FED D9             EXX
	0FEE 7A             LD A,D
	0FEF ED 44          NEG
	0FF1 C3 10 10       JP DBC_Wall

;; We start before the top of the wall panel, so we'll start off by clearing above.
;; A holds -number of rows to top of wall panel, E holds number of rows to write.
.DBC_TopSpace:
	0FF4 ED 44          NEG
	0FF6 BB             CP E
	0FF7 30 2B          JR NC,DBC_Clear
	0FF9 47             LD B,A
	0FFA ED 44          NEG
	0FFC 83             ADD A,E
	0FFD 5F             LD E,A
	0FFE 78             LD A,B
	0FFF CD E2 11       CALL DoJumpIY
	1002 7E             LD A,(HL)
	1003 D9             EXX
	1004 CD AB 11       CALL GetWall
	1007 D9             EXX
	1008 3E 38          LD A,SHORT_WALL
	100A CB 56          BIT 2,(HL)
	100C 28 02          JR Z,DBC_Wall
	100E 3E 4A          LD A,TALL_WALL
DBC_Wall
	1010 BB             CP E
	1011 30 0E          JR NC,dbc_copy
	1013 47             LD B,A
	1014 ED 44          NEG
	1016 83             ADD A,E
	1017 08             EX AF,AF'
	1018 78             LD A,B
	1019 CD E0 11       CALL DoJumpIX
	101C 08             EX AF,AF'
	101D 16 00          LD D,0
	101F 18 08          JR DBC_FloorEtc
dbc_copy
	1021 7B             LD A,E
	1022 DD E9          JP (IX)
DBC_Clear
	1024 7B             LD A,E
	1025 FD E9          JP (IY)

;; Point we jump to if we're initially below the top edge of the floor.
.DBC_DoFloor:
	1027 7B             LD A,E
	1028 23             INC HL
;; Code to draw the floor, bottom edge, and any space below
;;
;; At this point, HL has been incremented by 1, A contains
;; number of rows to draw, D contains number of lines below
;; bottom of wall we're at.
;; First, calculate the position of the bottom edge.
.DBC_FloorEtc:
	1029 47             LD B,A
	102A 2B             DEC HL
	102B 7D             LD A,L
	102C 87             ADD A,A
	102D 87             ADD A,A
	102E C6 04          ADD A,4
smc_CornerPos:
	1030 FE 00          CP 0
	1032 38 0C          JR c,DBC_Left
	1034 1E 00          LD E,0
	1036 20 02          JR NZ,DBC_Right
	1038 1E 05          LD E,DBEdge_Center - DBEdge_Right
DBC_Right
	103A D6 04          SUB 4
.smc_RightAdj:
	103C C6 00          ADD A,0
	103E 18 08          JR DBC_CrnrJmp
DBC_Left
	1040 C6 04          ADD A,4
	1042 ED 44          NEG
.smc_LeftAdj:
	1044 C6 00          ADD A,0
	1046 1E 08          LD E,DBEdge_Left - DBEdge_Right
;; Store coordinate of bottom edge in C, write out edge graphic
.DBC_CrnrJmp:
	1048 ED 44          NEG
	104A C6 0B          ADD A,EDGE_HEIGHT
	104C 4F             LD C,A
	104D 7B             LD A,E
	104E 32 9C 10       LD (smc_whichEdge+1),A
	1051 7E             LD A,(HL)
	1052 82             ADD A,D
	1053 23             INC HL
	1054 91             SUB C
	1055 30 18          JR NC,subclr
	1057 C6 0B          ADD A,EDGE_HEIGHT
	1059 30 17          JR NC,dbcfloor
	105B 5F             LD E,A
	105C D6 0B          SUB EDGE_HEIGHT
	105E 80             ADD A,B
	105F 38 03          JR c,DBC_AllBottom
	1061 78             LD A,B
	1062 18 2D          JR DrawBottomEdge
;; Case where we're drawing
.DBC_AllBottom:
	1064 F5             PUSH AF
	1065 90             SUB B
	1066 ED 44          NEG
DBC_Bottom
	1068 CD 91 10       CALL DrawBottomEdge
	106B F1             POP AF
	106C C8             RET Z
	106D FD E9          JP (IY)
subclr
	106F 78             LD A,B
	1070 FD E9          JP (IY)
dbcfloor
	1072 80             ADD A,B
	1073 38 04          JR c,DBC_FloorNEdge
	1075 78             LD A,B
BlitFloorFnPtr:
smc_blitfloor_fnptr:
	1076 C3 00 00       JP &0000
;; Draw the floor and then edge etc.
.DBC_FloorNEdge:
	1079 F5             PUSH AF
	107A 90             SUB B
	107B ED 44          NEG
	107D CD 76 10       CALL BlitFloorFnPtr
	1080 F1             POP AF
	1081 C8             RET Z
	1082 D6 0B          SUB EDGE_HEIGHT
	1084 1E 00          LD E,0
	1086 30 04          JR NC,DBC_EdgeNSpace
	1088 C6 0B          ADD A,EDGE_HEIGHT
	108A 18 05          JR DrawBottomEdge
DBC_EdgeNSpace
	108C F5             PUSH AF
	108D 3E 0B          LD A,EDGE_HEIGHT
	108F 18 D7          JR DBC_Bottom
DrawBottomEdge
	1091 D5             PUSH DE
	1092 D9             EXX
	1093 E1             POP HL
	1094 26 00          LD H,0
	1096 29             ADD HL,HL
	1097 29             ADD HL,HL
	1098 01 A9 10       LD BC,LeftEdge
smc_whichEdge:
	109B 18 08          JR DBEdge_Left
DBEdge_Right:
	109D 01 D5 10       LD BC,RightEdge
	10A0 18 03          JR DBEdge_Left
DBEdge_Center:
	10A2 01 01 11       LD BC,CornerEdge
DBEdge_Left
	10A5 09             ADD HL,BC
	10A6 D9             EXX
	10A7 DD E9          JP (IX)

;; -----------------------------------------------------------------------------------------------------------
;; Data to draw the edge of the rooms
LeftEdge
	;; 4 bytes * 11  interlaced :
	;;     2 bytes x 11 (height) mask and
	;;     2 bytes x 11 for image
	;; in memory : maskwall1 + wall1 + maskwall2 + wall2 (each are 1byte wide * 11 rows)
	10A9 DEFB &00, &40, &00, &00, &00, &70, &00, &00, &00, &74, &00, &00, &00, &77, &00, &00
	10B9 DEFB &00, &37, &00, &40, &00, &07, &00, &70, &00, &03, &00, &74, &00, &00, &00, &77
	10C9 DEFB &00, &00, &00, &37, &00, &00, &00, &07, &00, &00, &00, &03
	;;	................ .@..............
	;;	................ .@@@............
	;;	................ .@@@.@..........
	;;	................ .@@@.@@@........
	;;	................ ..@@.@@@.@......
	;;	................ .....@@@.@@@....
	;;	................ ......@@.@@@.@..
	;;	................ .........@@@.@@@
	;;	................ ..........@@.@@@
	;;	................ .............@@@
	;;	................ ..............@@
RightEdge
	10D5 DEFB &00, &00, &03, &03, &00, &00, &0F, &07, &00, &00, &3F, &37, &00, &00, &FF, &77
	10E5 DEFB &03, &03, &FC, &74, &0F, &07, &F0, &70, &3F, &37, &C0, &40, &FF, &77, &00, &00
	10F5 DEFB &FC, &74, &00, &00, &F0, &70, &00, &00, &C0, &40, &00, &00

	;;	..............@@ ..............@@
	;;	............@@@@ .............@@@
	;;	..........@@@@@@ ..........@@.@@@
	;;	........@@@@@@@@ .........@@@.@@@
	;;	......@@@@@@@@.. ......@@.@@@.@..
	;;	....@@@@@@@@.... .....@@@.@@@....
	;;	..@@@@@@@@...... ..@@.@@@.@......
	;;	@@@@@@@@........ .@@@.@@@........
	;;	@@@@@@.......... .@@@.@..........
	;;	@@@@............ .@@@............
	;;	@@.............. .@..............
CornerEdge
	1101 DEFB &00, &40, &03, &03, &00, &70, &0F, &07, &00, &74, &3F, &37, &00, &77, &FF, &77
	1111 DEFB &00, &37, &FC, &74, &00, &07, &F0, &70, &00, &03, &C0, &40, &00, &00, &00, &00
	1121 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00

	;;	..............@@ .@............@@
	;;	............@@@@ .@@@.........@@@
	;;	..........@@@@@@ .@@@.@....@@.@@@
	;;	........@@@@@@@@ .@@@.@@@.@@@.@@@
	;;	........@@@@@@.. ..@@.@@@.@@@.@..
	;;	........@@@@.... .....@@@.@@@....
	;;	........@@...... ......@@.@......
	;;	................ ................
	;;	................ ................
	;;	................ ................
	;;	................ ................

;; -----------------------------------------------------------------------------------------------------------
;; Takes the room origin in BC, and stores it, and then updates the edge patterns
;; to include a part of the floor pattern.
.TweakEdges:
	112D 2A 16 12       LD HL,(FloorAddr)
	1130 01 0A 00       LD BC,2*5
	1133 09             ADD HL,BC
	1134 0E 10          LD C,2*8
	1136 3A E7 16       LD A,(Has_Door)
	1139 1F             RRA
	113A E5             PUSH HL
	113B 30 02          JR NC,txedg_1
	113D 09             ADD HL,BC
	113E E3             EX (SP),HL
txedg_1
	113F 09             ADD HL,BC
	1140 1F             RRA
	1141 30 03          JR NC,txedg_2
	1143 A7             AND A
	1144 ED 42          SBC HL,BC
txedg_2
	1146 11 D5 10       LD DE,RightEdge
	1149 CD 51 11       CALL TweakEdgesInner
	114C E1             POP HL
	114D 23             INC HL
	114E 11 AB 10       LD DE,LeftEdge+2
TweakEdgesInner
	1151 3E 04          LD A,4
tei_1
	1153 ED A0          LDI
	1155 23             INC HL
	1156 13             INC DE
	1157 13             INC DE
	1158 13             INC DE
	1159 3D             DEC A
	115A 20 F7          JR NZ,tei_1
	115C C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Wrap up a call to GetWall, and add in the starting offset from A.
;; TODO
.GetOffsetWall:
	115D F5             PUSH AF
	115E 7E             LD A,(HL)
	115F D9             EXX
	1160 CD AB 11       CALL GetWall
	1163 F1             POP AF
	1164 87             ADD A,A
	1165 F5             PUSH AF
	1166 85             ADD A,L
	1167 6F             LD L,A
	1168 8C             ADC A,H
	1169 95             SUB L
	116A 67             LD H,A
	116B F1             POP AF
	116C D0             RET NC
	116D 24             INC H
	116E C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Zero means Pillar buffer is zeroed, non-zero means filled with Pillar image.
hasPillarUnderDoor:
	116F 00             DEFB 0

;; Returns PillarBuf in HL.
;; If hasPillarUnderDoor is non-zero, it zeroes the buffer, and the flag.
.GetEmptyPillarBuf:
	1170 3A 6F 11       LD A,(hasPillarUnderDoor)
	1173 A7             AND A
	1174 21 68 B7       LD HL,PillarBuf + MOVE_OFFSET
	1177 C8             RET Z
	1178 E5             PUSH HL
	1179 C5             PUSH BC
	117A D5             PUSH DE
	117B 01 28 01       LD BC,&0128
	117E CD A8 1B       CALL Erase_forward_Block_RAM
	1181 D1             POP DE
	1182 C1             POP BC
	1183 E1             POP HL
	1184 AF             XOR A
	1185 32 6F 11       LD (hasPillarUnderDoor),A
	1188 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Called by GetWall for high-index sprites, to draw the space under a door
;;   A=5 -> blank space, A=4 -> Pillars
.GetUnderDoor:
	1189 CB 47          BIT 0,A
	118B 20 E3          JR NZ,GetEmptyPillarBuf
	118D 6F             LD L,A
	118E 3A 6F 11       LD A,(hasPillarUnderDoor)
	1191 A7             AND A
	1192 CC 13 0F       CALL Z,FillPillarBuf
	1195 3A EE 12       LD A,(IsPillarBufFlipped)
	1198 AD             XOR L
	1199 17             RLA
	119A 21 68 B7       LD HL,PillarBuf + MOVE_OFFSET
	119D D0             RET NC
	119E 3A EE 12       LD A,(IsPillarBufFlipped)
	11A1 EE 80          XOR &80
	11A3 32 EE 12       LD (IsPillarBufFlipped),A
	11A6 06 4A          LD B,TALL_WALL
	11A8 C3 CA 12       JP FlipPillar

;; -----------------------------------------------------------------------------------------------------------
;; Get a wall section/panel (id 0 to 3, cases 4 and 5 are the space under
;; a door (blank or pillars) and handled by GetUnderDoor).
;; In A : 0-3 - world-specific, 4 - Pillar, 5 - blank, + &80 to flip.
;; Top bit represents whether flip is required.
;; Return: Pointer to data in HL. Panel id in A, Carry if flip required
.GetWall:
	11AB CB 57          BIT 2,A
	11AD 20 DA          JR NZ,GetUnderDoor
	11AF F5             PUSH AF
	11B0 CD BD 11       CALL NeedsFlip2
	11B3 08             EX AF,AF'
	11B4 F1             POP AF
	11B5 CD EF 12       CALL GetPanelAddr
	11B8 08             EX AF,AF'
	11B9 D0             RET NC
	11BA C3 C8 12       JP FlipPanel

;; -----------------------------------------------------------------------------------------------------------
;; Takes a Wall panel id in A.
;; If the top bit was set (bit7 = needs flip), we flip the bit in
;; corresponding PanelFlips if necessary,
;; Return: Carry if a modification in PanelFlips was needed.
;; Return: A the flip bitmap
.NeedsFlip2:
	11BD 4F             LD C,A
	11BE 2A 0D 30       LD HL,(Walls_PanelFlipsPtr)
	11C1 E6 03          AND &03
	11C3 47             LD B,A
	11C4 04             INC B
	11C5 3E 01          LD A,&01
nf2_wander1loop
	11C7 0F             RRCA
	11C8 10 FD          DJNZ nf2_wander1loop
	11CA 47             LD B,A
	11CB A6             AND (HL)
	11CC 20 08          JR NZ,nf2_2
	11CE CB 11          RL C
	11D0 D0             RET NC
	11D1 78             LD A,B
	11D2 B6             OR (HL)
	11D3 77             LD (HL),A
	11D4 37             SCF
	11D5 C9             RET
nf2_2
	11D6 CB 11          RL C
	11D8 3F             CCF
	11D9 D0             RET NC
	11DA 78             LD A,B
	11DB 2F             CPL
	11DC A6             AND (HL)
	11DD 77             LD (HL),A
	11DE 37             SCF
	11DF C9             RET

;; -----------------------------------------------------------------------------------------------------------
.DoJumpIX:
	11E0 DD E9          JP (IX)
.DoJumpIY:
	11E2 FD E9          JP (IY)

;; -----------------------------------------------------------------------------------------------------------
;; Zero a single column of the 6-byte-wide buffer at DE' (A rows).
.ClearOne:
	11E4 D9             EXX
	11E5 47             LD B,A
	11E6 EB             EX DE,HL
	11E7 1E 00          LD E,0
clro_1
	11E9 73             LD (HL),E
	11EA 7D             LD A,L
	11EB C6 06          ADD A,6
	11ED 6F             LD L,A
	11EE 10 F9          DJNZ clro_1
	11F0 EB             EX DE,HL
	11F1 D9             EXX
	11F2 C9             RET

;; Zero two columns of the 6-byte-wide buffer at DE' (A rows).
.ClearTwo:
	11F3 D9             EXX
	11F4 47             LD B,A
	11F5 EB             EX DE,HL
	11F6 1E 00          LD E,0
clr2_1
	11F8 73             LD (HL),E
	11F9 2C             INC L
	11FA 73             LD (HL),E
	11FB 7D             LD A,L
	11FC C6 05          ADD A,5
	11FE 6F             LD L,A
	11FF 10 F7          DJNZ clr2_1
	1201 EB             EX DE,HL
	1202 D9             EXX
	1203 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Set FloorAddr to the floor sprite indexed in A.
;; HL : pointer on the floor tile patterns selected; also copied into FloorAddr.
.SetFloorAddr:
	1204 4F             LD C,A
	1205 87             ADD A,A
	1206 81             ADD A,C
	1207 87             ADD A,A
	1208 87             ADD A,A
	1209 87             ADD A,A
	120A 6F             LD L,A
	120B 26 00          LD H,0
	120D 29             ADD HL,HL
	120E 11 80 B3       LD DE,floor_tiles + MOVE_OFFSET
	1211 19             ADD HL,DE
	1212 22 16 12       LD (FloorAddr),HL
	1215 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Address of the sprite data used to draw the floor.
;; This is updated by SetFloorAddr.
.FloorAddr:     															;; IMG_2x24 + 2 * &30
	1216 B0 B3        	DEFW 	floor_tile_pattern1 + MOVE_OFFSET

;; -----------------------------------------------------------------------------------------------------------
;; HL' points to the floor sprite id.
;; If it's floor tile 5, we return a blank floor tile (no floor).
;; Otherwise we return the current tile address pointer, plus an
;; offset C (0 or 2*8), in BC.
.GetFloorAddr:
	1218 F5             PUSH AF
	1219 D9             EXX
	121A 7E             LD A,(HL)
	121B F6 FA          OR &FA			;; ~&05
	121D 3C             INC A
	121E D9             EXX
	121F 28 0C          JR Z,Blank_Tile
	1221 79             LD A,C
	1222 ED 4B 16 12    LD BC,(FloorAddr)
	1226 81             ADD A,C
	1227 4F             LD C,A
	1228 88             ADC A,B
	1229 91             SUB C
	122A 47             LD B,A
	122B F1             POP AF
	122C C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Use the empty floor tile (no floor) if floor sprite ID = 5
.Blank_Tile:
	122D 01 D0 B4       LD BC,empty_floor_tile + MOVE_OFFSET
	1230 F1             POP AF
	1231 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Fill a 6-byte-wide buffer at DE' with both columns of a floor tile.
;; A contains the number of rows to generate.
;; D contains the initial offset in rows.
;; HL points to the floor sprite id.
;; The +0 or +16 in C below will align the left part (+0) and the right
;; part (+16 : flipped side) of the floor tiles in the Y axis:
;;    /|\
;;    \|/
.BlitFloor:
	1232 47             LD B,A
	1233 7A             LD A,D
	1234 CB 7E          BIT 7,(HL)
	1236 D9             EXX
	1237 0E 00          LD C,0
	1239 28 02          JR Z,bf_1
	123B 0E 10          LD C,2*8
bf_1
	123D CD 18 12       CALL GetFloorAddr
	1240 E6 0F          AND &0F
	1242 87             ADD A,A
	1243 26 00          LD H,0
	1245 6F             LD L,A
	1246 D9             EXX
bf_2
	1247 D9             EXX
	1248 E5             PUSH HL
	1249 09             ADD HL,BC
	124A 7E             LD A,(HL)
	124B 12             LD (DE),A
	124C 23             INC HL
	124D 1C             INC E
	124E 7E             LD A,(HL)
	124F 12             LD (DE),A
	1250 7B             LD A,E
	1251 C6 05          ADD A,5
	1253 5F             LD E,A
	1254 E1             POP HL
	1255 7D             LD A,L
	1256 C6 02          ADD A,2
	1258 E6 1F          AND &1F
	125A 6F             LD L,A
	125B D9             EXX
	125C 10 E9          DJNZ bf_2
	125E C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Fill a 6-byte-wide buffer at DE' with the right column of background tile.
;; A  contains number of rows to generate.
;; D  contains initial offset in rows.
;; HL contains pointer to wall sprite id.
.BlitFloorR:
	125F 47             LD B,A
	1260 7A             LD A,D
	1261 CB 7E          BIT 7,(HL)
	1263 D9             EXX
	1264 0E 01          LD C,&01
	1266 28 0F          JR Z,bfl_1
	1268 0E 11          LD C,2*8 + 1
	126A 18 0B          JR bfl_1

;; -----------------------------------------------------------------------------------------------------------
;; Fill a 6-byte-wide buffer at DE' with the left column of background tile.
;; A  contains number of rows to generate.
;; D  contains initial offset in rows.
;; HL contains pointer to wall sprite id.
;; (This is to refresh the background (floor tiles) when a sprite moves)
.BlitFloorL:
	126C 47             LD B,A
	126D 7A             LD A,D
	126E CB 7E          BIT 7,(HL)
	1270 D9             EXX
	1271 0E 00          LD C,&00
	1273 28 02          JR Z,bfl_1
	1275 0E 10          LD C,&10
bfl_1
	1277 CD 18 12       CALL GetFloorAddr
	127A E6 0F          AND &0F
	127C 87             ADD A,A
	127D 26 00          LD H,0
	127F 6F             LD L,A
	1280 D9             EXX
bfl_2
	1281 D9             EXX
	1282 E5             PUSH HL
	1283 09             ADD HL,BC
	1284 7E             LD A,(HL)
	1285 12             LD (DE),A
	1286 7B             LD A,E
	1287 C6 06          ADD A,6
	1289 5F             LD E,A
	128A E1             POP HL
	128B 7D             LD A,L
	128C C6 02          ADD A,2
	128E E6 1F          AND &1F
	1290 6F             LD L,A
	1291 D9             EXX
	1292 10 ED          DJNZ bfl_2
	1294 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Blit from HL' to DE', right byte of a 2-byte-wide sprite in a 6-byte wide buffer.
;; Number of rows in A.
;; (This is to refresh the background (especially if in front of a wall) when a sprite moves)
.OneColBlitR:
	1295 D9             EXX
	1296 23             INC HL
	1297 23             INC HL
	1298 18 01          JR ocbt_1
OneColBlitL:
	129A D9             EXX
ocbt_1
	129B 47             LD B,A
ocbt_2
	129C 7E             LD A,(HL)
	129D 12             LD (DE),A
	129E 23             INC HL
	129F 15             DEC D
	12A0 7E             LD A,(HL)
	12A1 12             LD (DE),A
	12A2 14             INC D
	12A3 23             INC HL
	12A4 23             INC HL
	12A5 23             INC HL
	12A6 7B             LD A,E
	12A7 C6 06          ADD A,6
	12A9 5F             LD E,A
	12AA 10 F0          DJNZ ocbt_2
	12AC D9             EXX
	12AD C9             RET

;; Blit from HL' to DE', a 2-byte-wide sprite in a 6-byte wide buffer.
;; Number of rows in A.
.TwoColBlit:
	12AE D9             EXX
	12AF 47             LD B,A
tcbl_1
	12B0 7E             LD A,(HL)
	12B1 12             LD (DE),A
	12B2 23             INC HL
	12B3 15             DEC D
	12B4 7E             LD A,(HL)
	12B5 12             LD (DE),A
	12B6 23             INC HL
	12B7 4E             LD C,(HL)
	12B8 23             INC HL
	12B9 1C             INC E
	12BA 7E             LD A,(HL)
	12BB 12             LD (DE),A
	12BC 23             INC HL
	12BD 14             INC D
	12BE 79             LD A,C
	12BF 12             LD (DE),A
	12C0 7B             LD A,E
	12C1 C6 05          ADD A,5
	12C3 5F             LD E,A
	12C4 10 EA          DJNZ tcbl_1
	12C6 D9             EXX
	12C7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Reverse a two-byte-wide image.
;; * FlipPanel : pointer to data in HL
;; 		Flip a normal wall panel
;; 		Used to flip the wall sprite for the right side of the screen.
;; * FlipPillar : Height in B, pointer to data in HL.
.FlipPanel:
	12C8 06 38          LD B,SHORT_WALL
FlipPillar
	12CA D5             PUSH DE
	12CB 16 4F          LD D,RevTable / WORD_HIGH_BYTE ;; 4F00
	12CD E5             PUSH HL
fcol_1
	12CE 22 E6 12       LD (smc_dest_addr2+1),HL
	12D1 5E             LD E,(HL)
	12D2 1A             LD A,(DE)
	12D3 23             INC HL
	12D4 5E             LD E,(HL)
	12D5 22 E1 12       LD (smc_dest_addr1+1),HL
	12D8 23             INC HL
	12D9 4E             LD C,(HL)
	12DA 77             LD (HL),A
	12DB 23             INC HL
	12DC 1A             LD A,(DE)
	12DD 5E             LD E,(HL)
	12DE 77             LD (HL),A
	12DF 1A             LD A,(DE)
smc_dest_addr1:
	12E0 32 00 00       LD (&0000),A
	12E3 59             LD E,C
	12E4 1A             LD A,(DE)
smc_dest_addr2
	12E5 32 00 00       LD (&0000),A
	12E8 23             INC HL
	12E9 10 E3          DJNZ fcol_1
	12EB E1             POP HL
	12EC D1             POP DE
	12ED C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Top bit is set if the column image buffer is flipped
IsPillarBufFlipped:
	12EE 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; Return the wall panel address in HL, given panel index in A.
.GetPanelAddr:
	12EF E6 03          AND &03
	12F1 87             ADD A,A
	12F2 87             ADD A,A
	12F3 4F             LD C,A
	12F4 87             ADD A,A
	12F5 87             ADD A,A
	12F6 87             ADD A,A
	12F7 91             SUB C
	12F8 87             ADD A,A
	12F9 6F             LD L,A
	12FA 26 00          LD H,0
	12FC 29             ADD HL,HL
	12FD 29             ADD HL,HL
	12FE ED 4B 0B 30    LD BC,(Walls_PanelBase)
	1302 09             ADD HL,BC
	1303 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Given sprite data, return a rotated version of it.
;;
;; A holds the rotation size (in 2-bit units).
;; At start, HL holds source image, DE hold mask image.
;; At end, HL holds dest image, DE holds mask image.
;; A' is incremented.
;; The sprite width and number of bytes are read from SpriteWidth and
;; SpriteRowCount. SpriteWidth is incremented. Uses 'Buffer'.
.BlitRot:
	1304 3D             DEC A
	1305 87             ADD A,A
	1306 D9             EXX
	1307 4F             LD C,A
	1308 06 00          LD B,0
	130A 3A 88 29       LD A,(Sprite_Width)
	130D 3C             INC A
	130E 32 88 29       LD (Sprite_Width),A
	1311 FE 05          CP &05
	1313 21 4A 13       LD HL,BlitRot3s
	1316 20 03          JR NZ,btrot_0
	1318 21 50 13       LD HL,BlitRot4s
btrot_0
	131B 09             ADD HL,BC
	131C 7E             LD A,(HL)
	131D 23             INC HL
	131E 66             LD H,(HL)
	131F 6F             LD L,A
	1320 22 34 13       LD (smc_btrot_1+1),HL
	1323 22 3F 13       LD (smc_btrot_2+1),HL
	1326 D9             EXX
	1327 08             EX AF,AF'
	1328 F5             PUSH AF
	1329 3A CB 14       LD A,(SpriteRowCount)
	132C D5             PUSH DE
	132D 11 C0 55       LD DE,BlitRot_Buffer ;; = KeyScanningBuffer
	1330 06 00          LD B,0
	1332 F3             DI
smc_btrot_1
	1333 CD 00 00       CALL &0000
	1336 EB             EX DE,HL
	1337 E1             POP HL
	1338 D5             PUSH DE
	1339 3A CB 14       LD A,(SpriteRowCount)
	133C 06 FF          LD B,&FF
smc_btrot_2
	133E CD 00 00       CALL &0000
	1341 21 C0 55       LD HL,BlitRot_Buffer ;; = KeyScanningBuffer
	1344 D1             POP DE
	1345 FB             EI
	1346 F1             POP AF
	1347 3C             INC A
	1348 08             EX AF,AF'
	1349 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; pointers on the BlitRot<*> function to use
BlitRot3s:
	134A 58 13          DEFW 	BlitRot2on3
	134C 0E 14          DEFW 	BlitRot4on3
	134E B3 13          DEFW 	BlitRot6on3
BlitRot4s
	1350 31 14          DEFW 	BlitRot2on4
	1352 9F 14          DEFW 	BlitRot4on4
	1354 68 14          DEFW 	BlitRot6on4

;; -----------------------------------------------------------------------------------------------------------
Save_Stack_ptr:
	1356 00 00          DEFW 0

;; -----------------------------------------------------------------------------------------------------------
;; Do a copy with 2-bit shift.
;; Source HL, width 3 bytes.
;; Destination DE, width 4 bytes.
;; A contains byte-count, B contains filler character
;; Returns next space after destination write in HL
.BlitRot2on3:
	1358 ED 73 56 13    LD (Save_Stack_ptr),SP
	135C 0E 3E          LD C,LDAvv_OPCODE
	135E ED 43 77 13    LD (smc_br23_1),BC
	1362 ED 43 91 13    LD (smc_br23_2),BC
	1366 F9             LD SP,HL
	1367 EB             EX DE,HL
	1368 CB 3F          SRL A
	136A 30 08          JR NC,br23_1
	136C 3C             INC A
	136D 08             EX AF,AF'
	136E C1             POP BC
	136F 41             LD B,C
	1370 3B             DEC SP
	1371 C3 90 13       JP br23_2
br23_1
	1374 08             EX AF,AF'
	1375 D1             POP DE
	1376 C1             POP BC
smc_br23_1
	1377 3E 00          LD A,0
	1379 0F             RRCA
	137A CB 1B          RR E
	137C CB 1A          RR D
	137E CB 19          RR C
	1380 1F             RRA
	1381 CB 1B          RR E
	1383 CB 1A          RR D
	1385 CB 19          RR C
	1387 1F             RRA
	1388 73             LD (HL),E
	1389 23             INC HL
	138A 72             LD (HL),D
	138B 23             INC HL
	138C 71             LD (HL),C
	138D 23             INC HL
	138E 77             LD (HL),A
	138F 23             INC HL
br23_2
	1390 D1             POP DE
smc_br23_2
	1391 3E 00          LD A,0
	1393 0F             RRCA
	1394 CB 18          RR B
	1396 CB 1B          RR E
	1398 CB 1A          RR D
	139A 1F             RRA
	139B CB 18          RR B
	139D CB 1B          RR E
	139F CB 1A          RR D
	13A1 1F             RRA
	13A2 70             LD (HL),B
	13A3 23             INC HL
	13A4 73             LD (HL),E
	13A5 23             INC HL
	13A6 72             LD (HL),D
	13A7 23             INC HL
	13A8 77             LD (HL),A
	13A9 23             INC HL
	13AA 08             EX AF,AF'
	13AB 3D             DEC A
	13AC 20 C6          JR NZ,br23_1
	13AE ED 7B 56 13    LD SP,(Save_Stack_ptr)
	13B2 C9             RET

;; Do a copy with 6-bit shift.
;; Source HL, width 3 bytes.
;; Destination DE, width 4 bytes.
;; A contains byte-count, B contains filler character
;; Returns next space after destination write in HL
.BlitRot6on3:
	13B3 ED 73 56 13    LD (Save_Stack_ptr),SP
	13B7 0E 3E          LD C,LDAvv_OPCODE
	13B9 ED 43 D2 13    LD (smc_br63_1),BC
	13BD ED 43 EC 13    LD (smc_br63_2),BC
	13C1 F9             LD SP,HL
	13C2 EB             EX DE,HL
	13C3 CB 3F          SRL A
	13C5 30 08          JR NC,br63_1
	13C7 3C             INC A
	13C8 08             EX AF,AF'
	13C9 C1             POP BC
	13CA 41             LD B,C
	13CB 3B             DEC SP
	13CC C3 EB 13       JP br63_2
br63_1
	13CF 08             EX AF,AF'
	13D0 D1             POP DE
	13D1 C1             POP BC
smc_br63_1
	13D2 3E 00          LD A,0
	13D4 07             RLCA
	13D5 CB 11          RL C
	13D7 CB 12          RL D
	13D9 CB 13          RL E
	13DB 17             RLA
	13DC CB 11          RL C
	13DE CB 12          RL D
	13E0 CB 13          RL E
	13E2 17             RLA
	13E3 77             LD (HL),A
	13E4 23             INC HL
	13E5 73             LD (HL),E
	13E6 23             INC HL
	13E7 72             LD (HL),D
	13E8 23             INC HL
	13E9 71             LD (HL),C
	13EA 23             INC HL
br63_2
	13EB D1             POP DE
smc_br63_2
	13EC 3E 00          LD A,0
	13EE 07             RLCA
	13EF CB 12          RL D
	13F1 CB 13          RL E
	13F3 CB 10          RL B
	13F5 17             RLA
	13F6 CB 12          RL D
	13F8 CB 13          RL E
	13FA CB 10          RL B
	13FC 17             RLA
	13FD 77             LD (HL),A
	13FE 23             INC HL
	13FF 70             LD (HL),B
	1400 23             INC HL
	1401 73             LD (HL),E
	1402 23             INC HL
	1403 72             LD (HL),D
	1404 23             INC HL
	1405 08             EX AF,AF'
	1406 3D             DEC A
	1407 20 C6          JR NZ,br63_1
	1409 ED 7B 56 13    LD SP,(Save_Stack_ptr)
	140D C9             RET

;; Do a copy with 4-bit shift.
;; Source HL, width 3 bytes.
;; Destination DE, width 4 bytes.
;; A contains byte-count, B contains filler character
;; Returns next space after destination write in HL
.BlitRot4on3:
	140E 48             LD C,B
	140F 47             LD B,A
	1410 79             LD A,C
	1411 C5             PUSH BC
	1412 0E FF          LD C,&FF
	1414 D5             PUSH DE
br43_1
	1415 ED A0          LDI
	1417 ED A0          LDI
	1419 ED A0          LDI
	141B 12             LD (DE),A
	141C 13             INC DE
	141D 10 F6          DJNZ br43_1
	141F E1             POP HL
	1420 C1             POP BC
	1421 79             LD A,C
br43_2
	1422 ED 67          RRD
	1424 23             INC HL
	1425 ED 67          RRD
	1427 23             INC HL
	1428 ED 67          RRD
	142A 23             INC HL
	142B ED 67          RRD
	142D 23             INC HL
	142E 10 F2          DJNZ br43_2
	1430 C9             RET

;; Do a copy with 2-bit shift.
;; Source HL, width 3 bytes.
;; Destination DE, width 4 bytes.
;; A contains byte-count, B contains filler character
;; Returns next space after destination write in HL
.BlitRot2on4:
	1431 ED 73 56 13    LD (Save_Stack_ptr),SP
	1435 0E 3E          LD C,LDAvv_OPCODE
	1437 ED 43 40 14    LD (smc_bt24_1),BC
	143B F9             LD SP,HL
	143C EB             EX DE,HL
br24_1
	143D 08             EX AF,AF'
	143E D1             POP DE
	143F C1             POP BC
smc_bt24_1
	1440 3E 00          LD A,0
	1442 0F             RRCA
	1443 CB 1B          RR E
	1445 CB 1A          RR D
	1447 CB 19          RR C
	1449 CB 18          RR B
	144B 1F             RRA
	144C CB 1B          RR E
	144E CB 1A          RR D
	1450 CB 19          RR C
	1452 CB 18          RR B
	1454 1F             RRA
	1455 73             LD (HL),E
	1456 23             INC HL
	1457 72             LD (HL),D
	1458 23             INC HL
	1459 71             LD (HL),C
	145A 23             INC HL
	145B 70             LD (HL),B
	145C 23             INC HL
	145D 77             LD (HL),A
	145E 23             INC HL
	145F 08             EX AF,AF'
	1460 3D             DEC A
	1461 20 DA          JR NZ,br24_1
	1463 ED 7B 56 13    LD SP,(Save_Stack_ptr)
	1467 C9             RET

;; Do a copy with 6-bit shift.
;; Source HL, width 3 bytes.
;; Destination DE, width 4 bytes.
;; A contains byte-count, B contains filler character
;; Returns next space after destination write in HL
.BlitRot6on4:
	1468 ED 73 56 13    LD (Save_Stack_ptr),SP
	146C 0E 3E          LD C,LDAvv_OPCODE
	146E ED 43 77 14    LD (smc_br64_1),BC
	1472 F9             LD SP,HL
	1473 EB             EX DE,HL
bt64_1
	1474 08             EX AF,AF'
	1475 D1             POP DE
	1476 C1             POP BC
smc_br64_1
	1477 3E 00          LD A,0
	1479 07             RLCA
	147A CB 10          RL B
	147C CB 11          RL C
	147E CB 12          RL D
	1480 CB 13          RL E
	1482 17             RLA
	1483 CB 10          RL B
	1485 CB 11          RL C
	1487 CB 12          RL D
	1489 CB 13          RL E
	148B 17             RLA
	148C 77             LD (HL),A
	148D 23             INC HL
	148E 73             LD (HL),E
	148F 23             INC HL
	1490 72             LD (HL),D
	1491 23             INC HL
	1492 71             LD (HL),C
	1493 23             INC HL
	1494 70             LD (HL),B
	1495 23             INC HL
	1496 08             EX AF,AF'
	1497 3D             DEC A
	1498 20 DA          JR NZ,bt64_1
	149A ED 7B 56 13    LD SP,(Save_Stack_ptr)
	149E C9             RET

;; Do a copy with 4-bit shift.
;; Source HL, width 3 bytes.
;; Destination DE, width 4 bytes.
;; A contains byte-count, B contains filler character
;; Returns next space after destination write in HL
.BlitRot4on4:
	149F 48             LD C,B
	14A0 47             LD B,A
	14A1 79             LD A,C
	14A2 C5             PUSH BC
	14A3 0E FF          LD C,&FF
	14A5 D5             PUSH DE
brot44_1
	14A6 ED A0          LDI
	14A8 ED A0          LDI
	14AA ED A0          LDI
	14AC ED A0          LDI
	14AE 12             LD (DE),A
	14AF 13             INC DE
	14B0 10 F4          DJNZ brot44_1
	14B2 E1             POP HL
	14B3 C1             POP BC
brot44_2
	14B4 ED 67          RRD
	14B6 23             INC HL
	14B7 ED 67          RRD
	14B9 23             INC HL
	14BA ED 67          RRD
	14BC 23             INC HL
	14BD ED 67          RRD
	14BF 23             INC HL
	14C0 ED 67          RRD
	14C2 23             INC HL
	14C3 10 EF          DJNZ brot44_2
	14C5 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Sprite variables
;; LSB is upper extent, MSB is lower extent
;; X extent is in screen units (2 pixels per unit).
;; Units increase down and to the right.
ViewXExtent
	14C6 66 60          DEFW &60 * WORD_HIGH_BYTE + &66
ViewYExtent
	14C8 70 50          DEFW &50 * WORD_HIGH_BYTE + &70

SpriteXStart
	14CA 00             DEFB 0
SpriteRowCount
	14CB 00             DEFB 0

ObjXExtent
	14CC 00 00          DEFW &00 * WORD_HIGH_BYTE + &00
ObjYExtent
	14CE 00 00          DEFW &00 * WORD_HIGH_BYTE + &00
SpriteFlags
	14D0 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; Update the object extent
;; Hl object pointer, calculate and store the object extents.
.StoreObjExtents:
	14D1 23             INC HL
	14D2 23             INC HL
	14D3 CD 4C 16       CALL GetObjExtents
	14D6 ED 43 CC 14    LD (ObjXExtent),BC
	14DA 22 CE 14       LD (ObjYExtent),HL
	14DD C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Takes object in HL, gets union of the extents of that object and
;; Obj[XY]Extent. Returns X extent in HL, Y extent in DE.
.UnionExtents:
	14DE 23             INC HL
	14DF 23             INC HL
	14E0 CD 4C 16       CALL GetObjExtents
	14E3 ED 5B CE 14    LD DE,(ObjYExtent)
	14E7 7C             LD A,H
	14E8 BA             CP D
	14E9 30 01          JR NC,unext_1
	14EB 54             LD D,H
unext_1
	14EC 7B             LD A,E
	14ED BD             CP L
	14EE 30 01          JR NC,unext_2
	14F0 5D             LD E,L
unext_2
	14F1 2A CC 14       LD HL,(ObjXExtent)
	14F4 78             LD A,B
	14F5 BC             CP H
	14F6 30 01          JR NC,unext_3
	14F8 60             LD H,B
unext_3
	14F9 7D             LD A,L
	14FA B9             CP C
	14FB D0             RET NC
	14FC 69             LD L,C
	14FD C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Takes X extent in HL, rounds it to the byte, and stores in ViewXExtent.
.PutXExtent:
	14FE 7D             LD A,L
	14FF C6 03          ADD A,3
	1501 E6 FC          AND &FC
	1503 6F             LD L,A
	1504 7C             LD A,H
	1505 E6 FC          AND &FC
	1507 67             LD H,A
	1508 22 C6 14       LD (ViewXExtent),HL
	150B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Takes X extent in HL and Y extent in DE.
DrawXSafe
	150C CD FE 14       CALL PutXExtent
	150F 18 12          JR Draw_small_start

;; -----------------------------------------------------------------------------------------------------------
;; If the end is before Y_START, give up. Otherwise bump the start down
;; and continue.
.BumpYMinAndDraw:
	1511 3E 40          LD A,Y_START
	1513 BB             CP E
	1514 D0             RET NC
	1515 16 40          LD D,Y_START
	1517 18 11          JR DrawCore

;; -----------------------------------------------------------------------------------------------------------
;; Draw a given range of the screen, drawing into ViewBuff and then
;; blitting to the screen. This entry point sanity-checks the extents
;; first.
;; X extent in HL, Y extent in DE
.UnionAndDraw:
	1519 CD DE 14       CALL UnionExtents
Draw_View
	151C CD FE 14       CALL PutXExtent
	151F 7B             LD A,E
	1520 FE F1          CP &F1
	1522 D0             RET NC
Draw_small_start
	1523 7A             LD A,D
	1524 BB             CP E
	1525 D0             RET NC
	1526 FE 40          CP Y_START
	1528 38 E7          JR c,BumpYMinAndDraw
DrawCore
	152A ED 53 C8 14    LD (ViewYExtent),DE
	152E CD 63 0F       CALL DrawBkgnd
	1531 3A E6 16       LD A,(Has_no_wall)
	1534 E6 0C          AND &0C
	1536 28 45          JR Z,drwc_1
	1538 5F             LD E,A
	1539 E6 08          AND &08
	153B 28 23          JR Z,drwc_2
	153D ED 4B C6 14    LD BC,(ViewXExtent)
	1541 21 11 30       LD HL,Walls_CornerX
	1544 78             LD A,B
	1545 BE             CP (HL)
	1546 30 18          JR NC,drwc_2
	1548 3A C9 14       LD A,(ViewYExtent+1)
	154B 80             ADD A,B
	154C 1F             RRA
	154D 57             LD D,A
	154E 3A 0F 30       LD A,(Walls_ScreenMaxV)
	1551 BA             CP D
	1552 38 0C          JR c,drwc_2
	1554 21 76 2D       LD HL,ObjList_NextRoomV_Far2Near
	1557 D5             PUSH DE
	1558 CD 92 15       CALL Blit_Objects
	155B D1             POP DE
	155C CB 53          BIT 2,E
	155E 28 1D          JR Z,drwc_1
drwc_2
	1560 ED 4B C6 14    LD BC,(ViewXExtent)
	1564 3A 11 30       LD A,(Walls_CornerX)
	1567 B9             CP C
	1568 30 13          JR NC,drwc_1
	156A 3A C9 14       LD A,(ViewYExtent+1)
	156D 91             SUB C
	156E 3F             CCF
	156F 1F             RRA
	1570 57             LD D,A
	1571 3A 10 30       LD A,(Walls_ScreenMaxU)
	1574 BA             CP D
	1575 38 06          JR c,drwc_1
	1577 21 78 2D       LD HL,ObjList_NextRoomU_Far2Near
	157A CD 92 15       CALL Blit_Objects
drwc_1
	157D 21 7A 2D       LD HL,ObjList_Far_Far2Near
	1580 CD 92 15       CALL Blit_Objects
	1583 21 74 2D       LD HL,ObjList_Regular_Far2Near
	1586 CD 92 15       CALL Blit_Objects
	1589 21 7C 2D       LD HL,ObjList_Near_Far2Near
	158C CD 92 15       CALL Blit_Objects
	158F C3 0A 04       JP Blit_screen

;; -----------------------------------------------------------------------------------------------------------
;; Call Sub_BlitObject for each object in the linked list pointed to by
;; HL. Note that we're using the second link, so the passed HL is an
;; object + 2.
.Blit_Objects:
	1592 7E             LD A,(HL)
	1593 23             INC HL
	1594 66             LD H,(HL)
	1595 6F             LD L,A
	1596 B4             OR H
	1597 C8             RET Z
	1598 22 9F 15       LD (smc_CurrObject2+1),HL
	159B CD A3 15       CALL Sub_BlitObject
smc_CurrObject2
	159E 21 00 00       LD HL,&0000
	15A1 18 EF          JR Blit_Objects

;; -----------------------------------------------------------------------------------------------------------
;;  Set carry flag if there's overlap
;;  X adjustments in HL', X overlap in A'
;;  Y adjustments in HL,  Y overlap in A
.Sub_BlitObject:
	15A3 CD 31 16       CALL IntersectObj
	15A6 D0             RET NC
	15A7 32 CB 14       LD (SpriteRowCount),A
	15AA 7C             LD A,H
	15AB 87             ADD A,A
	15AC 84             ADD A,H
	15AD 87             ADD A,A
	15AE D9             EXX
	15AF CB 3C          SRL H
	15B1 CB 3C          SRL H
	15B3 84             ADD A,H
	15B4 5F             LD E,A
	15B5 16 4D          LD D,ViewBuff / WORD_HIGH_BYTE ;; 4D00
	15B7 D5             PUSH DE
	15B8 E5             PUSH HL
	15B9 D9             EXX
	15BA 7D             LD A,L
	15BB ED 44          NEG
	15BD 47             LD B,A
	15BE 3A 88 29       LD A,(Sprite_Width)
	15C1 E6 04          AND &04
	15C3 78             LD A,B
	15C4 20 04          JR NZ,btobj_0
	15C6 87             ADD A,A
	15C7 80             ADD A,B
	15C8 18 02          JR btobj_1
btobj_0
	15CA 87             ADD A,A
	15CB 87             ADD A,A
btobj_1
	15CC F5             PUSH AF
	15CD CD 06 2A       CALL Load_sprite_image_address_into_DE
	15D0 C1             POP BC
	15D1 48             LD C,B
	15D2 06 00          LD B,0
	15D4 09             ADD HL,BC
	15D5 EB             EX DE,HL
	15D6 09             ADD HL,BC
	15D7 3A CA 14       LD A,(SpriteXStart)
	15DA E6 03          AND &03
	15DC C4 04 13       CALL NZ,BlitRot
	15DF C1             POP BC
	15E0 79             LD A,C
	15E1 ED 44          NEG
	15E3 C6 03          ADD A,&03
	15E5 0F             RRCA
	15E6 0F             RRCA
	15E7 E6 07          AND &07
	15E9 4F             LD C,A
	15EA 06 00          LD B,0
	15EC 09             ADD HL,BC
	15ED EB             EX DE,HL
	15EE 09             ADD HL,BC
	15EF C1             POP BC
	15F0 D9             EXX
	15F1 3A 88 29       LD A,(Sprite_Width)
	15F4 D6 03          SUB 3
	15F6 87             ADD A,A
	15F7 5F             LD E,A
	15F8 16 00          LD D,0
	15FA 21 13 16       LD HL,BlitMaskFns
	15FD 19             ADD HL,DE
	15FE 5E             LD E,(HL)
	15FF 23             INC HL
	1600 56             LD D,(HL)
	1601 08             EX AF,AF'
	1602 3D             DEC A
	1603 1F             RRA
	1604 E6 0E          AND &0E
	1606 6F             LD L,A
	1607 26 00          LD H,0
	1609 19             ADD HL,DE
	160A 7E             LD A,(HL)
	160B 23             INC HL
	160C 66             LD H,(HL)
	160D 6F             LD L,A
	160E 3A CB 14       LD A,(SpriteRowCount)
	1611 47             LD B,A
	1612 E9             JP (HL)

;; -----------------------------------------------------------------------------------------------------------
.BlitMaskFns:
	1613 19 16          DEFW 	BlitMasksOf1				;; BlitMasksOf1
	1615 1F 16          DEFW 	BlitMasksOf2				;; BlitMasksOf2
	1617 27 16          DEFW 	BlitMasksOf3				;; BlitMasksOf3
BlitMasksOf1
	1619 BF 0C          DEFW 	BlitMask1of3				;; BlitMask1of3
	161B DA 0C          DEFW 	BlitMask2of3				;; BlitMask2of3
	161D 02 0D          DEFW 	BlitMask3of3				;; BlitMask3of3
BlitMasksOf2
	161F 37 0D          DEFW 	BlitMask1of4				;; BlitMask1of4
	1621 54 0D          DEFW 	BlitMask2of4				;; BlitMask2of4
	1623 7E 0D          DEFW 	BlitMask3of4				;; BlitMask3of4
	1625 B5 0D          DEFW 	BlitMask4of4				;; BlitMask4of4
BlitMasksOf3
	1627 F8 0D          DEFW 	BlitMask1of5				;; BlitMask1of5
	1629 17 0E          DEFW 	BlitMask2of5				;; BlitMask2of5
	162B 43 0E          DEFW 	BlitMask3of5				;; BlitMask3of5
	162D 7C 0E          DEFW 	BlitMask4of5				;; BlitMask4of5
	162F C1 0E          DEFW 	BlitMask5of5				;; BlitMask5of5

;; -----------------------------------------------------------------------------------------------------------
;; Given an object, calculate the intersections with
;; ViewXExtent and ViewYExtent. Also saves the X start in SpriteXStart.
;;
;; Parameters: HL contains object+2 (O_FAR2NEAR_LST)
;; Returns:
;;  Set carry flag if there's overlap
;;  X adjustments in HL', X overlap in A'
;;  Y adjustments in HL,  Y overlap in A
.IntersectObj:
	1631 CD 5B 16      	CALL GetShortObjExt
	1634 78          	LD A,B
	1635 32 CA 14       LD (SpriteXStart),A
	1638 E5             PUSH HL
	1639 ED 5B C6 14    LD DE,(ViewXExtent)
	163D CD 77 16       CALL IntersectExtent
	1640 D9             EXX
	1641 C1             POP BC
	1642 D0             RET NC
	1643 08             EX AF,AF'
	1644 ED 5B C8 14    LD DE,(ViewYExtent)
	1648 CD 77 16       CALL IntersectExtent
	164B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Like GetShortObjExt, except it copes with tall objects.
;;
;; Parameters: Object+2 (O_FAR2NEAR_LST) in HL
;; Returns: X extent in BC, Y extent in HL
.GetObjExtents:
	164C 23             INC HL
	164D 23             INC HL
	164E 7E             LD A,(HL)
	164F CB 5F          BIT 3,A
	1651 28 0B          JR Z,gsobjext_1
	1653 CD 5E 16       CALL gsobjext_1
	1656 7C             LD A,H
	1657 D6 10          SUB &10
	1659 67             LD H,A
	165A C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Sets SpriteFlags and generates extents for the object.
;; Parameters: Object+2 (O_FAR2NEAR_LST) in HL
;; Returns: X extent in BC, Y extent in HL
.GetShortObjExt:
	165B 23             INC HL
	165C 23             INC HL
	165D 7E             LD A,(HL)
gsobjext_1
	165E CB 67          BIT 4,A
	1660 3E 00          LD A,&00
	1662 28 02          JR Z,gsobjext_2
	1664 3E 80          LD A,&80
gsobjext_2
	1666 08             EX AF,AF'
	1667 23             INC HL
	1668 CD 9C 16       CALL UVZtoXY
	166B 23             INC HL
	166C 23             INC HL
	166D 7E             LD A,(HL)
	166E 32 D0 14       LD (SpriteFlags),A
	1671 2B             DEC HL
	1672 08             EX AF,AF'
	1673 AE             XOR (HL)
	1674 C3 9D 29       JP GetSprExtents

;; -----------------------------------------------------------------------------------------------------------
;; Calculate parameters to do with overlapping extents
;; Parameters:
;;  BC holds extent of sprite
;;  DE holds current extent
;; Returns:
;;  Sets carry flag if there's any overlap.
;;  H holds the extent adjustment
;;  L holds the sprite adjustment
;;  A holds the overlap size.
.IntersectExtent:
	1677 7A             LD A,D
	1678 91             SUB C
	1679 D0             RET NC
	167A 78             LD A,B
	167B 93             SUB E
	167C D0             RET NC
	167D ED 44          NEG
	167F 6F             LD L,A
	1680 78             LD A,B
	1681 92             SUB D
	1682 38 0B          JR c,subIntersectExtent
	1684 67             LD H,A
	1685 79             LD A,C
	1686 90             SUB B
	1687 4D             LD C,L
	1688 2E 00          LD L,0
	168A B9             CP C
	168B D8             RET c
	168C 79             LD A,C
	168D 37             SCF
	168E C9             RET

.subIntersectExtent:
	168F 6F             LD L,A
	1690 79             LD A,C
	1691 92             SUB D
	1692 4F             LD C,A
	1693 7B             LD A,E
	1694 92             SUB D
	1695 B9             CP C
	1696 26 00          LD H,0
	1698 D8             RET c
	1699 79             LD A,C
	169A 37             SCF
	169B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Given HP pointing to an Object + 5 (O_U)
;; Return X coordinate in C, Y coordinate in B.
;; (Return: Increments HL by 2 (points on O_Z))
;; 		.----------> X
;; 		|  V   U							eg. U,V,Z = &24, &0C, &C0
;; 		|   \ /									BC = &CF98
;; 		|    |
;; 		|    Z
;; 		Y
.UVZtoXY:
	169C 7E             LD A,(HL)
	169D 57             LD D,A
	169E 23             INC HL
	169F 5E             LD E,(HL)
	16A0 93             SUB E
	16A1 C6 80          ADD A,&80
	16A3 4F             LD C,A
	16A4 23             INC HL
	16A5 7E             LD A,(HL)
	16A6 87             ADD A,A
	16A7 93             SUB E
	16A8 92             SUB D
	16A9 C6 7F          ADD A,&7F
	16AB 47             LD B,A
	16AC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Pointer into stack for current origin coordinates
.DecodeOrgPtr:
	16AD AF 16			DEFW DecodeOrgStack

;; Each stack entry contains UVZ coordinates
DecodeOrgStack
	16AF 00 00 00   	DEFB 	&00, &00, &00
	16B2 00 00 00   	DEFB 	&00, &00, &00
	16B5 00 00 00    	DEFB 	&00, &00, &00
	16B8 00 00 00    	DEFB 	&00, &00, &00

BaseFlags
	16BB 00             DEFB	&00, &00

;; -----------------------------------------------------------------------------------------------------------
;; This is the length of an object instance (as in OOP/Class "object")
;; Head, Heels, a FireObject and any other item (that we also call object,
;; but in the sense "item") in the room (using the TmpObj) use the same
;; data collection format, 18 bytes long.
OBJECT_LENGTH			EQU		18					;; &0012

;; -----------------------------------------------------------------------------------------------------------
O_NEAR2FAR_LST			EQU		&00
O_FAR2NEAR_LST			EQU		&02
O_FLAGS					EQU 	&04
O_U						EQU 	&05
O_V						EQU 	&06
O_Z						EQU 	&07
O_SPRITE				EQU 	&08
O_SPRFLAGS				EQU 	&09
O_FUNC					EQU 	&0A
O_IMPACT				EQU		&0B
;; ????					EQU		&0C
O_OBJUNDER				EQU		&0D				;; D and E = "object under" pointer
O_ANIM					EQU 	&0F
O_DIRECTION				EQU 	&10
O_SPECIAL				EQU 	&11

;; Temp Object used during unpacking room data
.TmpObj_variables:								;; 18 bytes
	16BD 00 00          DEFW 	&0000			;;	0&1 : O_NEAR2FAR_LST (A list)
	16BF 00 00          DEFW 	&0000			;;	2&3 : O_FAR2NEAR_LST (B list)
	16C1 00             DEFB 	&00				;;	4 : O_FLAGS
	16C2 00             DEFB 	&00				;;	5 : O_U coordinate
	16C3 00             DEFB 	&00				;;	6 : O_V coordinate
	16C4 00             DEFB 	&00				;;	7 : O_Z coordinate
	16C5 00             DEFB 	&00				;;	8 : O_SPRITE
	16C6 00             DEFB 	&00				;;	9 : O_SPRFLAGS
	16C7 00             DEFB 	&00				;;	A : O_FUNC
	16C8 FF             DEFB 	&FF				;;	B : O_IMPACT
	16C9 FF             DEFB 	&FF				;;	C :
	16CA 00 00          DEFW 	&0000			;;	D&E : O_OBJUNDER
	16CC 00             DEFB 	&00				;;	F : O_ANIM
	16CD 00             DEFB 	&00				;;	10 : O_DIRECTION (dir code (0 to 7 or FF))
	16CE 00             DEFB 	&00				;;	11 : O_SPECIAL

UnpackFlags
	16CF 00             DEFB &00

DataPtr
	16D0 4C 00          DEFW &004C
CurrData
	16D2 00             DEFB 0

ExpandDone
	16D3 00             DEFB 0
DoorSprites
	16D4 00 00          DEFB &00, &00

currentRoomID
	16D6 00             DEFW &0000

;; -----------------------------------------------------------------------------------------------------------
;; Half-Door flags when building a room (the value will be copied in the object O_FLAGS).
;; Note that a door is composed of 2 half-doors objects.
;;
;; Bits [5:4] as follows (ie. which wall side):
;;   nw(left)=10/\01=ne(up)
;;   sw(down)=11\/00=se(right)
;; Bits [2:0]: UVZ extent:
;; 	      Umax Umin Vmax Vmin Zmax Zmin
;; 	* 7 : U+4, U,   V,   V-4, Z,   Z-18
;; 	* 6 : U,   U-4, V,   V-4, Z,   Z-18
;; 	* 5 : U+4, U,   V+4, V,   Z,   Z-18
;; 	* 4 : U,   U-4, V+4, V,   Z,   Z-18
Door_Obj_Flags: ;; L  R  L  R  L  R  L  R
	16D8              DEFB 	&27, &26, &17, &15, &05, &04, &36, &34

RoomDimensionsIdx
	16E0 00           DEFB &00
RoomDimensionsIdxTmp
	16E1 00           DEFB &00
FloorCode
	16E2 00           DEFB &00
FloorAboveFlag
	16E3 00           DEFB &00

color_scheme
	16E4 00           DEFB 0
WorldId
	16E5 00           DEFB 0
Has_no_wall
	16E6 00           DEFB 0
Has_Door:
	16E7 00           DEFB 0

Max_min_UV_Table:
MinU
	16E8 4D           DEFB &4D  ;; MinU (don't care default value)
MinV
	16E9 41           DEFB &41  ;; minV (don't care default value)
MaxU
	16EA 49           DEFB &49  ;; MaxU (don't care default value)
MaxV
	16EB 4E           DEFB &4E  ;; maxV (don't care default value)

;; AltLimits[12] are also used as IY for drawing extra rooms.
AltLimits1:
	16EC 20 20 20 50         DEFB	&20, &20, &20, &50
AltLimits2:
	16F0 52 4E 00 00         DEFB	&52, &4E, &00, &00

;; -----------------------------------------------------------------------------------------------------------
;; Room Dimensions Array: Min U, Min V, Max U, Max V
;; Index = Room type RoomDimensionsIdx
RoomDimensions:
	16F4 08 08 48 48	DEFB &08, &08, &48, &48
	16F8 08 10 48 40	DEFB &08, &10, &48, &40
	16FC 08 18 48 38	DEFB &08, &18, &48, &38
	1700 08 20 48 30	DEFB &08, &20, &48, &30
	1704 10 08 40 48	DEFB &10, &08, &40, &48
	1708 18 08 38 48	DEFB &18, &08, &38, &48
	170C 20 08 30 48	DEFB &20, &08, &30, &48
	1710 10 10 40 40	DEFB &10, &10, &40, &40

GROUND_LEVEL			EQU 	&C0

;; -----------------------------------------------------------------------------------------------------------
;; Heights of the 4 doors, for the main room.
;; 0/\1
;; 3\/2
DoorHeights
	1714 00 00 00 00 	DEFB 	&00, &00, &00, &00					;; nw ne se sw doors
;; Locations of the 4 doors along their respective
;; walls, for the room currently being processed.
DoorHeightsTmp
	1718 00 00 00 00 	DEFB 	&00, &00, &00, &00					;; nw ne se sw doors

;; The height of the highest door present.
HighestDoor
	171C C0             DEFB 	GROUND_LEVEL						;; The height of the highest door present. reset value = GROUND_LEVEL

;; -----------------------------------------------------------------------------------------------------------
BuildRoom
	171D FD 21 E8 16    LD IY,Max_min_UV_Table
	1721 21 D0 30       LD HL,&30 * WORD_HIGH_BYTE + &D0
	1724 22 C6 14       LD (ViewXExtent),HL
	1727 21 FF 00       LD HL,&00 * WORD_HIGH_BYTE + &FF
	172A 22 C8 14       LD (ViewYExtent),HL
	172D ED 43 D6 16    LD (currentRoomID),BC
	1731 21 C0 C0       LD HL,GROUND_LEVEL * WORD_HIGH_BYTE + GROUND_LEVEL
	1734 22 18 17       LD (DoorHeightsTmp),HL
	1737 22 1A 17       LD (DoorHeightsTmp+2),HL
	173A 21 00 00       LD HL,0
	173D CD D7 17       CALL ReadRoom
	1740 3A E1 16       LD A,(RoomDimensionsIdxTmp)
	1743 32 E0 16       LD (RoomDimensionsIdx),A
	1746 11 14 17       LD DE,DoorHeights
	1749 21 18 17       LD HL,DoorHeightsTmp
	174C 01 04 00       LD BC,4
	174F ED B0          LDIR
	1751 2A 14 17       LD HL,(DoorHeights)
	1754 7D             LD A,L
	1755 BC             CP H
	1756 38 01          JR c,br_sk1
	1758 7C             LD A,H
br_sk1
	1759 ED 44          NEG
	175B C6 C0          ADD A,GROUND_LEVEL
	175D 32 1C 17       LD (HighestDoor),A
	1760 2A D4 16       LD HL,(DoorSprites)
	1763 F5             PUSH AF
	1764 CD 39 29       CALL OccludeDoorway
	1767 F1             POP AF
	1768 F5             PUSH AF
	1769 CD 20 0F       CALL SetPillarHeight
	176C CD F0 19       CALL HasFloorAbove
	176F 3E 00          LD A,0
	1771 17             RLA
	1772 32 E3 16       LD (FloorAboveFlag),A
	1775 F1             POP AF
	1776 CD 2C 30       CALL DoConfigWalls
	1779 CD 13 30       CALL StoreCorner
	177C 2A E6 16       LD HL,(Has_no_wall)
	177F E5             PUSH HL
	1780 7D             LD A,L
	1781 E6 08          AND &08
	1783 28 1F          JR Z,test_if_wall_far_U
	;; Draw the room in V direction (Nw side)
	1785 3E 01          LD A,&01
	1787 CD 8A 2D       CALL SetObjList
	178A ED 4B D6 16    LD BC,(currentRoomID)
	178E 78             LD A,B
	178F 3C             INC A
	1790 A8             XOR B
	1791 E6 0F          AND &0F
	1793 A8             XOR B
	1794 47             LD B,A
	1795 3A EB 16       LD A,(MaxV)
	1798 67             LD H,A
	1799 2E 00          LD L,0
	179B CD D7 17       CALL ReadRoom
	179E 3A 1C 17       LD A,(HighestDoor)
	17A1 CD 2C 30       CALL DoConfigWalls
test_if_wall_far_U
	17A4 FD 21 F0 16    LD IY,AltLimits2
	17A8 E1             POP HL
	17A9 E5             PUSH HL
	17AA 7D             LD A,L
	17AB E6 04          AND &04
	17AD 28 20          JR Z,bldroom_2
	;; Draw the room in U direction (Ne side)
	17AF 3E 02          LD A,&02
	17B1 CD 8A 2D       CALL SetObjList
	17B4 ED 4B D6 16    LD BC,(currentRoomID)
	17B8 78             LD A,B
	17B9 C6 10          ADD A,&10
	17BB A8             XOR B
	17BC E6 F0          AND &F0
	17BE A8             XOR B
	17BF 47             LD B,A
	17C0 3A EA 16       LD A,(MaxU)
	17C3 6F             LD L,A
	17C4 26 00          LD H,0
	17C6 CD D7 17       CALL ReadRoom
	17C9 3A 1C 17       LD A,(HighestDoor)
	17CC CD 2C 30       CALL DoConfigWalls
bldroom_2
	17CF E1             POP HL
	17D0 22 E6 16       LD (Has_no_wall),HL
	17D3 AF             XOR A
	17D4 C3 8A 2D       JP SetObjList

;; -----------------------------------------------------------------------------------------------------------
;; Unpacks a room, adds all its sprites to the lists.
;; See "Room_list1" comments for the Room data format.
;; Inputs: IY points to where we stash the room size.
;; 		   BC = Room Id
;; 		   HL = UV origin of the room
ReadRoom
	17D7 22 AF 16       LD (DecodeOrgStack),HL
	17DA AF             XOR A
	17DB 32 B1 16       LD (DecodeOrgStack+2),A
	17DE C5             PUSH BC
	17DF CD 07 1A       CALL FindVisitRoom
	17E2 06 03          LD B,3
	17E4 CD C1 1A       CALL FetchData
	17E7 32 E1 16       LD (RoomDimensionsIdxTmp),A
	17EA 87             ADD A,A
	17EB 87             ADD A,A
	17EC C6 F4          ADD A,RoomDimensions and WORD_LOW_BYTE
	17EE 6F             LD L,A
	17EF CE 16          ADC A,RoomDimensions / WORD_HIGH_BYTE ;; 16F4
	17F1 95             SUB L
	17F2 67             LD H,A
	17F3 06 02          LD B,2
	17F5 DD 21 AF 16    LD IX,DecodeOrgStack
rdroom_1
	17F9 4E             LD C,(HL)
	17FA DD 7E 00       LD A,(IX+0)
	17FD A7             AND A
	17FE 28 0B          JR Z,rdroom_jump
	1800 91             SUB C
	1801 5F             LD E,A
	1802 1F             RRA
	1803 1F             RRA
	1804 1F             RRA
	1805 E6 1F          AND &1F
	1807 DD 77 00       LD (IX+0),A
	180A 7B             LD A,E
rdroom_jump
	180B 81             ADD A,C
	180C FD 77 00       LD (IY+0),A
	180F 23             INC HL
	1810 DD 23          INC IX
	1812 FD 23          INC IY
	1814 10 E3          DJNZ rdroom_1
	1816 06 02          LD B,2
rdroom_2
	1818 DD 7E FE       LD A,(IX-2)
	181B 87             ADD A,A
	181C 87             ADD A,A
	181D 87             ADD A,A
	181E 86             ADD A,(HL)
	181F FD 77 00       LD (IY+0),A
	1822 FD 23          INC IY
	1824 DD 23          INC IX
	1826 23             INC HL
	1827 10 EF          DJNZ rdroom_2
	1829 06 03          LD B,3
	182B CD C1 1A       CALL FetchData
	182E 32 E4 16       LD (color_scheme),A
	1831 06 03          LD B,3
	1833 CD C1 1A       CALL FetchData
	1836 32 E5 16       LD (WorldId),A
	1839 CD F9 18       CALL DoWallsnDoors
	183C 06 03          LD B,3
	183E CD C1 1A       CALL FetchData
	1841 32 E2 16       LD (FloorCode),A
	1844 CD 04 12       CALL SetFloorAddr
rdroom_loop
	1847 CD 9D 18       CALL ProcEntry
	184A 30 FB          JR NC,rdroom_loop
	184C C1             POP BC
	184D C3 D3 32       JP AddSpecialItems

;; -----------------------------------------------------------------------------------------------------------
;; value going in are 3-bit signed value (-4 to +3)
;; we add that value to the value in (HL)
;; Return result in A
Add3Bit
	1850 CB 57          BIT 2,A
	1852 28 02          JR Z,add3b_1
	1854 F6 F8          OR &F8
add3b_1
	1856 86             ADD A,(HL)
	1857 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Recursively do ProcEntry. Macro code is in A.
.RecProcEntry:
	1858 08             EX AF,AF'
	1859 CD AC 1A       CALL FetchData333
	185C 2A AD 16       LD HL,(DecodeOrgPtr)
	185F F5             PUSH AF
	1860 78             LD A,B
	1861 CD 50 18       CALL Add3Bit
	1864 47             LD B,A
	1865 23             INC HL
	1866 79             LD A,C
	1867 CD 50 18       CALL Add3Bit
	186A 4F             LD C,A
	186B 23             INC HL
	186C F1             POP AF
	186D D6 07          SUB 7
	186F 86             ADD A,(HL)
	1870 23             INC HL
	1871 22 AD 16       LD (DecodeOrgPtr),HL
	1874 70             LD (HL),B
	1875 23             INC HL
	1876 71             LD (HL),C
	1877 23             INC HL
	1878 77             LD (HL),A
	1879 3A D2 16       LD A,(CurrData)
	187C 2A D0 16       LD HL,(DataPtr)
	187F F5             PUSH AF
	1880 E5             PUSH HL
	1881 CD DE 19       CALL FindMacro
	1884 22 D0 16       LD (DataPtr),HL
rpent_loop
	1887 CD 9D 18       CALL ProcEntry
	188A 30 FB          JR NC,rpent_loop
	188C 2A AD 16       LD HL,(DecodeOrgPtr)
	188F 2B             DEC HL
	1890 2B             DEC HL
	1891 2B             DEC HL
	1892 22 AD 16       LD (DecodeOrgPtr),HL
	1895 E1             POP HL
	1896 F1             POP AF
	1897 22 D0 16       LD (DataPtr),HL
	189A 32 D2 16       LD (CurrData),A
	;; flow into ProcEntry
;; -----------------------------------------------------------------------------------------------------------
;; Process one entry in the room description array. Returns carry when done.
ROOM_DATA_BREAK			EQU		&FF
ROOM_DATA_MACRO			EQU		&C0

.ProcEntry:
	189D 06 08          LD B,8
	189F CD C1 1A       CALL FetchData
	18A2 FE FF          CP ROOM_DATA_BREAK
	18A4 37             SCF
	18A5 C8             RET Z
	18A6 FE C0          CP ROOM_DATA_MACRO
	18A8 30 AE          JR NC,RecProcEntry
	18AA FD E5          PUSH IY
	18AC FD 21 BD 16    LD IY,TmpObj_variables
	18B0 CD 44 2B       CALL InitObj
	18B3 FD E1          POP IY
	18B5 06 02          LD B,2
	18B7 CD C1 1A       CALL FetchData
	;; The 2 bits fetched are:
	;; Bit0, if 0 : only one object with current object code;
	;;       if 1 : several objects to create with current object code.
	;; Bit1, if 0 : we will need to fetch one bit before every coord-set to get the per-object orientation bit.
	;;       if 1 : the next fetched bit will serve as orientation bit for all onjects in that group.
	18BA CB 4F          BIT 1,A
	18BC 20 04          JR NZ,global_orientation_bit
	18BE 3E 01          LD A,&01
	18C0 18 0A          JR pent_1

global_orientation_bit
	18C2 F5             PUSH AF
	18C3 06 01          LD B,1
	18C5 CD C1 1A       CALL FetchData
	18C8 C1             POP BC
	18C9 07             RLCA
	18CA 07             RLCA
	18CB B0             OR B
pent_1
	18CC 32 CF 16       LD (UnpackFlags),A
pent_loop
	18CF CD 46 1A       CALL SetTmpObjFlags
	18D2 CD 7A 1A       CALL SetTmpObjUVZEx
	18D5 3A CF 16       LD A,(UnpackFlags)
	18D8 1F             RRA
	18D9 30 0B          JR NC,pent_one_obj
	18DB 3A D3 16       LD A,(ExpandDone)
	18DE 3C             INC A
	18DF A7             AND A
	18E0 C8             RET Z
	18E1 CD EB 18       CALL AddObjOpt
	18E4 18 E9          JR pent_loop
pent_one_obj
	18E6 CD EB 18       CALL AddObjOpt
	18E9 A7             AND A
	18EA C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; do an "AddObject"
.AddObjOpt:
	18EB 21 BD 16       LD HL,TmpObj_variables
	18EE 01 12 00       LD BC,OBJECT_LENGTH
	18F1 FD E5          PUSH IY
	18F3 CD C8 2D       CALL AddObject
	18F6 FD E1          POP IY
	18F8 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Initialise the doors. IY is pointing a byte after Max_min_UV_Table
;; (ie. IY = Max_min_UV_Table+4) and will be accessed with negative offsets.
.DoWallsnDoors:
	18F9 06 03          LD B,3
	18FB CD C1 1A       CALL FetchData
	18FE 87             ADD A,A
	18FF 6F             LD L,A
	1900 67             LD H,A
	1901 24             INC H
	1902 22 D4 16       LD (DoorSprites),HL
	1905 DD 21 D8 16    LD IX,Door_Obj_Flags
	1909 21 18 17       LD HL,DoorHeightsTmp
	190C D9             EXX
	190D FD 7E FF       LD A,(IY-1)
	1910 C6 04          ADD A,4
	1912 CD 73 19       CALL DoWallnDoorU
	1915 21 19 17       LD HL,DoorHeightsTmp+1
	1918 D9             EXX
	1919 FD 7E FE       LD A,(IY-2)
	191C C6 04          ADD A,4
	191E CD 67 19       CALL DoWallnDoorV
	1921 21 1A 17       LD HL,DoorHeightsTmp+2
	1924 D9             EXX
	1925 FD 7E FD       LD A,(IY-3)
	1928 D6 04          SUB 4
	192A CD 73 19       CALL DoWallnDoorU
	192D 21 1B 17       LD HL,DoorHeightsTmp+3
	1930 D9             EXX
	1931 FD 7E FC       LD A,(IY-4)
	1934 D6 04          SUB 4
	1936 C3 67 19       JP DoWallnDoorV

;; -----------------------------------------------------------------------------------------------------------
;; Update flags into Has_no_vall and Has_Door; this will be called for all 4 walls/doors
;; so both Has_no_vall and Has_Door will have 4 meaningful bits [3:0] for Nw,Ne,Se,Sw
;; if needed; sets the door Z coord in TmpObj_variables and HL' (DoorHeightsTmp pointer).
;; Read value:
;;  0 : Wall, No door
;;  1 : No wall, No door.
;;  2..7 :  Door; Door Height &A2 to &C0 (GROUND_LEVEL)
;; Return: Has_no_vall and Has_Door updated
;;         Carry reset = has no door; Carry set = has door
.FetchWallnDoor:
	1939 06 03          LD B,3
	193B CD C1 1A       CALL FetchData
	193E 21 E6 16       LD HL,Has_no_wall
	1941 D6 02          SUB 2
	1943 38 17          JR c,FetchedNoDoor
	1945 CB 16          RL (HL)
	1947 23             INC HL
	1948 37             SCF
	1949 CB 16          RL (HL)
	194B D6 07          SUB 7
	194D ED 44          NEG
	194F 4F             LD C,A							;; x1
	1950 87             ADD A,A							;; x2
	1951 81             ADD A,C							;; x3
	1952 87             ADD A,A							;; x6
	1953 C6 96          ADD A,&96						;; x6 + &96
	1955 32 C4 16       LD (TmpObj_variables+O_Z),A
	1958 37             SCF
	1959 D9             EXX
	195A 77             LD (HL),A
	195B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; If no door is found on the current side, update the corresponding bit in:
;;  * Has_no_vall (0  = Wall or 1 NoWall);
;;  * Has_Door (0 = No Door)
FetchedNoDoor:																;; No door case:
	195C FE FF          CP &FF
	195E 3F             CCF
	195F CB 16          RL (HL)
	1961 A7             AND A
	1962 23             INC HL
	1963 CB 16          RL (HL)
	1965 A7             AND A
	1966 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Build a Door on the U or V axis:
;; DoWallnDoorV : Build a door parallel to the V axis (Nw and Se sides).
;; DoWallnDoorU : Build a door parallel to the U axis (Ne and Sw sides).
;; Coordinate of the wall plane in A
;; HL' point on the coordinates
;; IX points to flags to use (Door_Obj_Flags).
.DoWallnDoorV:
	1967 32 C2 16       LD (TmpObj_variables+O_U),A
	196A 21 C3 16       LD HL,TmpObj_variables+O_V
	196D 3A B0 16       LD A,(DecodeOrgStack+1)
	1970 C3 7C 19       JP DoWallnDoorAux
.DoWallnDoorU:
	1973 32 C3 16       LD (TmpObj_variables+O_V),A
	1976 21 C2 16       LD HL,TmpObj_variables+O_U
	1979 3A AF 16       LD A,(DecodeOrgStack)
	;; will flow into DoWallnDoorAux
;; -----------------------------------------------------------------------------------------------------------
;; HL points to the object's coordinate field to write to
;; A holds the origin value in that dimension.
;; Takes extra parameters in IX
;; IX (object flags) and HL' (pointer to relevant DoorHeightsTmp entry).
;; 		V   U
;; 		 \ /
;; 		  |
;; 		  Z
.DoWallnDoorAux:
	197C 87             ADD A,A
	197D 87             ADD A,A
	197E 87             ADD A,A
	197F F5             PUSH AF
	1980 C6 24          ADD A,DOOR_LOW
	1982 77             LD (HL),A
	1983 E5             PUSH HL
	1984 CD 39 19       CALL FetchWallnDoor
	1987 30 4E          JR NC,NoDoorRet
	1989 DD 7E 00       LD A,(IX+0)
	198C 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
	198F DD 23          INC IX
	1991 3A D4 16       LD A,(DoorSprites)
	1994 32 C5 16       LD (TmpObj_variables+O_SPRITE),A
	1997 CD AD 19       CALL AddHalfDoorObj
	199A DD 7E 00       LD A,(IX+0)
	199D 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
	19A0 DD 23          INC IX
	19A2 3A D5 16       LD A,(DoorSprites+1)
	19A5 32 C5 16       LD (TmpObj_variables+O_SPRITE),A
	19A8 E1             POP HL
	19A9 F1             POP AF
	19AA C6 2C          ADD A,DOOR_HIGH
	19AC 77             LD (HL),A
AddHalfDoorObj
	19AD CD EB 18       CALL AddObjOpt
	19B0 3A C1 16       LD A,(TmpObj_variables+O_FLAGS)
	19B3 4F             LD C,A
	19B4 E6 30          AND &30
	19B6 E0             RET PO
	19B7 E6 10          AND &10
	19B9 F6 01          OR &01
	19BB 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
	19BE 3A C4 16       LD A,(TmpObj_variables+O_Z)
	19C1 FE C0          CP GROUND_LEVEL
	19C3 C8             RET Z
	19C4 F5             PUSH AF
	19C5 C6 06          ADD A,6
	19C7 32 C4 16       LD (TmpObj_variables+O_Z),A
	19CA 3E 50          LD A,SPR_DOORSTEP
	19CC 32 C5 16       LD (TmpObj_variables+O_SPRITE),A
	19CF CD EB 18       CALL AddObjOpt
	19D2 F1             POP AF
	19D3 32 C4 16       LD (TmpObj_variables+O_Z),A
	19D6 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; No door case - unwind variables and return
.NoDoorRet:
	19D7 E1             POP HL
	19D8 F1             POP AF
	19D9 DD 23          INC IX
	19DB DD 23          INC IX
	19DD C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Finds a Macro used to Build a room
;; Reset CurrData. Macro id we are searching is passed in A'.
;; Returns a pointer to a specific room description macro in Room_Macro_data
.FindMacro:
	19DE 3E 80          LD A,&80
	19E0 32 D2 16       LD (CurrData),A
	19E3 21 80 41       LD HL,Room_Macro_data
	19E6 08             EX AF,AF'
	19E7 16 00          LD D,0
fm_loop
	19E9 5E             LD E,(HL)
	19EA 23             INC HL
	19EB BE             CP (HL)
	19EC C8             RET Z
	19ED 19             ADD HL,DE
	19EE 18 F9          JR fm_loop

;; -----------------------------------------------------------------------------------------------------------
;; Checks if the room above the current one exists and has no floor (so we can get in by going up)
;; Returns with Carry set if the room above has a floor.
;; Returns with Carry reset if the room above has No floor.
.HasFloorAbove:
	19F0 ED 4B D6 16    LD BC,(currentRoomID)
	19F4 79             LD A,C
	19F5 3D             DEC A
	19F6 E6 F0          AND &F0
	19F8 4F             LD C,A
	19F9 CD 10 1A       CALL FindRoom
	19FC D8             RET c
check_floorid_above:
    ;; Room Data Format (excluding size byte) is:
	;; 12b roomID UVZ, 3b roomDimensions, 3b colorScheme,
	;; 3b WorldId, 15b door data, 3b floorId, 8b Object, etc.
	;; 		uuuuvvvv_zzzzdddc_ccwwwDDD_pppDDDpp_pDDDfffo_ooooooo..
	;; DE currently pointing on the second byte, so +3 points on the
	;; byte with the floorId. ORing &F1 checks if floorId is 7 (no floor).
	19FD 13             INC DE
	19FE 13             INC DE
	19FF 13             INC DE
	1A00 1A             LD A,(DE)
	1A01 F6 F1          OR &F1
	1A03 3C             INC A
	1A04 C8             RET Z
	1A05 37             SCF
	1A06 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Like FindRoom, but set the "visited" bit (in RoomMask_buffer) as well.
;; Input: Takes room Id in BC.
;; Return: First data byte in A, and room bit mask & location (in RoomMask_buffer) in C' and HL'.
;; Return: Carry set=not found or Carry reset=found)
;; If found, DataPtr and CurrData are updated, and pointing on the
;; begining of the room actual data (after room ID)
FindVisitRoom
	1A07 CD 10 1A       CALL FindRoom
	1A0A D9             EXX
	1A0B 79             LD A,C
	1A0C B6             OR (HL)
	1A0D 77             LD (HL),A
	1A0E D9             EXX
	1A0F C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Find room data if room exist.
;; Input: Takes room Id in BC.
;; Return: First data byte in A, and room bit mask & location (in RoomMask_buffer) in C' and HL'.
;; Return: Carry set=not found or Carry reset=found)
;; If found, DataPtr and CurrData are updated, and pointing on the
;; begining of the room actual data (after room ID)
.FindRoom:
	1A10 16 00          LD D,0
	1A12 21 50 42       LD HL,Room_list
;; -----------------------------------------------------------------------------------------------------------
;; Finds an entry in the room list.
;; The data structure is:
;;  -  1 byte = size (excluding this byte); a size of zero terminates the list.
;;  -  1.5 bytes = room id "UVZ" (Bottom nibble is ignored for matching),
;;							 eg. "8A 43" means Room &8A40, also note these are
;;							    in big_endian format: U=8,V=&A,Z=4 (3=don't care)
;;  -  0.5 + N bytes of Data
;; Input:
;;   HL pointing to the start of the tagged list
;;   BC is the room id we're looking for (eg. &8A40 for Head's first room)
;;   HL' and C' are incremented as the address in RoomMask_buffer and
;;      bit mask for a bitfield associated with the Nth entry.
;; Return:
;;   DE will be the entry size (D should be zero)
;; 	 The carry flag is set if nothing's found.
;; 	 If the room is found, you can read data with FetchData:
;;      Current byte to process in CurrData;
;;      Addr pointer on data in DataPtr
.Sub_FindRoom:
	1A15 D9             EXX
	1A16 21 F4 34       LD HL,RoomMask_buffer
	1A19 0E 01          LD C,&01
	1A1B D9             EXX
Sub_FindRoom_more
	1A1C 5E             LD E,(HL)
	1A1D 1C             INC E
	1A1E 1D             DEC E
	1A1F 37             SCF
	1A20 C8             RET Z
	1A21 23             INC HL
	1A22 78             LD A,B
	1A23 BE             CP (HL)
	1A24 28 0A          JR Z,frin_b_matched
frin_2
	1A26 19             ADD HL,DE
	1A27 D9             EXX
	1A28 CB 01          RLC C
	1A2A 30 01          JR NC,frin_1
	1A2C 23             INC HL
frin_1
	1A2D D9             EXX
	1A2E 18 EC          JR Sub_FindRoom_more
frin_b_matched
	1A30 23             INC HL
	1A31 1D             DEC E
	1A32 7E             LD A,(HL)
	1A33 E6 F0          AND &F0
	1A35 B9             CP C
	1A36 20 EE          JR NZ,frin_2
	1A38 2B             DEC HL
	1A39 22 D0 16       LD (DataPtr),HL
	1A3C 3E 80          LD A,&80
	1A3E 32 D2 16       LD (CurrData),A
	1A41 06 04          LD B,4
	1A43 C3 C1 1A       JP FetchData

;; -----------------------------------------------------------------------------------------------------------
;; When unpacking Room data, will set the flags of the object processed.
.SetTmpObjFlags:
	1A46 3A CF 16       LD A,(UnpackFlags)
	1A49 1F             RRA
	1A4A 1F             RRA
	1A4B 38 05          JR c,stof_1
	1A4D 06 01          LD B,1
	1A4F CD C1 1A       CALL FetchData
stof_1
	1A52 E6 01          AND &01
	1A54 07             RLCA
	1A55 07             RLCA
	1A56 07             RLCA
	1A57 07             RLCA
	1A58 E6 10          AND &10
	1A5A 4F             LD C,A
	1A5B 3A BC 16       LD A,(BaseFlags+1)
	1A5E A9             XOR C
	1A5F 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
	1A62 ED 4B BB 16    LD BC,(BaseFlags)
	1A66 CB 67          BIT 4,A
	1A68 28 0B          JR Z,stof_end
	1A6A CB 4F          BIT 1,A
	1A6C 28 05          JR Z,stof_2
	1A6E EE 01          XOR &01
	1A70 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
stof_2
	1A73 0D             DEC C
	1A74 0D             DEC C
stof_end
	1A75 79             LD A,C
	1A76 32 CD 16       LD (TmpObj_variables+O_DIRECTION),A
	1A79 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Read (ie. FetchData) U, V, Z coords (3 bits each), and
;; set TmpObj_variables's location
.SetTmpObjUVZEx:
	1A7A CD AC 1A       CALL FetchData333
SetTmpObjUVZ
	1A7D 08             EX AF,AF'
	1A7E 2A AD 16       LD HL,(DecodeOrgPtr)
	1A81 11 C2 16       LD DE,TmpObj_variables+O_U
;; Calculates U, V and Z coordinates
;;  DE points to where we will write the U, V and Z coordinates
;;  HL points to the address of the origin data.
;;  We pass in coordinates: B contains U, C contains V, A' contains Z
;;  U/V coordinates are built on a grid of * 8 + 12
;;  Z coordinate is built on a grid of * 6 + 0x96 (0..7 will return &96 to &C0=GROUND_LEVEL)
;;  Sets ExpandDone to 0xFF (done) if "B = 7, C = 7, A' = 0"
.Set_UVZ:
	1A84 78             LD A,B
	1A85 CD A4 1A       CALL CalcGridPos
	1A88 12             LD (DE),A
	1A89 79             LD A,C
	1A8A CD A4 1A       CALL CalcGridPos
	1A8D 13             INC DE
	1A8E 12             LD (DE),A
	1A8F 08             EX AF,AF'
	1A90 F5             PUSH AF
	1A91 86             ADD A,(HL)
	1A92 6F             LD L,A
	1A93 87             ADD A,A
	1A94 85             ADD A,L
	1A95 87             ADD A,A
	1A96 C6 96          ADD A,&96
	1A98 13             INC DE
	1A99 12             LD (DE),A
	1A9A F1             POP AF
	1A9B 2F             CPL
	1A9C A1             AND C
	1A9D A0             AND B
	1A9E F6 F8          OR &F8
	1AA0 32 D3 16       LD (ExpandDone),A
	1AA3 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Add curr coord (U or V) to the Origin (U or V) from (HL) and
;; calculate the resulting pixel position.
;; Input: A = U or V current value;
;;        HL : pointer on U or V origin value.
;; Output: A = ((coord+origin) * 8) + 12
;;         HL is incremented
.CalcGridPos:
	1AA4 86             ADD A,(HL)
	1AA5 23             INC HL
	1AA6 07             RLCA
	1AA7 07             RLCA
	1AA8 07             RLCA
	1AA9 C6 0C          ADD A,&0C
	1AAB C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This will fetch (see FetchData) 3 values of 3-bits.
;; Output: First value in B, next in C and Last in A.
;;         CurrData and DataPtr are updated as needed
;; It is used to get the UVZ coords from the Room data.
.FetchData333:
	1AAC 06 03          LD B,3
	1AAE CD C1 1A       CALL FetchData
	1AB1 F5             PUSH AF
	1AB2 06 03          LD B,3
	1AB4 CD C1 1A       CALL FetchData
	1AB7 F5             PUSH AF
	1AB8 06 03          LD B,3
	1ABA CD C1 1A       CALL FetchData
	1ABD E1             POP HL
	1ABE C1             POP BC
	1ABF 4C             LD C,H
	1AC0 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Fetch a value from bit-packed data.
;; Input: Number of bits in B.
;;        Also the current byte of data must be in CurrData;
;;        and current data pointer in DataPtr
;; Output: DataPtr and CurrData updated
;;         Fetched B-bit value in A
;; Exemple: From the 2 consecutive bytes "B1" and "72" ("101|1_000|1_0|111_00|10"),
;;     if we FetchData with B being 3 then 4, 2 and finaly 5 we get in A
;;     respectively &05, then &08, &02 and finaly &1C, with CurrData being &80
;;     and DataPtr increase by 1.
FetchData
	1AC1 11 D2 16       LD DE,CurrData
	1AC4 1A             LD A,(DE)
	1AC5 2A D0 16       LD HL,(DataPtr)
	1AC8 4F             LD C,A
	1AC9 AF             XOR A
fetchd_0
	1ACA CB 11          RL C
	1ACC 28 06          JR Z,fdta_next
fetchd
	1ACE 17             RLA
	1ACF 10 F9          DJNZ fetchd_0
	1AD1 EB             EX DE,HL
	1AD2 71             LD (HL),C
	1AD3 C9             RET
fdta_next
	1AD4 23             INC HL
	1AD5 22 D0 16       LD (DataPtr),HL
	1AD8 4E             LD C,(HL)
	1AD9 37             SCF
	1ADA CB 11          RL C
	1ADC C3 CE 1A       JP fetchd

;; -----------------------------------------------------------------------------------------------------------
;; Calls all the initialization functions
Init_setup:
	1ADF CD 8B 02       CALL Init_table_and_crtc
	1AE2 C3 8C 29       JP Init_table_rev

;; -----------------------------------------------------------------------------------------------------------
;; Initialization of a new game
;; Note that it build Heels room, save it and switch to Head
.Init_new_game:
	1AE5 AF             XOR A
	1AE6 32 B3 31       LD (parts_got_Mask),A		;; Nb parts got
	1AE9 32 17 38       LD (access_new_room_code),A
	1AEC 32 D4 34       LD (Save_point_value),A
	1AEF 21 40 8A       LD HL,RoomID_Batman_1st		;; 1st room ID
	1AF2 22 0E 01       LD (current_Room_ID),HL
	1AF5 CD C6 35       CALL Erase_visited_room
	1AF8 CD 96 1B       CALL Reinitialise
	1AFB C9 1B          DEFW StatusReinit
	1AFD CD 96 1B       CALL Reinitialise
	1B00 EF 34          DEFW reset_count_val ;; reset nbtimes_died and nbcollected_bonus
	1B02 C3 56 33       JP ResetSpecials

;; -----------------------------------------------------------------------------------------------------------
.Init_Continue_game:
	1B05 CD 96 1B       CALL Reinitialise
	1B08 C9 1B          DEFW StatusReinit
	1B0A C3 03 34       JP DoContinue

;; -----------------------------------------------------------------------------------------------------------
EnterRoom
	1B0D D9             EXX
	1B0E CD 96 1B       CALL Reinitialise
	1B11 51 2D          DEFW ObjVars
	1B13 CD 96 1B       CALL Reinitialise
	1B16 D6 1B          DEFW reset_stat			;; reset some sta like jump height, isStill, etc.
	1B18 21 00 50       LD HL,BackgrdBuff
	1B1B 01 40 00       LD BC,&0040
	1B1E CD A8 1B       CALL Erase_forward_Block_RAM
	1B21 D9             EXX
	1B22 CD 1D 17       CALL BuildRoom
	1B25 CD 3A 1B       CALL GetScreenEdges
	1B28 CD 29 03       CALL DrawBlacked
	1B2B CD 19 20       CALL CharThing15

Update_Screen_Periph
	1B2E 3A E4 16       LD A,(color_scheme)
	1B31 CD 5D 03       CALL Set_colors
	1B34 CD 9C 34       CALL PrintStatus
	1B37 C3 6B 37       JP Draw_Screen_Periphery

;; -----------------------------------------------------------------------------------------------------------
.GetScreenEdges:
	1B3A 2A E8 16       LD HL,(Max_min_UV_Table)
	1B3D 3A E7 16       LD A,(Has_Door)
	1B40 F5             PUSH AF
	1B41 CB 4F          BIT 1,A
	1B43 28 04          JR Z,br_2408
	;; If there's a door, bump up MinV.
	1B45 25             DEC H
	1B46 25             DEC H
	1B47 25             DEC H
	1B48 25             DEC H
br_2408
	1B49 1F             RRA
	1B4A 7D             LD A,L				;; minU
	1B4B 30 03          JR NC,br_240F
	;; If there's the other door, reduce MinU.
	1B4D D6 04          SUB 4
	1B4F 6F             LD L,A
	;; Find MinU - MinV
br_240F
	1B50 94             SUB H
	;; And use this to set the X coordinate of the corner.
	1B51 C6 80          ADD A,&80
	1B53 32 31 10       LD (smc_CornerPos+1),A
	1B56 4F             LD C,A
	;; Then set the Y coordinate of the corner, taking into
    ;; account various fudge factors.
	1B57 3E FC          LD A,&FC
	1B59 94             SUB H
	1B5A 95             SUB L
	;; Save Y coordinate of the corner in B for TweakEdges
	1B5B 47             LD B,A
	;; Then generate offsets to convert from screen X coordinates to
    ;; associated Y coordinates.
	1B5C ED 44          NEG
	1B5E 5F             LD E,A
	1B5F 81             ADD A,C
	1B60 32 45 10       LD (smc_LeftAdj+1),A
	1B63 79             LD A,C
	1B64 ED 44          NEG
	1B66 83             ADD A,E
	1B67 32 3D 10       LD (smc_RightAdj+1),A
	1B6A CD 2D 11       CALL TweakEdges
	;; Then, inspect Has_Doors to see if we need to remove
	;; a column panel or two.
	1B6D F1             POP AF
	1B6E 1F             RRA
	1B6F F5             PUSH AF
	1B70 D4 8B 1B       CALL NC,NukeColL
	1B73 F1             POP AF
	1B74 1F             RRA
	1B75 D8             RET c
;; Scan from the right for the first drawn column
NukeColR
	1B76 21 3E 50       LD HL,BackgrdBuff + 62  ;; &503E = &5000 + 31*2
ScanR
	1B79 7E             LD A,(HL)
	1B7A A7             AND A
	1B7B 20 04          JR NZ,NukeCol
	1B7D 2B             DEC HL
	1B7E 2B             DEC HL
	1B7F 18 F8          JR ScanR

;; If the current screen column sprite is a blank, delete it.
.NukeCol:
	1B81 23             INC HL
	1B82 7E             LD A,(HL)
	1B83 F6 FA          OR &FA
	1B85 3C             INC A
	1B86 C0             RET NZ
	1B87 77             LD (HL),A
	1B88 2B             DEC HL
	1B89 77             LD (HL),A
	1B8A C9             RET

;; Scan from the left for the first drawn column
.NukeColL:
	1B8B 21 00 50       LD HL,BackgrdBuff
ScanL:
	1B8E 7E             LD A,(HL)
	1B8F A7             AND A
	1B90 20 EF          JR NZ,NukeCol
	1B92 23             INC HL
	1B93 23             INC HL
	1B94 18 F8          JR ScanL

;; -----------------------------------------------------------------------------------------------------------
;; This copies a block of data to another block in order to reset the
;; values of the destination block.
;; The "CALL Reinitialise" must be followed by a DEFW argument with
;; the address of the byte indicating both block length.
;; Then the first byte of data to copy is the addr after it up to the
;; block length.
;; The destination block is the contiguous block after that.
Reinitialise:
	1B96 E1             POP HL
	1B97 5E             LD E,(HL)
	1B98 23             INC HL
	1B99 56             LD D,(HL)
	1B9A 23             INC HL
	1B9B E5             PUSH HL
	1B9C EB             EX DE,HL
	1B9D 4E             LD C,(HL)
	1B9E 06 00          LD B,0
	1BA0 23             INC HL
	1BA1 54             LD D,H
	1BA2 5D             LD E,L
	1BA3 09             ADD HL,BC
	1BA4 EB             EX DE,HL
	1BA5 ED B0          LDIR
	1BA7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; 2 available functions to Erase a block of memory.
;; Erase_forward_Block_RAM will erase using the value 00
;; Erase_block_val_in_E will erase using the value in E
;; Input: HL=start addr, BC=length, E (erase value for Erase_block_val_in_E only)
Erase_forward_Block_RAM:
	1BA8 1E 00          LD E,0
Erase_block_val_in_E:
	1BAA 73             LD (HL),E
	1BAB 23             INC HL
	1BAC 0B             DEC BC
	1BAD 78             LD A,B
	1BAE B1             OR C
	1BAF 20 F9          JR NZ,Erase_block_val_in_E
	1BB1 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; tapfoot counter??
	1BB2 30				DEFB &30
	1BB3 02         	DEFB &02
	1BB4 30				DEFB &30

;; -----------------------------------------------------------------------------------------------------------
sounds_pointer_array
	1BB5 AD 0A          DEFW &0AAD					;; 0 0AAD
	1BB7 B8 0A          DEFW Sound_ID_Run			;; 1 0AB8
	1BB9 E0 0A          DEFW &0AE0					;; 2 0AE0
	1BBB C5 0A          DEFW &0AC5					;; 3 0AC5
	1BBD C9 0A          DEFW &0AC9					;; 4 0AC9
	1BBF DC 0A          DEFW Sound_ID_Menu_Blip		;; 5 0ADC
	1BC1 DC 0A          DEFW Sound_ID_Menu_Blip		;; 6 0ADC
	1BC3 D4 0A      	DEFW &0AD4					;; 7 0AD4
	1BC5 D8 0A          DEFW &0AD8					;; 8 0AD8
	1BC7 D8 0A          DEFW &0AD8					;; 9 0AD8

;; -----------------------------------------------------------------------------------------------------------
;; These are the init/default values for the Inventory (see 247B) and
;; Counters (see 247C). First byte is the length of the array (9).
;; Then the reset values to initialize the variables.
;; The Reinitialise call with 2471 as argument will copy the 9 bytes of
;; StatusReinit_reset_data into the Inventory (247B) & after
CNT_SPEED				EQU		1
CNT_SPRING				EQU		2
CNT_SHIELD				EQU		3
CNT_LIVES				EQU		4

StatusReinit:
	1BC9 05             DEFB	5 ;; length
StatusReinit_reset_data:
	1BCA 00             DEFB 	0 ;; Inventory
	1BCB 00             DEFB 	0 ;; CNT_SPEED
	1BCC 00             DEFB 	0 ;; CNT_SPRING
	1BCD 00             DEFB 	0 ;; CNT_SHIELD
	1BCE 08             DEFB 	8 ;; CNT_LIVES

;; -----------------------------------------------------------------------------------------------------------
;; This will indicate the available character inventory.
;; A '1' means that the item has been picked up.
;;		bit0 : BatThruster
;;		bit1 : BatBelt
;;		bit2 : BatBoots
;;		bit3 : BatBag
Inventory:
	1BCF 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; These are the main counters (Lives, Invuln, Speed, Spring, Donuts)
NB_COUNTERS				EQU		4

.Counters:
Counter_speed
	1BD0 00             DEFB 	0	;; CNT_SPEED
Counter_spring
	1BD1 00             DEFB 	0	;; CNT_SPRING
Counter_shield
	1BD2 00             DEFB 	0	;; CNT_SHIELD
Counter_lives
	1BD3 04             DEFB 	4	;; CNT_LIVES
InvulnModulo
	1BD4 03             DEFB	3	;; InvulnModulo
SpeedModulo
	1BD5 02             DEFB	2	;; SpeedModulo

;; -----------------------------------------------------------------------------------------------------------
;; the 5 bytes of reset_stat_data will be copied into Jump_Height and following
reset_stat
	1BD6 05             DEFB 5 ;; length
reset_stat_data
	1BD7 00             DEFB 0
	1BD8 FF             DEFB &FF
	1BD9 00             DEFW &0000
	1BDB 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
Jump_Height
	1BDC 00             DEFB 0
IsStill
	1BDD FF             DEFB &FF

Carried_Object
	1BDE 00 00          DEFW &0000
Corrying_bool
	1BE0 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
	1BE1 00             DEFB 0
character_direction
	1BE2 0F             DEFB &0F
Other_sound_ID
	1BE3 00             DEFB 0
Saved_Objects_List_index
	1BE4 00             DEFB 0
Movement
	1BE5 FF             DEFB &FF
saved_access_code
	1BE6 00             DEFB 0

EntryPosition_uvz
	1BE7 00             DEFB 0, 0, 0

;; -----------------------------------------------------------------------------------------------------------
;; Character instance
Batman_variables:  					;; &12 = 18
	1BEA 00 00			DEFW 0		;; Batman_variables+O_NEAR2FAR_LST
	1BEC 00 00 			DEFW 0		;; Batman_variables+O_FAR2NEAR_LST
	1BEE 08				DEFB &08	;; Batman_variables+O_FLAGS
	1BEF 28				DEFB &28	;; Batman_variables+O_U
	1BF0 0B				DEFB &0B	;; Batman_variables+O_V
	1BF1 C0				DEFB GROUND_LEVEL	;; Batman_variables+O_Z
	1BF2 10				DEFB &10	;; Batman_variables+O_SPRITE
	1BF3 01				DEFB &01	;; Batman_variables+O_SPRFLAGS
	1BF4 00				DEFB &00	;; Batman_variables+O_FUNC
	1BF5 FF				DEFB &FF	;; Batman_variables+O_IMPACT
	1BF6 FF				DEFB &FF	;; Batman_variables+&0C
	1BF7 00	00			DEFW &00	;; Batman_variables+O_OBJUNDER
	1BF9 00				DEFB &00	;; Batman_variables+O_ANIM
	1BFA 00				DEFB &00	;; Batman_variables+O_DIRECTION
	1BFB 00				DEFB &00	;; Batman_variables+O_SPECIAL

;; -----------------------------------------------------------------------------------------------------------
;; Object instance                  ; &12 = 18
Object_variables
	1BFC 00 00          DEFW 0      ;; Obj_variables+O_NEAR2FAR_LST
	1BFE 00 00          DEFW 0      ;; Obj_variables+O_FAR2NEAR_LST
	1C00 00             DEFB 0      ;; Obj_variables+O_FLAGS
	1C01 00             DEFB 0      ;; Obj_variables+O_U
	1C02 00             DEFB 0      ;; Obj_variables+O_V
	1C03 00             DEFB 0      ;; Obj_variables+O_Z
	1C04 00             DEFB 0      ;; Obj_variables+O_SPRITE
	1C05 03             DEFB 3      ;; Obj_variables+O_SPRFLAGS
	1C06 00             DEFB 0      ;; Obj_variables+O_FUNC
	1C07 00             DEFB 0      ;; Obj_variables+O_IMPACT
	1C08 00             DEFB 0      ;; Obj_variables+&0C
	1C09 00             DEFW 0      ;; Obj_variables+O_OBJUNDER
	1C0B 00             DEFB 0      ;; Obj_variables+O_ANIM
	1C0C 00             DEFB 0      ;; Obj_variables+O_DIRECTION
	1C0D 00             DEFB 0      ;; Obj_variables+O_SPECIAL

;; -----------------------------------------------------------------------------------------------------------
;; This defines the sprites list that compose an animation for
;; Batman (facing and rearward) and also for the "Vape"
;; animations (Dying, Teleporting, Vanishing, etc.).
;; The first byte is the current index in the animation (which is
;; the current sprite in the anim). The list is 0-terminated.
;; If the bit7 of the sprite code is set, the sprite is mirrored.
.Anim_Loops:
Front_Batman_Walk_Loop
	1C0E             	DEFB 0, SPR_BATMAN_1, SPR_BATMAN_0, SPR_BATMAN_2, SPR_BATMAN_0, 0
Back_Batman_Walk_Loop
	1C14             	DEFB 0, SPR_BATMAN_B1, SPR_BATMAN_B1, SPR_BATMAN_B0, SPR_BATMAN_B0, 0
Vape_loop
	1C1A             	DEFB 0, SPR_VAPE_2 or SPR_FLIP, SPR_VAPE_2, SPR_VAPE_2 or SPR_FLIP
	1C1E             	DEFB SPR_VAPE_1 or SPR_FLIP, SPR_VAPE_1, SPR_VAPE_1 or SPR_FLIP, SPR_VAPE_0
	1C22             	DEFB SPR_VAPE_0, SPR_VAPE_0 or SPR_FLIP, SPR_VAPE_0 or SPR_FLIP, SPR_VAPE_0, SPR_VAPE_0, 0

;; -----------------------------------------------------------------------------------------------------------
;; checks if need to play anims, check Death anim
;; Decrease invuln counter if needed,
.Characters_Update:
	1C28 21 18 38       LD HL,Dying
	1C2B 7E             LD A,(HL)
	1C2C A7             AND A
	1C2D 20 4D          JR NZ,HandleDeath
	1C2F 21 D4 1B       LD HL,InvulnModulo
	1C32 35             DEC (HL)
	1C33 20 07          JR NZ,ct_mvt
	1C35 36 03          LD (HL),3
decr_invuln
	1C37 3E 03          LD A,CNT_SHIELD
	1C39 CD 8E 34       CALL Decrement_counter_and_display
ct_mvt
	1C3C 3E FF          LD A,&FF
	1C3E 32 E5 1B       LD (&1BE5),A ;; Movement
	1C41 3A 17 38       LD A,(access_new_room_code)
	1C44 A7             AND A
	1C45 28 13          JR Z,br_25B6
change_room
	1C47 3A E4 1B       LD A,(Saved_Objects_List_index)
	1C4A A7             AND A
	1C4B 28 0A          JR Z,br_25B3
	1C4D 3A E2 1B       LD A,(character_direction)
	1C50 37             SCF
	1C51 17             RLA
	1C52 32 12 01       LD (Current_User_Inputs),A
	1C55 18 03          JR br_25B6
br_25B3
	1C57 32 17 38       LD (access_new_room_code),A
br_25B6
	1C5A CD F3 1C       CALL CharThing4
	1C5D 3A F1 1B       LD A,(Batman_variables+O_Z)
	1C60 FE 84          CP GROUND_LEVEL - 60
	1C62 30 0F          JR NC,&1C73	;; CheckFired or CheckDying
	1C64 AF             XOR A
	1C65 32 DC 1B       LD (Jump_Height),A
	1C68 3A E3 16       LD A,(FloorAboveFlag)
	1C6B A7             AND A
	1C6C 20 05          JR NZ,&1C73 ;; CheckFired or CheckDying
	1C6E 3E 07          LD A,7
	1C70 32 17 38       LD (access_new_room_code),A
CheckDying
	1C73 3A 17 38       LD A,(access_new_room_code)
	1C76 E6 7F          AND &7F
	1C78 C8             RET Z
	1C79 C3 86 01       JP &0186

;; -----------------------------------------------------------------------------------------------------------
.HandleDeath:
	1C7C 35             DEC (HL)
	1C7D 20 2B          JR NZ,CharThing20
	1C7F 34             INC (HL)
	1C80 CD B5 0C       CALL TestHasSomthingToBePlayed
	1C83 3E 08          LD A,8
	1C85 C2 5D 03       JP NZ,Set_colors
	1C88 CD D4 35       CALL Incr_died_number
lose_a_life
	1C8B 21 D3 1B       LD HL,Counter_lives
	1C8E 7E             LD A,(HL)
	1C8F D6 01          SUB 1
	1C91 27             DAA
	1C92 77             LD (HL),A
	1C93 DC E5 1C       CALL c,&1CE5
	1C96 21 E7 1B       LD HL,EntryPosition_uvz
	1C99 11 EF 1B       LD DE,Batman_variables+O_U
	1C9C 01 03 00       LD BC,&0003
	1C9F ED B0          LDIR
	1CA1 3A E6 1B       LD A,(saved_access_code)
	1CA4 32 17 38       LD (access_new_room_code),A
	1CA7 C3 B0 01       JP &01B0

CharThing20
	1CAA AF             XOR A
	1CAB 32 EE 1B       LD (Batman_variables+O_FLAGS),A
	1CAE 32 00 1C       LD (Object_variables+O_FLAGS),A
	1CB1 21 1A 1C       LD HL,Vape_loop
	1CB4 FD 21 EA 1B    LD IY,Batman_variables
	1CB8 CD 73 36       CALL Read_Loop_byte
	1CBB 32 04 1C       LD (Object_variables+O_SPRITE),A
	1CBE F5             PUSH AF
	1CBF 21 FC 1B       LD HL,Object_variables
	1CC2 CD D1 14       CALL StoreObjExtents
	1CC5 21 FC 1B       LD HL,Object_variables
	1CC8 CD 19 15       CALL UnionAndDraw
	1CCB F1             POP AF
	1CCC EE 80          XOR &80
	1CCE 32 F2 1B       LD (Batman_variables+O_SPRITE),A
	1CD1 21 EA 1B       LD HL,Batman_variables
	1CD4 CD D1 14       CALL StoreObjExtents
	1CD7 21 EA 1B       LD HL,Batman_variables
	1CDA CD 19 15       CALL UnionAndDraw
	1CDD 3A 18 38       LD A,(Dying)
	1CE0 E6 07          AND &07
	1CE2 C3 4F 03       JP Set_pen3_only		;; This will blink the colors when dying

;; -----------------------------------------------------------------------------------------------------------
	1CE5 36 00          LD (HL),0
	1CE7 CD 9B 36       CALL Random_gen
	1CEA 7D             LD A,L
	1CEB E6 03          AND &03
	1CED C2 17 01       JP NZ,Game_over
	1CF0 C3 22 25       JP &2522

;; -----------------------------------------------------------------------------------------------------------
;; Looks like more movement stuff
CharThing4:
	1CF3 FD 21 EA 1B    LD IY,Batman_variables
	1CF7 AF             XOR A
	1CF8 32 E3 1B       LD (Other_sound_ID),A
	1CFB 3A E4 1B       LD A,(Saved_Objects_List_index)
	1CFE CD 8A 2D       CALL SetObjList
	1D01 21 EA 1B       LD HL,Batman_variables
	1D04 CD D1 14       CALL StoreObjExtents
	1D07 21 DC 1B       LD HL,Jump_Height
	1D0A 7E             LD A,(HL)
	1D0B A7             AND A
	1D0C 28 52          JR Z,br_27F8
	1D0E 3A E4 1B       LD A,(Saved_Objects_List_index)
	1D11 A7             AND A
	1D12 28 04          JR Z,br_27AF
	1D14 36 00          LD (HL),0
	1D16 18 48          JR br_27F8

br_27AF
	1D18 35             DEC (HL)
	1D19 21 EA 1B       LD HL,Batman_variables
	1D1C CD 81 22       CALL ChkSatOn
	1D1F 38 0A          JR c,br_27C2
	1D21 FD 35 07       DEC (IY+O_Z)
	1D24 3E 03          LD A,&03
	1D26 CD FE 1F       CALL SetOtherSound
	1D29 18 11          JR br_27D3

br_27C2
	1D2B 08             EX AF,AF'
	1D2C 3E 06          LD A,&06
	1D2E FD CB 0B 66    BIT 4,(IY+O_IMPACT)
	1D32 FD CB 0B E6    SET 4,(IY+O_IMPACT)
	1D36 CC FE 1F       CALL Z,SetOtherSound
	1D39 08             EX AF,AF'
	1D3A 28 0B          JR Z,br_27DE
br_27D3
	1D3C FD CB 0B A6    RES 4,(IY+O_IMPACT)
	1D40 FD CB 0B EE    SET 5,(IY+O_IMPACT)
	1D44 FD 35 07       DEC (IY+O_Z)
br_27DE
	1D47 3A CF 1B       LD A,(Inventory)
	1D4A 1F             RRA				;; bit0 in carry
	1D4B 38 06          JR c,br_27EB	;; if we have ??? 1D53
br_27E5
	1D4D 3A E2 1B       LD A,(character_direction) ;; else
	1D50 C3 D4 1D       JP HandleMove

br_27EB
	1D53 3A 12 01       LD A,(Current_User_Inputs)
	1D56 1F             RRA
	1D57 CD 16 36       CALL DirCode_from_LRDU
	1D5A 3C             INC A
	1D5B C2 D0 1D       JP NZ,br_2855
	1D5E 18 ED          JR br_27E5

br_27F8
	1D60 FD CB 0B E6    SET 4,(IY+O_IMPACT)
	1D64 FD CB 0C EE    SET 5,(IY+&0C)
	1D68 21 EA 1B       LD HL,Batman_variables
	1D6B CD E4 20       CALL DoorContact
	1D6E D2 6A 1E       JP NC,CharThing23
	1D71 28 1A          JR Z,br_2812
	1D73 3A CF 1B       LD A,(Inventory)
	1D76 E6 02          AND &02
	1D78 C2 49 1E       JP NZ,&1E49
	1D7B FD 34 07       INC (IY+O_Z)
	1D7E 3A F2 1B       LD A,(Batman_variables+O_SPRITE)
	1D81 D6 15          SUB SPR_BATMAN_FLY
	1D83 E6 FE          AND &FE				;; test if SPR_BATMAN_FLY or SPR_BATMAN_FLYB
	1D85 3E 07          LD A,&07
	1D87 CC FE 1F       CALL Z,SetOtherSound
	1D8A C3 C6 1D       JP br_284B

br_2812
	1D8D 3A 17 38       LD A,(access_new_room_code)
	1D90 17             RLA
	1D91 30 04          JR NC,br_281C
	1D93 FD 36 0C FF    LD (IY+&0C),&FF
br_281C
	1D97 3E 07          LD A,&07
	1D99 FD CB 0B 6E    BIT 5,(IY+O_IMPACT)
	1D9D FD CB 0B EE    SET 5,(IY+O_IMPACT)
	1DA1 CC FE 1F       CALL Z,SetOtherSound
	1DA4 FD CB 0C 66    BIT 4,(IY+&0C)
	1DA8 FD CB 0C E6    SET 4,(IY+&0C)
	1DAC 20 18          JR NZ,br_284B
	1DAE 21 EA 1B       LD HL,Batman_variables
	1DB1 CD 81 22       CALL ChkSatOn
	1DB4 30 09          JR NC,EPIC_40
	1DB6 20 07          JR NZ,EPIC_40
	1DB8 3E 06          LD A,&06
	1DBA CD FE 1F       CALL SetOtherSound
	1DBD 18 07          JR br_284B

EPIC_40
	1DBF FD 35 07       DEC (IY+O_Z)
	1DC2 FD CB 0B A6    RES 4,(IY+O_IMPACT)
br_284B
	1DC6 AF             XOR A
	1DC7 32 E1 1B       LD (&1BE1),A
	1DCA CD 73 1F       CALL TryCarry
	1DCD CD 2E 1F       CALL DoJump
br_2855
	1DD0 3A 12 01       LD A,(Current_User_Inputs)
	1DD3 1F             RRA
;; Do the movement with LRDU direction in A.
.HandleMove:
	1DD4 CD B8 1E       CALL MoveChar
	1DD7 CD A4 1E       CALL Orient
	1DDA 08             EX AF,AF'
	1DDB 3A DD 1B       LD A,(IsStill)
	1DDE 3C             INC A
	1DDF 20 10          JR NZ,br_288C
	1DE1 AF             XOR A
	1DE2 32 0E 1C       LD (Front_Batman_Walk_Loop),A
	1DE5 32 14 1C       LD (Back_Batman_Walk_Loop),A
	1DE8 08             EX AF,AF'
	1DE9 3E 13          LD A,&13
	1DEB 38 13          JR c,br_28BC
	1DED 3E 10          LD A,&10
	1DEF 18 32          JR DoFootTap
br_288C
	1DF1 CD 9E 1E       CALL &1E9E
	1DF4 08             EX AF,AF'
	1DF5 21 0E 1C       LD HL,Front_Batman_Walk_Loop
	1DF8 30 03          JR NC,br_289B
	1DFA 21 14 1C       LD HL,Back_Batman_Walk_Loop
br_289B
	1DFD CD 73 36       CALL Read_Loop_byte
br_28BC
	1E00 FD CB 0B EE    SET 5,(IY+O_IMPACT)
;; Update the character animation frames to values in BC, and then
;; call UpdateChar.
.UpdateCharFrame:
	1E04 32 F2 1B       LD (Batman_variables+O_SPRITE),A
	1E07 3A E5 1B       LD A,(&1BE5)
	1E0A 32 F6 1B       LD (Batman_variables+&0C),A
	1E0D 21 EA 1B       LD HL,Batman_variables
	1E10 CD AF 2E       CALL Relink
	1E13 CD BE 20       CALL SaveObjListIdx
	1E16 AF             XOR A
	1E17 CD 8A 2D       CALL SetObjList
	1E1A 21 EA 1B       LD HL,Batman_variables
	1E1D CD 19 15       CALL UnionAndDraw
	1E20 C3 05 20       JP Play_Other_Sound

;; -----------------------------------------------------------------------------------------------------------
DoFootTap ;; br_1e23
	1E23 21 B2 1B       LD HL,&1BB2 ;; BlinkEyesCounter ???
	1E26 35             DEC (HL)
	1E27 20 D7          JR NZ,br_28BC
	1E29 36 01          LD (HL),&01
	1E2B 21 B3 1B       LD HL,&1BB3
	1E2E 35             DEC (HL)
	1E2F 20 05          JR NZ,do_blink
	1E31 36 02          LD (HL),&02
	1E33 CD B1 03       CALL TapFoot
do_blink
	1E36 21 B4 1B       LD HL,&1BB4
	1E39 35             DEC (HL)
	1E3A 3E 17          LD A,&17
	1E3C 20 C2          JR NZ,br_28BC
	1E3E 3E 30          LD A,&30
	1E40 36 60          LD (HL),&60
	1E42 32 B2 1B       LD (&1BB2),A
	1E45 3E 17          LD A,&17
	1E47 18 B7          JR br_28BC

	1E49 2A E2 20       LD HL,(ObjContact)
	1E4C 24             INC H
	1E4D 25             DEC H
	1E4E 28 09          JR Z,&1E59
	1E50 E5             PUSH HL
	1E51 DD E1          POP IX
	1E53 DD CB 04 6E    BIT 5,(IX+O_FLAGS)
	1E57 20 11          JR NZ,CharThing23

	1E59 21 E1 1B       LD HL,&1BE1
	1E5C 7E             LD A,(HL)
	1E5D A7             AND A
	1E5E 36 FF          LD (HL),&FF
	1E60 28 0C          JR Z,&1E6E
	1E62 CD 73 1F       CALL TryCarry
	1E65 CD 2E 1F       CALL DoJump
	1E68 18 04          JR &1E6E

;; -----------------------------------------------------------------------------------------------------------
CharThing23
	1E6A AF             XOR A
	1E6B 32 E1 1B       LD (&1BE1),A ;; TODO_248e
	1E6E CD 9E 1E       CALL &1E9E
	1E71 3E 04          LD A,&04
	1E73 CD FE 1F       CALL SetOtherSound
	1E76 FD CB 0B AE    RES 5,(IY+O_IMPACT)
	1E7A 3A CF 1B       LD A,(Inventory)
	1E7D E6 02          AND &02
	1E7F 20 03          JR NZ,br_292E
	1E81 FD 34 07       INC (IY+O_Z)
br_292E
	1E84 FD 34 07       INC (IY+O_Z)
	1E87 3A CF 1B       LD A,(Inventory)
	1E8A 1F             RRA
	1E8B 30 07          JR NC,br_2949
	1E8D 3A 12 01       LD A,(Current_User_Inputs)
	1E90 1F             RRA
	1E91 CD B8 1E       CALL MoveChar
br_2949
	1E94 CD A4 1E       CALL Orient
	1E97 3E 15          LD A,&15		;; SPR_BATMAN_FLY ???
	1E99 CE 00          ADC A,0
	1E9B C3 04 1E       JP UpdateCharFrame

	1E9E 3E 30          LD A,&30
	1EA0 32 B2 1B       LD (&1BB2),A
	1EA3 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Sprite orientation (flip/no-flip and Front/Back)
;; Reset bit4 of O_FLAGS if bit1 is set (U)
;; set bit4 of O_FLAGS if bit1 is reset (V) (sprite needs flip)
;; Returns with carry set if facing away or Carry reset if rearward.
Orient
	1EA4 3A E2 1B       LD A,(character_direction)
	1EA7 CD 16 36       CALL DirCode_from_LRDU
	1EAA 1F             RRA
	1EAB FD CB 04 A6    RES 4,(IY+O_FLAGS)
	1EAF 1F             RRA
	1EB0 38 04          JR c,br_2976
	1EB2 FD CB 04 E6    SET 4,(IY+O_FLAGS)
br_2976
	1EB6 1F             RRA
	1EB7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Move the character.
.MoveChar:
	1EB8 F6 F0          OR &F0
	1EBA FE FF          CP &FF
	1EBC 32 DD 1B       LD (IsStill),A
	1EBF 28 14          JR Z,br_2993
	1EC1 08             EX AF,AF'
	1EC2 AF             XOR A
	1EC3 32 DD 1B       LD (IsStill),A
	1EC6 3E 01          LD A,&01
	1EC8 CD FE 1F       CALL SetOtherSound
	1ECB 08             EX AF,AF'
	1ECC 21 E2 1B       LD HL,character_direction
	1ECF BE             CP (HL)
	1ED0 77             LD (HL),A
	1ED1 28 02          JR Z,br_2998
	1ED3 3E FF          LD A,&FF
br_2998
br_2993
	1ED5 F5             PUSH AF
	1ED6 FD A6 0C       AND (IY+&0C)
	1ED9 CD 16 36       CALL DirCode_from_LRDU
	1EDC FE FF          CP &FF
	1EDE 28 13          JR Z,br_29B6
	1EE0 21 EA 1B       LD HL,Batman_variables
	1EE3 CD 1A 38       CALL MoveCurrent
	1EE6 30 15          JR NC,Sub_Move_Char
	1EE8 3A F5 1B       LD A,(Batman_variables+O_IMPACT)
	1EEB F6 F0          OR &F0
	1EED 3C             INC A
	1EEE 3E 05          LD A,&05
	1EF0 C4 FE 1F       CALL NZ,SetOtherSound ;; sound
br_29B6
	1EF3 F1             POP AF
	1EF4 3A F5 1B       LD A,(Batman_variables+O_IMPACT)
	1EF7 F6 0F          OR &0F
	1EF9 32 F5 1B       LD (Batman_variables+O_IMPACT),A
	1EFC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Direction bitmask is on stack. "Move" has been called.
;; Update position and do the speed-related movement when when
;; TickTock hits zero.
.Sub_Move_Char
	1EFD 21 EA 1B       LD HL,Batman_variables
	1F00 CD 59 36       CALL UpdatePos
	1F03 C1             POP BC
	1F04 3A D0 1B       LD A,(Counter_speed)
	1F07 A7             AND A
	1F08 C8             RET Z
	1F09 21 D5 1B       LD HL,SpeedModulo
	1F0C 35             DEC (HL)
	1F0D C5             PUSH BC
	1F0E 20 07          JR NZ,speedskip
	1F10 36 02          LD (HL),&02
	1F12 3E 00          LD A,0
	1F14 CD 8E 34       CALL Decrement_counter_and_display
speedskip
	1F17 F1             POP AF
	1F18 CD 16 36       CALL DirCode_from_LRDU
	1F1B FE FF          CP &FF
	1F1D C8             RET Z
	1F1E 21 EA 1B       LD HL,Batman_variables
	1F21 E5             PUSH HL
	1F22 CD 1A 38       CALL MoveCurrent
	1F25 E1             POP HL
	1F26 D2 59 36       JP NC,UpdatePos
	1F29 3E 05          LD A,&05
	1F2B C3 FE 1F       JP SetOtherSound

;; -----------------------------------------------------------------------------------------------------------
.DoJump:
	1F2E 3A CF 1B       LD A,(Inventory)
	1F31 E6 04          AND &04
	1F33 C8             RET Z
	1F34 3A E4 1B       LD A,(Saved_Objects_List_index)
	1F37 A7             AND A
	1F38 C0             RET NZ
	1F39 3A 12 01       LD A,(Current_User_Inputs)
	1F3C 1F             RRA
	1F3D D8             RET c
djmp_jumpkey
	1F3E 0E 00          LD C,0
	1F40 2A F7 1B       LD HL,(Batman_variables+O_OBJUNDER)
	1F43 7C             LD A,H
	1F44 B5             OR L
	1F45 28 0F          JR Z,br_jpbonus
	1F47 E5             PUSH HL
	1F48 DD E1          POP IX
br_teststandingon
	1F4A DD 7E 08       LD A,(IX+O_SPRITE)
	1F4D FE 51          CP SPR_SMILEY
	1F4F 28 04          JR Z,onSpringStool
	1F51 FE 36          CP SPR_S_CUSHION
	1F53 20 01          JR NZ,br_jpbonus
onSpringStool
	1F55 0C             INC C
br_jpbonus
	1F56 C5             PUSH BC
	1F57 3E 02          LD A,CNT_SPRING
	1F59 CD 8E 34       CALL Decrement_counter_and_display
	1F5C C1             POP BC
	1F5D 28 01          JR Z,calculate_jump
br_bigjump
	1F5F 0C             INC C
calculate_jump
	1F60 79             LD A,C
	1F61 87             ADD A,A
	1F62 87             ADD A,A
	1F63 C6 04          ADD A,4
	1F65 FE 0C          CP 12
	1F67 20 02          JR NZ,br_gotjumpheight
	1F69 FE 0A          CP 10
br_gotjumpheight
	1F6B 32 DC 1B       LD (Jump_Height),A
	1F6E 3E 08          LD A,&08
	1F70 C3 FE 1F       JP SetOtherSound
TryCarry
	1F73 3A CF 1B       LD A,(Inventory) ;; check if batbag owned
	1F76 E6 08          AND &08			;; test bit3 (bag)
	1F78 C8             RET Z			;; no leave
	1F79 21 E0 1B       LD HL,Corrying_bool		;; else try to pick up
	1F7C 3A 14 01       LD A,(action_key_pressed)
	1F7F A7             AND A
	1F80 20 03          JR NZ,DoCarry
	1F82 36 00          LD (HL),0
	1F84 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This will handle the pick-up (by Heels with the Purse) of an object
;; in the room, and drawing it on the HUD if carried.
CARRIED_OBJ_HUD_POS		EQU		&D0 * WORD_HIGH_BYTE + &40

.DoCarry:
	1F85 7E             LD A,(HL)
	1F86 A7             AND A
	1F87 C0             RET NZ
	1F88 36 01          LD (HL),&01
	1F8A 3E 09          LD A,9
	1F8C CD FE 1F       CALL SetOtherSound
	1F8F 3A DF 1B       LD A,(Carried_Object+1)
	1F92 A7             AND A
	1F93 20 1A          JR NZ,DropCarried
	1F95 21 EA 1B       LD HL,Batman_variables
	1F98 CD 52 22       CALL CheckStoodUponNPickable
	1F9B D0             RET NC
	1F9C DD 7E 08       LD A,(IX+O_SPRITE)
	1F9F E5             PUSH HL
	1FA0 22 DE 1B       LD (Carried_Object),HL
	1FA3 01 40 D0       LD BC,CARRIED_OBJ_HUD_POS
	1FA6 F5             PUSH AF
	1FA7 CD B8 37       CALL Draw_sprite_3x24
	1FAA F1             POP AF
	1FAB E1             POP HL
	1FAC C3 CE 36       JP RemoveObject

;; -----------------------------------------------------------------------------------------------------------
;; This is to drop the object carried in the Purse by Heels.
.DropCarried:
	1FAF 3A E4 1B       LD A,(Saved_Objects_List_index)
	1FB2 A7             AND A
	1FB3 C0             RET NZ
	1FB4 ED 4B F1 1B    LD BC,(Batman_variables+O_Z)
	1FB8 06 03          LD B,3
carryLoop
	1FBA 21 EA 1B       LD HL,Batman_variables
	1FBD C5             PUSH BC
	1FBE CD 81 22       CALL ChkSatOn
	1FC1 C1             POP BC
	1FC2 38 36          JR c,NoDrop
	1FC4 FD 35 07       DEC (IY+O_Z)
	1FC7 FD 35 07       DEC (IY+O_Z)
	1FCA 10 EE          DJNZ carryLoop
	1FCC 2A DE 1B       LD HL,(Carried_Object)
	1FCF E5             PUSH HL
	1FD0 11 07 00       LD DE,O_Z
	1FD3 19             ADD HL,DE
	1FD4 11 F0 1B       LD DE,Batman_variables+O_V
	1FD7 71             LD (HL),C
	1FD8 EB             EX DE,HL
	1FD9 1B             DEC DE
	1FDA ED A8          LDD
	1FDC ED A8          LDD
	1FDE E1             POP HL
	1FDF CD 02 37       CALL InsertObject
	1FE2 21 00 00       LD HL,&0000
	1FE5 22 DE 1B       LD (Carried_Object),HL
	1FE8 01 40 D0       LD BC,CARRIED_OBJ_HUD_POS
	1FEB CD D0 37       CALL Clear_3x24
	1FEE 21 EA 1B       LD HL,Batman_variables
	1FF1 CD E4 20       CALL DoorContact
	1FF4 21 EA 1B       LD HL,Batman_variables
	1FF7 C3 D1 14       JP StoreObjExtents
NoDrop
	1FFA FD 71 07       LD (IY+O_Z),C
	1FFD C9             RET

;; -----------------------------------------------------------------------------------------------------------
SetOtherSound
	1FFE 21 E3 1B       LD HL,Other_sound_ID
BumpUp
	2001 BE             CP (HL)
	2002 D8             RET c
	2003 77             LD (HL),A
	2004 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Play_Other_Sound
	2005 CD B5 0C       CALL TestHasSomthingToBePlayed
	2008 C0             RET NZ
	2009 3A E3 1B       LD A,(Other_sound_ID)
	200C 87             ADD A,A
	200D C6 B5          ADD A,sounds_pointer_array and WORD_LOW_BYTE
	200F 6F             LD L,A
	2010 CE 1B          ADC A,sounds_pointer_array / WORD_HIGH_BYTE	;; 1BB5  sounds_pointer_array???
	2012 95             SUB L
	2013 67             LD H,A
	2014 7E             LD A,(HL)
	2015 23             INC HL
	2016 66             LD H,(HL)
	2017 6F             LD L,A
	2018 E9             JP (HL)

;; -----------------------------------------------------------------------------------------------------------
CharThing15:
	2019 AF             XOR A
	201A 32 F4 1B       LD (Batman_variables+O_FUNC),A
	201D 32 1A 1C       LD (Vape_loop),A
	2020 3E 08          LD A,&08
	2022 32 EE 1B       LD (Batman_variables+O_FLAGS),A
	2025 3A 17 38       LD A,(access_new_room_code)
	2028 32 E6 1B       LD (saved_access_code),A
	202B F5             PUSH AF
	202C F5             PUSH AF
	202D 3D             DEC A
	202E FE 04          CP 4
	2030 30 18          JR NC,EPIC_86
	2032 EE 01          XOR &01
	2034 5F             LD E,A
	2035 16 00          LD D,0
	2037 21 14 17       LD HL,DoorHeights
	203A 19             ADD HL,DE
	203B 4E             LD C,(HL)
	203C 21 DE 20       LD HL,WallSideBitmap
	203F 19             ADD HL,DE
	2040 3A E6 16       LD A,(Has_no_wall)
	2043 A6             AND (HL)
	2044 20 04          JR NZ,EPIC_86
	2046 79             LD A,C
	2047 32 F1 1B       LD (Batman_variables+O_Z),A

EPIC_86
	204A F1             POP AF
	204B D6 01          SUB 1
	204D 11 EF 1B       LD DE,Batman_variables+O_U
	2050 38 29          JR c,EPIC_93
	2052 FE 04          CP &04
	2054 28 20          JR Z,EPIC_92
	2056 FE 05          CP &05
	2058 30 0F          JR NC,EPIC_90
	205A 21 E8 16       LD HL,Max_min_UV_Table
	205D 1F             RRA
	205E 30 02          JR NC,EPIC_87
	2060 13             INC DE
	2061 23             INC HL
EPIC_87
	2062 1F             RRA
	2063 38 1D          JR c,EPIC_95
	2065 23             INC HL
	2066 23             INC HL
	2067 18 19          JR EPIC_95

EPIC_90
	2069 13             INC DE
	206A 13             INC DE
	206B 1F             RRA
	206C 3E 84          LD A,&84  ;; GROUND_LEVEL - 60
	206E 38 02          JR c,EPIC_91
	2070 3E BA          LD A,&BA ;; GROUND_LEVEL - 6
EPIC_91
	2072 12             LD (DE),A
	2073 F1             POP AF
	2074 18 1A          JR EPIC_96_bis

EPIC_92
	2076 21 EC 34       LD HL,UVZ_coord_Set_UVZ
	2079 18 03          JR EPIC_94

EPIC_93
	207B 21 D6 20       LD HL,TODO_2c54_uvz_reset_values
EPIC_94
	207E ED A0          LDI
	2080 ED A0          LDI
EPIC_95
	2082 ED A0          LDI
EPIC_96
	2084 F1             POP AF
	2085 C6 D9          ADD A,Facing_in_new_Room_tab and WORD_LOW_BYTE ;; 20D9
	2087 6F             LD L,A
	2088 CE 20          ADC A,Facing_in_new_Room_tab / WORD_HIGH_BYTE ;; 20D9
	208A 95             SUB L
	208B 67             LD H,A				;; HL = Facing_in_new_Room_tab + A
	208C 7E             LD A,(HL)
	208D 32 E2 1B       LD (character_direction),A
EPIC_96_bis
EPIC_97
	2090 3E 80          LD A,&80
	2092 32 17 38       LD (access_new_room_code),A
	2095 21 EF 1B       LD HL,Batman_variables+O_U
	2098 11 E7 1B       LD DE,EntryPosition_uvz
	209B 01 03 00       LD BC,&0003
	209E ED B0          LDIR
	20A0 21 00 00       LD HL,&0000
	20A3 22 F7 1B       LD (Batman_variables+O_OBJUNDER),HL
	20A6 2B             DEC HL
	20A7 22 F5 1B       LD (Batman_variables+O_IMPACT),HL
	20AA 21 EA 1B       LD HL,Batman_variables
	20AD FD 21 EA 1B    LD IY,Batman_variables
	20B1 CD 01 2E       CALL Enlist
	20B4 CD BE 20       CALL SaveObjListIdx
	20B7 AF             XOR A
	20B8 32 18 38       LD (Dying),A
	20BB C3 8A 2D       JP SetObjList

;; -----------------------------------------------------------------------------------------------------------
.SaveObjListIdx:
	20BE 3A 6D 2D       LD A,(ObjListIdx)
	20C1 32 E4 1B       LD (Saved_Objects_List_index),A
	20C4 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; if Heels selected and picked up an object in the Purse, Draw the object
;; sprite on the HUD.
.Draw_carried_objects:
	20C5 2A DE 1B       LD HL,(Carried_Object)
	20C8 24             INC H
	20C9 25             DEC H
	20CA C8             RET Z
	20CB 11 08 00       LD DE,O_SPRITE
	20CE 19             ADD HL,DE
	20CF 7E             LD A,(HL)
	20D0 01 40 D0       LD BC,CARRIED_OBJ_HUD_POS
	20D3 C3 B8 37       JP Draw_sprite_3x24

;; -----------------------------------------------------------------------------------------------------------
TODO_2c54_uvz_reset_values:											;; UVZ for ???
	20D6 2C				DEFB &2C, &45, &84

;; -----------------------------------------------------------------------------------------------------------
;; From access_new_room_code
;; get the facing direction when entering a new room from:
Facing_in_new_Room_tab:
	20D9 F7 FD FB FE F7	DEFB FACING_LEFT, FACING_DOWN, FACING_RIGHT, FACING_UP, FACING_LEFT ;; ???continue???, Down Right Up Left

;; -----------------------------------------------------------------------------------------------------------
;; From access_new_room_code
;; get the facing direction when entering a new room from:
WallSideBitmap:											;; index 0 = 8 = bit3, index 1 = 4 = bit2 etc.
	20DE 08 04 02 01    DEFB	&08, &04, &02, &01

;; -----------------------------------------------------------------------------------------------------------
;; Takes object (character?) in IY. Pointer to an object contacting the character.
.ObjContact:
	20E2 00 00       	DEFW &0000

;; -----------------------------------------------------------------------------------------------------------
.DoorContact:
	20E4 CD ED 20       CALL GetDoorHeight
	20E7 FD 7E 07       LD A,(IY+O_Z)
	20EA 91             SUB C
	20EB 18 64          JR DoContact

;; Takes object in IY, returns height of relevant door.
.GetDoorHeight:
	20ED 0E C0          LD C,GROUND_LEVEL
	20EF 3A E4 1B       LD A,(Saved_Objects_List_index)
	20F2 A7             AND A
	20F3 C8             RET Z
	20F4 DD 21 14 17    LD IX,DoorHeights
	20F8 DD 4E 00       LD C,(IX+0)
	20FB 3A EB 16       LD A,(MaxV)
	20FE D6 03          SUB 3
	2100 FD BE 06       CP (IY+O_V)
	2103 D8             RET c
	2104 DD 4E 02       LD C,(IX+2)
	2107 3A E9 16       LD A,(MinV)
	210A C6 02          ADD A,2
	210C FD BE 06       CP (IY+O_V)
	210F D0             RET NC
	2110 DD 4E 01       LD C,(IX+1)
	2113 3A EA 16       LD A,(MaxU)
	2116 D6 03          SUB 3
	2118 FD BE 05       CP (IY+O_U)
	211B D8             RET c
	211C DD 4E 03       LD C,(IX+3)
	211F C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This handles the "on ground level" state. It'll check if the Floor is deadly
;; or if the room has no floor hence falling in room below.
;; We are one the ground (HitFloor) or one above (NearHitFloor) : Input A = 0
.NearHitFloor:
	2120 FE FF          CP &FF
	;; A is zero. We've hit, or nearly hit, the floor.
.HitFloor:
	2122 37             SCF
	2123 FD 77 0D       LD (IY+O_OBJUNDER),A
	2126 FD 77 0E       LD (IY+O_OBJUNDER+1),A
	2129 C0             RET NZ
	212A FD CB 09 46    BIT 0,(IY+O_SPRFLAGS)
	212E C8             RET Z
	212F 3A E4 1B       LD A,(Saved_Objects_List_index)
	2132 A7             AND A
	2133 20 14          JR NZ,RetZero_Cset
	2135 3A E2 16       LD A,(FloorCode)
	2138 FE 06          CP &06
	213A 28 0A          JR Z,DeadlyFloorCase
	213C FE 07          CP &07
	213E 20 09          JR NZ,RetZero_Cset
	2140 3E 06          LD A,6
	2142 32 17 38       LD (access_new_room_code),A
	2145 C9             RET

DeadlyFloorCase
	2146 CD F2 38       CALL DeadlyContact
RetZero_Cset
	2149 AF             XOR A
	214A 37             SCF
	214B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Object (character?) in IY.
.DoContact2:
	214C FD 7E 07       LD A,(IY+O_Z)
	214F D6 C0          SUB GROUND_LEVEL
;; A has the difference between the height and the ground level
.DoContact:
	2151 01 00 00       LD BC,0
	2154 ED 43 E2 20    LD (ObjContact),BC
	2158 28 C8          JR Z,HitFloor
	215A 3C             INC A
	215B 28 C3          JR Z,NearHitFloor
	215D CD ED 2E       CALL GetUVZExtents_AdjustLowZ
	2160 48             LD C,B
	2161 0C             INC C
	2162 D9             EXX
	2163 FD 7E 0E       LD A,(IY+O_OBJUNDER+1)
	2166 A7             AND A
	2167 28 41          JR Z,ChkSitOn
	2169 67             LD H,A
	216A FD 6E 0D       LD L,(IY+O_OBJUNDER)
	216D E5             PUSH HL
	216E DD E1          POP IX
	2170 DD CB 04 7E    BIT 7,(IX+O_FLAGS)
	2174 20 34          JR NZ,ChkSitOn
	2176 DD 7E 07       LD A,(IX+O_Z)
	2179 D6 06          SUB 6
	217B D9             EXX
	217C B8             CP B
	217D D9             EXX
	217E 20 2A          JR NZ,ChkSitOn
	2180 CD 10 23       CALL CheckWeOverlap
	2183 30 25          JR NC,ChkSitOn
;; We're still standing on the object
;; Deal with contact between a character and a thing.
;; IY is the character, IX is what it's resting on.
.DoObjContact:
	2185 DD CB 09 4E    BIT 1,(IX+O_SPRFLAGS)
	2189 28 09          JR Z,DOC_1
	218B DD CB FA AE    RES 5,(IX-OBJECT_LENGTH+&0C)
	218F DD 7E F9       LD A,(IX-OBJECT_LENGTH+O_IMPACT)
	2192 18 07          JR DOC_2
DOC_1
	2194 DD CB 0C AE    RES 5,(IX+&0C)
	2198 DD 7E 0B       LD A,(IX+O_IMPACT)
DOC_2
	219B F6 E0          OR &E0
	219D 4F             LD C,A
	219E FD 7E 0C       LD A,(IY+&0C)
	21A1 A1             AND C
	21A2 FD 77 0C       LD (IY+&0C),A
.DoAltContact:
	21A5 AF             XOR A
	21A6 37             SCF
	21A7 C3 B2 38       JP ProcContact

;; -----------------------------------------------------------------------------------------------------------
;; Run through all the objects in the main object list and check their
;; contact with our object in IY, see if it's sitting on them or
;; touching them.
;;
;; Object extents should be in primed registers.
.ChkSitOn:
	21AA 21 7E 2D       LD HL,ObjList_Regular_Near2Far
CSIT_nextobject
	21AD 7E             LD A,(HL)
	21AE 23             INC HL
	21AF 66             LD H,(HL)
	21B0 6F             LD L,A
	21B1 B4             OR H
	21B2 28 38          JR Z,CSIT_4
	21B4 E5             PUSH HL
	21B5 DD E1          POP IX
	21B7 DD CB 04 7E    BIT 7,(IX+O_FLAGS)
	21BB 20 F0          JR NZ,CSIT_nextobject
	21BD DD 7E 07       LD A,(IX+O_Z)
	21C0 D6 06          SUB 6
	21C2 D9             EXX
	21C3 B8             CP B
	21C4 20 10          JR NZ,CSIT_3
	21C6 D9             EXX
	21C7 E5             PUSH HL
	21C8 CD 10 23       CALL CheckWeOverlap
	21CB E1             POP HL
	21CC 30 DF          JR NC,CSIT_nextobject
CSIT_2
	21CE FD 75 0D       LD (IY+O_OBJUNDER),L
	21D1 FD 74 0E       LD (IY+O_OBJUNDER+1),H
	21D4 18 AF          JR DoObjContact
CSIT_3
	21D6 B9             CP C
	21D7 D9             EXX
	21D8 20 D3          JR NZ,CSIT_nextobject
	21DA 3A E3 20       LD A,(ObjContact+1)
	21DD A7             AND A
	21DE 20 CD          JR NZ,CSIT_nextobject
	21E0 E5             PUSH HL
	21E1 CD 10 23       CALL CheckWeOverlap
	21E4 E1             POP HL
	21E5 30 C6          JR NC,CSIT_nextobject
	21E7 22 E2 20       LD (ObjContact),HL
	21EA 18 C1          JR CSIT_nextobject
CSIT_4
	21EC 3A E4 1B       LD A,(Saved_Objects_List_index)
	21EF A7             AND A
	21F0 28 35          JR Z,CSIT_7
	21F2 3A F1 1B       LD A,(Batman_variables+O_Z)
	21F5 D6 0C          SUB &0C
	21F7 D9             EXX
	21F8 B8             CP B
	21F9 20 0F          JR NZ,CSIT_6
	21FB D9             EXX
	21FC DD 21 EA 1B    LD IX,Batman_variables
	2200 CD 10 23       CALL CheckWeOverlap
	2203 30 22          JR NC,CSIT_7
	2205 21 EA 1B       LD HL,Batman_variables
	2208 18 C4          JR CSIT_2
CSIT_6
	220A B9             CP C
	220B D9             EXX
	220C 20 19          JR NZ,CSIT_7
	220E 3A E3 20       LD A,(ObjContact+1)
	2211 A7             AND A
	2212 20 13          JR NZ,CSIT_7
	2214 DD 21 EA 1B    LD IX,Batman_variables
	2218 CD 10 23       CALL CheckWeOverlap
	221B 30 0A          JR NC,CSIT_7
	221D FD 36 0D 00    LD (IY+O_OBJUNDER),0
	2221 FD 36 0E 00    LD (IY+O_OBJUNDER+1),0
	2225 18 27          JR CSIT_11
CSIT_7
	2227 2A E2 20       LD HL,(ObjContact)
	222A FD 36 0D 00    LD (IY+O_OBJUNDER),0
	222E FD 36 0E 00    LD (IY+O_OBJUNDER+1),0
	2232 7C             LD A,H
	2233 A7             AND A
	2234 C8             RET Z
	2235 E5             PUSH HL
	2236 DD E1          POP IX
	2238 DD CB 09 4E    BIT 1,(IX+O_SPRFLAGS)
	223C 28 06          JR Z,CSIT_9
	223E DD CB F9 66    BIT 4,(IX-OBJECT_LENGTH+O_IMPACT)
	2242 18 04          JR CSIT_10
CSIT_9
	2244 DD CB 0B 66    BIT 4,(IX+O_IMPACT)
CSIT_10
	2248 20 04          JR NZ,CSIT_11
	224A FD CB 0C A6    RES 4,(IY+&0C)
CSIT_11
	224E AF             XOR A
	224F D6 01          SUB 1
	2251 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Called by the purse routine to find something below Heels to pick up.
;; Carry flag set if something is found, and thing returned in HL.
;;
;; Loop through all items, finding ones which match maxZ+6 ot +7 (below)
;; Then call CheckWeOverlap to see if ok candidate. Return it in HL if it is.
.CheckStoodUponNPickable:
	2252 CD ED 2E       CALL GetUVZExtents_AdjustLowZ
	2255 78             LD A,B
	2256 C6 06          ADD A,6
	2258 47             LD B,A
	2259 3C             INC A
	225A 4F             LD C,A
	225B D9             EXX
	225C 21 7E 2D       LD HL,ObjList_Regular_Near2Far
gsu_1
	225F 7E             LD A,(HL)
	2260 23             INC HL
	2261 66             LD H,(HL)
	2262 6F             LD L,A
	2263 B4             OR H
	2264 C8             RET Z
	2265 E5             PUSH HL
	2266 DD E1          POP IX
	2268 DD CB 04 76    BIT 6,(IX+O_FLAGS)
	226C 28 F1          JR Z,gsu_1
	226E DD 7E 07       LD A,(IX+O_Z)
	2271 D9             EXX
	2272 B8             CP B
	2273 28 01          JR Z,gsu_2
	2275 B9             CP C
gsu_2
	2276 D9             EXX
	2277 20 E6          JR NZ,gsu_1
	2279 E5             PUSH HL
	227A CD 10 23       CALL CheckWeOverlap
	227D E1             POP HL
	227E 30 DF          JR NC,gsu_1
	2280 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Object in IY, extents in primed registers.
;; Very similar to ChkSitOn. Checks to see if stuff is on us.
.ChkSatOn:
	2281 CD ED 2E       CALL GetUVZExtents_AdjustLowZ
	2284 41             LD B,C
	2285 05             DEC B
	2286 D9             EXX
	2287 AF             XOR A
	2288 32 E2 20       LD (ObjContact),A
	228B 21 7E 2D       LD HL,ObjList_Regular_Near2Far
CSAT_nextobj
	228E 7E             LD A,(HL)
	228F 23             INC HL
	2290 66             LD H,(HL)
	2291 6F             LD L,A
	2292 B4             OR H
	2293 28 44          JR Z,CSAT_endlist
	2295 E5             PUSH HL
	2296 DD E1          POP IX
	2298 DD CB 04 7E    BIT 7,(IX+O_FLAGS)
	229C 20 F0          JR NZ,CSAT_nextobj
	229E DD 7E 07       LD A,(IX+O_Z)
	22A1 D9             EXX
	22A2 B9             CP C
	22A3 20 1C          JR NZ,CSAT_3
	22A5 D9             EXX
	22A6 E5             PUSH HL
	22A7 CD 10 23       CALL CheckWeOverlap
	22AA E1             POP HL
	22AB 30 E1          JR NC,CSAT_nextobj
CSAT_2
	22AD FD 7E 0B       LD A,(IY+O_IMPACT)
	22B0 F6 E0          OR &E0
	22B2 E6 EF          AND &EF
	22B4 4F             LD C,A
	22B5 DD 7E 0C       LD A,(IX+&0C)
	22B8 A1             AND C
	22B9 DD 77 0C       LD (IX+&0C),A
	22BC AF             XOR A
	22BD 37             SCF
	22BE C3 B2 38       JP ProcContact
CSAT_3
	22C1 B8             CP B
	22C2 D9             EXX
	22C3 20 C9          JR NZ,CSAT_nextobj
	22C5 3A E2 20       LD A,(ObjContact)
	22C8 A7             AND A
	22C9 20 C3          JR NZ,CSAT_nextobj
	22CB E5             PUSH HL
	22CC CD 10 23       CALL CheckWeOverlap
	22CF E1             POP HL
	22D0 30 BC          JR NC,CSAT_nextobj
	22D2 3E FF          LD A,&FF
	22D4 32 E2 20       LD (ObjContact),A
	22D7 18 B5          JR CSAT_nextobj
CSAT_endlist
	22D9 3A E4 1B       LD A,(Saved_Objects_List_index)
	22DC A7             AND A
	22DD 28 2A          JR Z,CSAT_7
	22DF 3A F1 1B       LD A,(Batman_variables+O_Z)
	22E2 D9             EXX
	22E3 B9             CP C
	22E4 20 0C          JR NZ,CSAT_5
	22E6 D9             EXX
	22E7 DD 21 EA 1B    LD IX,Batman_variables
	22EB CD 10 23       CALL CheckWeOverlap
	22EE 30 19          JR NC,CSAT_7
	22F0 18 BB          JR CSAT_2
CSAT_5
	22F2 B8             CP B
	22F3 D9             EXX
	22F4 20 13          JR NZ,CSAT_7
	22F6 3A E2 20       LD A,(ObjContact)
	22F9 A7             AND A
	22FA 20 0D          JR NZ,CSAT_7
	22FC DD 21 EA 1B    LD IX,Batman_variables
	2300 CD 10 23       CALL CheckWeOverlap
	2303 30 04          JR NC,CSAT_7
	2305 3E FF          LD A,&FF
	2307 18 03          JR CSAT_8
CSAT_7
	2309 3A E2 20       LD A,(ObjContact)
CSAT_8
	230C A7             AND A
	230D C8             RET Z
	230E 37             SCF
	230F C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Takes object point in IX and checks to see if we overlap with it.
;; Assumes our extents are in DE',HL'.
.CheckWeOverlap:
	2310 CD 23 23       CALL GetUVExt
;; Assuming X and Y extents in DE,HL and DE',HL', check two boundaries overlap.
;; Sets carry flag if they do.
.CheckOverlap:
	2313 7B             LD A,E
	2314 D9             EXX
	2315 BA             CP D
	2316 7B             LD A,E
	2317 D9             EXX
	2318 D0             RET NC
	2319 BA             CP D
	231A D0             RET NC
	231B 7D             LD A,L
	231C D9             EXX
	231D BC             CP H
	231E 7D             LD A,L
	231F D9             EXX
	2320 D0             RET NC
	2321 BC             CP H
	2322 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Given an object in IX, returns its U and V centered extents.
;; Very like GetUVZExtents, but for UV.
;;
;; Values are based on the bottom 2 flag bits ([1:0])
;; Flag   U      V
;; 00   +3 -3  +3 -3
;; 01   +4 -4  +4 -4		DE = high,low U
;; 10   +4 -4  +1 -1		HL = high,low V
;; 11   +1 -1  +4 -4
.GetUVExt:
	2323 DD 7E 04       LD A,(IX+O_FLAGS)
	2326 CB 4F          BIT 1,A
	2328 20 16          JR NZ,sub_GetUV_Ext
	232A 1F             RRA
	232B 3E 03          LD A,&03
	232D CE 00          ADC A,0
	232F 4F             LD C,A
	2330 DD 86 05       ADD A,(IX+O_U)
	2333 57             LD D,A
	2334 91             SUB C
	2335 91             SUB C
	2336 5F             LD E,A
	2337 79             LD A,C
	2338 DD 86 06       ADD A,(IX+O_V)
	233B 67             LD H,A
	233C 91             SUB C
	233D 91             SUB C
	233E 6F             LD L,A
	233F C9             RET

sub_GetUV_Ext
	2340 1F             RRA
	2341 38 10          JR c,sub2_GetUV_Ext
	2343 DD 7E 05       LD A,(IX+O_U)
	2346 C6 04          ADD A,4
	2348 57             LD D,A
	2349 D6 08          SUB 8
	234B 5F             LD E,A
	234C DD 6E 06       LD L,(IX+O_V)
	234F 65             LD H,L
	2350 24             INC H
	2351 2D             DEC L
	2352 C9             RET
sub2_GetUV_Ext
	2353 DD 7E 06       LD A,(IX+O_V)
	2356 C6 04          ADD A,4
	2358 67             LD H,A
	2359 D6 08          SUB 8
	235B 6F             LD L,A
	235C DD 5E 05       LD E,(IX+O_U)
	235F 53             LD D,E
	2360 14             INC D
	2361 1D             DEC E
	2362 C9             RET

;; -----------------------------------------------------------------------------------------------------------
MenuCursor
	2363 00 00          DEFW 0

;; -----------------------------------------------------------------------------------------------------------
;; This is the Main Menu
;; Return with Carry set if new game or with Carry reset for "Continue"
Main_Screen:
	2365 3E 0A          LD A,10
	2367 CD 5D 03       CALL Set_colors
MainScreen
	236A 3E CE          LD A,Print_Title_Instr
	236C CD 15 3C       CALL Print_String
	236F DD 21 C8 23    LD IX,Main_menu_data
	2373 DD 36 00 00    LD (IX+MENU_CURR_SEL),0
	2377 CD 92 25       CALL Draw_Menu
fms_1
	237A CD 9B 36       CALL Random_gen
	237D 01 7B 60       LD BC,&60 * WORD_HIGH_BYTE + &7B
	2380 3E 17          LD A,SPR_BM_STANDING
	2382 CD 9C 23       CALL Main_screen_anim
	2385 CD 77 25       CALL Step_Menu
	2388 38 F0          JR c,fms_1
	238A DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	238D FE 01          CP &01
	238F DA 57 24       JP c,Play_Game_menu
	2392 20 26          JR NZ,fms_2
	2394 CD EC 23       CALL Control_menu
	2397 18 CC          JR Main_Screen

;; -----------------------------------------------------------------------------------------------------------
Batman_anim_vars:
	2399 00             DEFB 0
	239A 02             DEFB 2
	239B 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
Main_screen_anim
	239C 21 99 23       LD HL,Batman_anim_vars
	239F 35             DEC (HL)
	23A0 C0             RET NZ
	23A1 23             INC HL
	23A2 35             DEC (HL)
	23A3 C0             RET NZ
	23A4 36 02          LD (HL),&02
	23A6 23             INC HL
	23A7 35             DEC (HL)
	23A8 CB 46          BIT 0,(HL)
	23AA C5             PUSH BC
	23AB F5             PUSH AF
	23AC CC B1 03       CALL Z,TapFoot
	23AF F1             POP AF
	23B0 C1             POP BC
	23B1 C2 EA 37       JP NZ,Draw_sprite_3x32
	23B4 CD EA 37       CALL Draw_sprite_3x32
	23B7 C3 B1 03       JP TapFoot
fms_2
	23BA FE 03          CP &03
	23BC 28 05          JR Z,MenuSensi
	23BE CD CD 23       CALL Sound_Menu
	23C1 18 A7          JR MainScreen

MenuSensi
	23C3 CD 3B 24       CALL Sensitivity_Menu
	23C6 18 A2          JR MainScreen

;; -----------------------------------------------------------------------------------------------------------
MENU_CURR_SEL 			EQU		&00							;; Which_selected in menu ; 0 = first
MENU_NB_ITEMS			EQU		&01							;; Number of items
MENU_INIT_COL			EQU		&02							;; Initial column (x)
MENU_INIT_ROW			EQU		&03							;; Initial row (y)
MENU_SEL_STRINGID		EQU		&04							;; Selected item; default: String ID STR_PLAY_THE_GAME

MENU_PRINTDOUBLE_SIZE	EQU		&00							;; if bit7 of MENU_INIT_ROW is reset, then double size the selected row
MENU_PRINTSINGLE_SIZE	EQU		&80							;; if bit7 of MENU_INIT_ROW is set, then single size the selected row

;; -----------------------------------------------------------------------------------------------------------
;; Data for the Menu "Main"
;; This is the "Play/Controls/sound/Sensitivity" menu
Main_menu_data
	23C8 00             DEFB 	0     								;; MENU_CURR_SEL : Which_selected in menu ; 0 = firs
	23C9 04             DEFB 	4  									;; MENU_NB_ITEMS : Number of items
	23CA 05             DEFB 	&05    								;; MENU_INIT_COL : Initial column
	23CB 89             DEFB 	&09 or MENU_PRINTSINGLE_SIZE  		;; MENU_INIT_ROW : Initial row, single size the selected row
	23CC 8C             DEFB 	Print_PlayTheGame					;; MENU_SEL_STRINGID : Selected item; default: String ID STR_PLAY_THE_GAME

;; -----------------------------------------------------------------------------------------------------------
;; This handle the Sound Menu
.Sound_Menu:
	23CD 3E C2          LD A,Print_BatSound_Menu
	23CF CD 15 3C       CALL Print_String
	23D2 DD 21 E7 23    LD IX,Sound_menu_data
	23D6 CD 92 25       CALL Draw_Menu
smstp_1
	23D9 CD 77 25       CALL Step_Menu
	23DC 38 FB          JR c,smstp_1
	23DE 3E 02          LD A,&02
	23E0 DD 96 00       SUB (IX+0)				;; "volume" = 2 - menu index so that "Nasty" has the value 2, "useful" has 1, and "late at night" has 0
	23E3 32 10 01       LD (Sound_amount),A		;; store that value
	23E6 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Data for the Menu "Sound"
.Sound_menu_data:
	23E7 00             DEFB	0     								;; MENU_CURR_SEL : Which_selected_in_menu ; 0 = first
	23E8 03             DEFB	3 	   								;; MENU_NB_ITEMS : Number of items
	23E9 07             DEFB	&07    								;; MENU_INIT_COL : Initial column
	23EA 08             DEFB	&08 or MENU_PRINTDOUBLE_SIZE		;; MENU_INIT_ROW : Initial row, double size selected
	23EB 91             DEFB	Print_Nasty							;; MENU_SEL_STRINGID : Current Selected item; default String ID STR_LOTS

;; -----------------------------------------------------------------------------------------------------------
Control_menu
	23EC 3E 94          LD A,Print_BatKeys_Menu
	23EE CD 15 3C       CALL Print_String
	23F1 DD 21 36 24    LD IX,Control_menu_data
	23F5 CD 92 25       CALL Draw_Menu
	23F8 06 07          LD B,7
ctrlme_loop
	23FA C5             PUSH BC
	23FB 78             LD A,B
	23FC 3D             DEC A
	23FD CD 56 25       CALL PrepCtrlEdit
	2400 C1             POP BC
	2401 C5             PUSH BC
	2402 78             LD A,B
	2403 3D             DEC A
	2404 CD 25 08       CALL ListControls
	2407 C1             POP BC
	2408 10 F0          DJNZ ctrlme_loop
cmloop
	240A CD 6C 25       CALL Menu_step_Control_Edit
	240D 38 FB          JR c,cmloop
	240F C0             RET NZ
	2410 3E 96          LD A,Print_ChooseNewKey
	2412 CD 15 3C       CALL Print_String
	2415 DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	2418 DD 86 04       ADD A,(IX+MENU_SEL_STRINGID)
	241B CD 15 3C       CALL Print_String
	241E 3E 02          LD A,Print_ClrEOL
	2420 CD 15 3C       CALL Print_String
	2423 DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	2426 CD 56 25       CALL PrepCtrlEdit
	2429 DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	242C CD 54 08       CALL Edit_control
	242F 3E 95          LD A,Print_ShiftToFinish
	2431 CD 15 3C       CALL Print_String
	2434 18 D4          JR cmloop

;; -----------------------------------------------------------------------------------------------------------
;; Data for the Menu "Controls"
Control_menu_data
	2436 00             DEFB	0     								;; MENU_CURR_SEL : Which_selected in menu ; 0 = first
	2437 07             DEFB	7	    							;; MENU_NB_ITEMS : Number of items
	2438 00             DEFB	&00    								;; MENU_INIT_COL : Initial column
	2439 86             DEFB	&06 or MENU_PRINTSINGLE_SIZE		;; MENU_INIT_ROW : Initial row, single size the selected row
	243A 97             DEFB	Print_Left							;; MENU_SEL_STRINGID : Selected item String ID

;; -----------------------------------------------------------------------------------------------------------
;; Handle the Sensitivity Menu
.Sensitivity_Menu:
	243B 3E C4          LD A,Print_SensMenu
	243D CD 15 3C       CALL Print_String
	2440 DD 21 52 24    LD IX,Sensitivity_menu_data
	2444 CD 92 25       CALL Draw_Menu
sensmenu_1
	2447 CD 77 25       CALL Step_Menu
	244A 38 FB          JR c,sensmenu_1
	244C DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	244F C3 CD 01       JP Sub_Update_Sensitivity

;; -----------------------------------------------------------------------------------------------------------
;; Data for the Menu "Sensitivity"
Sensitivity_menu_data
	2452 01				DEFB	1     								;; MENU_CURR_SEL : Which_selected in menu ; 0 = first
	2453 02				DEFB	2 	   								;; MENU_NB_ITEMS : Number of items
	2454 05      		DEFB	&05    								;; MENU_INIT_COL : Initial column
	2455 09             DEFB	&09 or MENU_PRINTDOUBLE_SIZE		;; MENU_INIT_ROW : Initial row, double size the selcted row
	2456 C5             DEFB	Print_High							;; MENU_SEL_STRINGID : Selected item String ID

;; -----------------------------------------------------------------------------------------------------------
;; Menu "Old game/New game/Main menu"; only available if we consumed
;; a living fish in a previous game. (RET if Save_point_value = 0)
;; Output: Zero reset: No saved game (go to new Game)
;;         Zero set and Carry reset : Play Old game (saved game)
;;         Zero set and Carry set : Play New game (even though a save exists)
.Play_Game_menu:
	2457 3A D4 34       LD A,(Save_point_value) ;; Save_point_value
	245A FE 01          CP &01
	245C D8             RET c
	245D 3E CB          LD A,Print_PlayOldNew
	245F CD 15 3C       CALL Print_String
	2462 DD 21 77 24    LD IX,Play_Game_menu_data
	2466 DD 36 00 00    LD (IX+MENU_CURR_SEL),0
	246A CD 92 25       CALL Draw_menu
pgmen_1
	246D CD 77 25       CALL Step_menu
	2470 38 FB          JR c,pgmen_1
	2472 DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	2475 1F             RRA
	2476 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Data for the Menu "Play" (only shown if a previous game has been saved = "Fish")
Play_Game_menu_data
	2477 00             DEFB	0     								;; MENU_CURR_SEL : Which_selected in menu ; 0 = first
	2478 02             DEFB	2 	   								;; MENU_NB_ITEMS : Number of items
	2479 09             DEFB	&09    								;; MENU_INIT_COL : Initial column
	247A 09             DEFB	&09 or MENU_PRINTDOUBLE_SIZE		;; MENU_INIT_ROW : Initial row, double size the selected row
	247B CC				DEFB	Print_Old_Game						;; MENU_SEL_STRINGID : Selected item ; default String ID (&A0 = "OLD GAME")

;; -----------------------------------------------------------------------------------------------------------
;; Game over Screen
Game_over_screen
	247C CD C8 06       CALL clr_screen
	247F CD 4D 0A       CALL Play_Batman_Theme
	2482 3E 0A          LD A,10
	2484 CD 5D 03       CALL Set_colors
	2487 3E CF          LD A,Print_GO_assembled
	2489 CD 15 3C       CALL Print_String
	248C CD 94 35       CALL RecoreredParts
	248F 7B             LD A,E
	2490 CD EC 3C       CALL subprint_2Digits
	2493 3E D0          LD A,Print_GO_parts
	2495 CD 15 3C       CALL Print_String
	2498 CD A8 35       CALL RoomCount
	249B CD DC 3C       CALL Print_2Digits
	249E 3E D9          LD A,Print_GO_rooms
	24A0 CD 15 3C       CALL Print_String
	24A3 3A F2 34       LD A,(nbtimes_died)			;; nb times died 34f2
	24A6 CD EC 3C       CALL subprint_2Digits
	24A9 3E DA          LD A,Print_GO_score
	24AB CD 15 3C       CALL Print_String
	24AE CD DD 35       CALL GetScore
	24B1 EB             EX DE,HL
	24B2 CD DC 3C       CALL Print_2Digits
	24B5 CD BE 24       CALL Batman_Walking_animation
gobw_loop
	24B8 CD D4 24       CALL Play_Batman_Walking
	24BB 38 FB          JR c,gobw_loop
	24BD C9             RET

;; -----------------------------------------------------------------------------------------------------------
Batman_Walking_animation
	24BE 01 00 30       LD BC,&3000
bwa_loop1
	24C1 C5             PUSH BC
	24C2 CD D4 24       CALL Play_Batman_Walking
	24C5 C1             POP BC
	24C6 0B             DEC BC
	24C7 78             LD A,B
	24C8 B1             OR C
	24C9 20 F6          JR NZ,bwa_loop1
bwa_loop2
	24CB CD D4 24       CALL Play_Batman_Walking
	24CE CD B5 0C       CALL TestHasSomthingToBePlayed
	24D1 20 F8          JR NZ,bwa_loop2
	24D3 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Play_Batman_Walking
	24D4 2A 99 23       LD HL,(Batman_anim_vars)
	24D7 3E 01          LD A,1
	24D9 BD             CP L
	24DA 20 07          JR NZ,Place_Batman_Walking
	24DC BC             CP H
	24DD 21 EC 24       LD HL,Anim_Batman_walking
	24E0 CC 73 36       CALL Z,Read_Loop_byte

Place_Batman_Walking
	24E3 01 78 D0       LD BC,&D0 * WORD_HIGH_BYTE + &78 ;; y,x pos
	24E6 CD 9C 23       CALL Main_screen_anim
	24E9 C3 0B 08       JP Test_Enter_Shift_keys

Anim_Batman_walking:
Anim_Batman_walking_idx:
	24EC 00             DEFB 0
Anim_Batman_walking_data:
	24ED 11 10 12 10 00 DEFB SPR_BATMAN_1, SPR_BATMAN_0, SPR_BATMAN_2, SPR_BATMAN_0, 0

;; -----------------------------------------------------------------------------------------------------------
Batcraft_complete_screen:
	24F2 3E 09          LD A,9
	24F4 CD 5D 03       CALL Set_colors
	24F7 3E DC          LD A,Print_Completed
	24F9 CD 15 3C       CALL Print_String
	24FC 01 9C E8       LD BC,&E8 * WORD_HIGH_BYTE + &9C
	24FF 3E 1F          LD A,SPR_DEMONB
	2501 CD EA 37       CALL Draw_sprite_3x32
	2504 01 54 B8       LD BC,&B8 * WORD_HIGH_BYTE + &54
	2507 3E 2B          LD A,SPR_RIDDLER
	2509 CD EA 37       CALL Draw_sprite_3x32
	250C 01 9C B8       LD BC,&B8 * WORD_HIGH_BYTE + &9C
	250F 3E 9A          LD A,SPR_WOLF_2 or SPR_FLIP
	2511 CD EA 37       CALL Draw_sprite_3x32
	2514 01 54 E8       LD BC,&E8 * WORD_HIGH_BYTE + &54
	2517 3E AA          LD A,SPR_JOKER_B1 or SPR_FLIP
	2519 CD EA 37       CALL Draw_sprite_3x32
	251C CD 4D 0A       CALL Play_Batman_Theme
	251F C3 BE 24       JP Batman_Walking_animation

;; -----------------------------------------------------------------------------------------------------------
	2522 CD 4D 0A       CALL Play_Batman_Theme
	2525 3E 0A          LD A,10
	2527 CD 5D 03       CALL Set_colors
	252A 3E D8          LD A,Print_Dogs
	252C CD 15 3C       CALL Print_String
	252F 01 78 88       LD BC,&88 * WORD_HIGH_BYTE + &78
	2532 3E 24          LD A,SPR_DOG_0
	2534 CD EA 37       CALL Draw_sprite_3x32
	2537 C3 BE 24       JP Batman_Walking_animation

;; -----------------------------------------------------------------------------------------------------------
Joystick_Menu
	253A 3E 0A          LD A,10
	253C CD 5D 03       CALL Set_colors
	253F 3E B2          LD A,Print_JoySelect
	2541 CD 15 3C       CALL Print_String
	2544 DD 21 51 25    LD IX,Joystick_menu_data
	2548 CD 92 25       CALL Draw_Menu
jymenu_loop
	254B CD 77 25       CALL Step_Menu
	254E 38 FB          JR c,jymenu_loop
	2550 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Joystick_menu_data
	2551 00             DEFB	0				;; MENU_CURR_SEL : Which_selected in menu ; 0 = first
	2552 03             DEFB	3				;; MENU_NB_ITEMS : Number of items
	2553 04             DEFB	4				;; MENU_INIT_COL : Initial column
	2554 0A             DEFB	10				;; MENU_INIT_ROW : Initial row, double size the selected row0
	2555 B4             DEFB	Print_JoyMenu	;; MENU_SEL_STRINGID : Selected item ; default String ID

;; -----------------------------------------------------------------------------------------------------------
;; Clear out the screen area and move the cursor for editing a
;; keyboard control setting
.PrepCtrlEdit:
	2556 87             ADD A,A
	2557 DD 86 03       ADD A,(IX+MENU_INIT_ROW)
	255A E6 7F          AND &7F
	255C 47             LD B,A
	255D 0E 0B          LD C,&0B
	255F C5             PUSH BC
	2560 CD AD 3C       CALL Set_Cursor_position
	2563 3E 02          LD A,Print_ClrEOL
	2565 CD 15 3C       CALL Print_String
	2568 C1             POP BC
	2569 C3 AD 3C       JP Set_Cursor_position

;; -----------------------------------------------------------------------------------------------------------
.Menu_step_Control_Edit:
	256C CD 0B 08       CALL Test_Enter_Shift_keys
	256F D8             RET c
	2570 79             LD A,C
	2571 FE 01          CP &01
	2573 20 07          JR NZ,MenuStepCore
	2575 A7             AND A
	2576 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Step_Menu : Step thru the menu items and loop over if needs be.
;; Draw_Menu : Draw the menu pointed by IX
.Step_Menu:
	2577 CD 0B 08       CALL Test_Enter_Shift_keys
	257A D8             RET c
	257B 79             LD A,C
MenuStepCore
	257C A7             AND A
	257D C8             RET Z
	257E DD 7E 00       LD A,(IX+MENU_CURR_SEL)
	2581 3C             INC A
	2582 DD BE 01       CP (IX+MENU_NB_ITEMS)
	2585 38 01          JR c,mstepc_1
	2587 AF             XOR A
mstepc_1
	2588 DD 77 00       LD (IX+MENU_CURR_SEL),A
	258B DD E5          PUSH IX
	258D CD DC 0A       CALL Sound_ID_Menu_Blip
	2590 DD E1          POP IX
Draw_Menu
	2592 DD 46 03       LD B,(IX+MENU_INIT_ROW)
	2595 CB B8          RES 7,B
	2597 DD 4E 02       LD C,(IX+MENU_INIT_COL)
	259A ED 43 63 23    LD (MenuCursor),BC
	259E CD AD 3C       CALL Set_Cursor_position
	25A1 DD 46 01       LD B,(IX+MENU_NB_ITEMS)
	25A4 DD 4E 00       LD C,(IX+MENU_CURR_SEL)
	25A7 0C             INC C
drwmen_loop
	25A8 3E 9F          LD A,Print_UnselArrow
	25AA 0D             DEC C
	25AB C5             PUSH BC
	25AC 20 16          JR NZ,smenu_print
	25AE DD CB 03 7E    BIT 7,(IX+MENU_INIT_ROW)
	25B2 20 09          JR NZ,smenu_singlesize
smenu_doublesize
	25B4 3E 04          LD A,Print_DoubleSize
	25B6 CD 15 3C       CALL Print_String
	25B9 3E 9E          LD A,Print_BatArrow
	25BB 18 07          JR smenu_print
smenu_singlesize
	25BD 3E 03          LD A,Print_SingleSize
	25BF CD 15 3C       CALL Print_String
	25C2 3E 9E          LD A,Print_BatArrow
smenu_print
	25C4 CD 15 3C       CALL Print_String
	25C7 DD 7E 01       LD A,(IX+MENU_NB_ITEMS)
	25CA C1             POP BC
	25CB C5             PUSH BC
	25CC 90             SUB B
	25CD DD 86 04       ADD A,(IX+MENU_SEL_STRINGID)
	25D0 CD 15 3C       CALL Print_String
	25D3 E1             POP HL
	25D4 E5             PUSH HL
	25D5 ED 4B 63 23    LD BC,(MenuCursor)
	25D9 7D             LD A,L
	25DA A7             AND A
	25DB 20 07          JR NZ,br_310E
	25DD DD CB 03 7E    BIT 7,(IX+MENU_INIT_ROW)
	25E1 20 01          JR NZ,br_310E
	25E3 04             INC B
br_310E
	25E4 04             INC B
	25E5 C5             PUSH BC
	25E6 CD AD 3C       CALL Set_Cursor_position
	25E9 3E 03          LD A,Print_SingleSize
	25EB CD 15 3C       CALL Print_String
	25EE DD CB 03 7E    BIT 7,(IX+MENU_INIT_ROW)
	25F2 20 05          JR NZ,br_3123
	25F4 3E 02          LD A,Print_ClrEOL
	25F6 CD 15 3C       CALL Print_String
br_3123
	25F9 C1             POP BC
	25FA 04             INC B
	25FB ED 43 63 23    LD (MenuCursor),BC
	25FF CD AD 3C       CALL Set_Cursor_position
	2602 C1             POP BC
	2603 10 A3          DJNZ drwmen_loop
	2605 37             SCF
	2606 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; String attributes
Delimiter						EQU		&FF
Print_WipeScreen				EQU		&00
Print_NewLine					EQU		&01
Print_ClrEOL					EQU		&02
Print_SingleSize				EQU		&03
Print_DoubleSize				EQU		&04
Print_ColorAttr					EQU		&05
Print_SetPos					EQU		&06
;;Print_ColorScheme				EQU		&07
Print_Arrow_1					EQU		&21
Print_Arrow_2					EQU		&22
Print_Arrow_3					EQU		&23
Print_Arrow_4					EQU		&24
Print_Icon_Speed				EQU		&25
Print_Icon_Spring				EQU		&26
Print_Icon_Shield				EQU		&27
Print_PRESS						EQU 	&80
Print_Color_Attr_1				EQU		&81
Print_Color_Attr_2				EQU		&82
Print_Color_Attr_3				EQU		&83
Print_THE						EQU		&84
Print_TO						EQU		&85
Print_BAT						EQU		&86
Print_KEY						EQU		&87
Print_SELECT 					EQU		&88
Print_Instructions				EQU		&89
Print_FINISH 					EQU		&8A
Print_Title 					EQU		&8B
Print_PlayTheGame				EQU		&8C
Print_CONTROL					EQU		&8F
Print_SOUND						EQU		&90
Print_Nasty						EQU		&91
Print_BatKeys_Menu				EQU		&94
Print_ShiftToFinish				EQU		&95
Print_ChooseNewKey				EQU		&96
Print_LEFT						EQU		&97
Print_BatArrow					EQU		&9E
Print_UnselArrow				EQU		&9F
Print_RIGHT						EQU		&98
Print_ENTER 					EQU		&AF
Print_SHIFT 					EQU		&B0
Print_Enter2Finish				EQU		&B1
Print_JoySelect					EQU		&B2
Print_JOYSTICK					EQU		&B3
Print_JoyMenu					EQU		&B4
Print_JOY						EQU		&B7
Print_Spaces					EQU		&BD
Print_Paused					EQU		&BE
Print_ANY						EQU		&BF
Print_GAME						EQU		&C0
Print_HUD_Left					EQU		&C1
Print_BatSound_Menu				EQU		&C2
Print_SENSITIVITY				EQU		&C3
Print_SensMenu					EQU		&C4
Print_High						EQU		&C5
Print_Sgl_Pos					EQU		&C7
Print_PlayOldNew				EQU		&CB
Print_Old_Game					EQU		&CC
Print_Title_Instr				EQU		&CE
Print_GO_assembled				EQU		&CF
Print_GO_parts					EQU		&D0
Print_YOU						EQU		&D1
Print_ClrDbl_Pos				EQU		&D2
Print_1Chance					EQU		&D3
Print_Right_2					EQU		&D6
Print_Left_2					EQU		&D7
Print_Dogs						EQU		&D8
Print_GO_rooms					EQU		&D9
Print_GO_score					EQU		&DA
Print_BATCRAFT					EQU		&DB
Print_Completed					EQU		&DC

;; -----------------------------------------------------------------------------------------------------------
;; Main Strings data
String_Table_Main
	2607				DEFB 	Delimiter, Print_Color_Attr_2, "PRESS "			;; ID &80
	260F				DEFB 	Delimiter, Print_ColorAttr, 1					;; ID &81
	2612				DEFB 	Delimiter, Print_ColorAttr, 2					;; ID &82
	2615				DEFB 	Delimiter, Print_ColorAttr, 3					;; ID &83
	2618				DEFB 	Delimiter, " THE "								;; ID &84
	261E				DEFB 	Delimiter, Print_Color_Attr_2, " TO "			;; ID &85
	2624				DEFB 	Delimiter, "BAT"								;; ID &86
	2628				DEFB 	Delimiter, "KEY"								;; ID &87
	262C				DEFB 	Delimiter, "SELECT"								;; ID &88
	2633				DEFB 	Delimiter, Print_SingleSize						;; ID &89
	2635				DEFB		Print_SetPos, 2, 21
	2638				DEFB		Print_PRESS, Print_ENTER, Print_TO, Print_SELECT
	263C				DEFB		" OPTION", Print_SetPos, 1, 23, " "
	2647				DEFB		Print_PRESS, Print_Color_Attr_3
	2649				DEFB		Print_ANY, Print_KEY, Print_TO
	264C				DEFB 		"MOVE CURSOR", Print_ClrEOL
	2658				DEFB 	Delimiter, "FINISH"								;; ID &8A
	265F				DEFB 	Delimiter, Print_ClrDbl_Pos, 13, 0				;; ID &8B
	2663				DEFB 		Print_Color_Attr_2, Print_BAT, "MAN"
	2668				DEFB 		Print_SingleSize, Print_SetPos, 2, 0
	266C				DEFB 		Print_Color_Attr_3, "JON"
	2670				DEFB 		Print_SetPos, 1, 2, "RITMAN"
	2679				DEFB 		Print_SetPos, &19, 0, "BERNIE"
	2682				DEFB 		Print_SetPos, &18, 2, "DRUMMOND"
	268D				DEFB 	Delimiter, "PLAY", Print_THE, Print_GAME		;; ID &8C
	2694				DEFB 	Delimiter, Print_SELECT, Print_THE			 	;; ID &8D
	2697				DEFB		Print_KEY, "S"
	2699				DEFB 	Delimiter, "ADJUST", Print_THE, Print_SOUND 	;; ID &8E
	26A2				DEFB 	Delimiter, "CONTROL", Print_SENSITIVITY			;; ID &8F
	26AB				DEFB 	Delimiter, "SOUND"								;; ID &90
	26B1				DEFB 	Delimiter, "NASTY"								;; ID &91
	26B7				DEFB 	Delimiter, "USEFUL"								;; ID &92
	26BE				DEFB 	Delimiter, "LATE AT NIGHT"						;; ID &93
	26CC				DEFB 	Delimiter, Print_ClrDbl_Pos, 12, 0				;; ID &94
	26D0				DEFB		Print_Color_Attr_1, Print_BAT
	26D2				DEFB		Print_KEY, "S", Print_ShiftToFinish
	26D5				DEFB 	Delimiter, Print_Instructions					;; ID &95
	26D7				DEFB		Print_SetPos, 5, 3, Print_PRESS
	26DB				DEFB		Print_Color_Attr_1, Print_SHIFT
	26DD				DEFB		Print_TO, Print_FINISH, Print_ClrEOL
	26E0				DEFB 	Delimiter, Print_SetPos, 5, 3					;; ID &96
	26E4				DEFB		Print_ClrEOL, Print_SetPos, 1, 21
	26E8				DEFB		Print_ClrEOL, Print_SetPos, 1, 23
	26EC				DEFB		Print_PRESS, Print_Color_Attr_3
	26EE				DEFB		Print_KEY, "S", Print_Color_Attr_2
	26F1				DEFB		" REQUIRED FOR ", Print_Color_Attr_3
	2700				DEFB 	Delimiter, "LEFT"								;; ID &97
	2705				DEFB 	Delimiter, "RIGHT"								;; ID &98
	270B				DEFB 	Delimiter, "DOWN"								;; ID &99
	2710				DEFB 	Delimiter, "UP"									;; ID &9A
	2713				DEFB 	Delimiter, "JUMP"								;; ID &9B
	2718				DEFB 	Delimiter, "CARRY"								;; ID &9C
	271E				DEFB 	Delimiter, "PAUSE"								;; ID &9D
	2724				DEFB 	Delimiter, Print_Color_Attr_3					;; ID &9E
	2726				DEFB		Print_Arrow_1, Print_Arrow_2, Print_Spaces
	2729				DEFB 	Delimiter, Print_SingleSize, Print_Color_Attr_1	;; ID &9F
	272C				DEFB		Print_Arrow_3, Print_Arrow_4, Print_Spaces
	272F				DEFB 	Delimiter, Print_Color_Attr_3, "SPC"			;; ID &A0
	2734				DEFB 	Delimiter, Print_Color_Attr_3, "SSH"		 	;; ID &A1
	2739				DEFB 	Delimiter, Print_Color_Attr_3, "SHF" 			;; ID &A2
	273E				DEFB 	Delimiter, Print_Color_Attr_3, "TAB" 			;; ID &A3
	2743				DEFB 	Delimiter, Print_Color_Attr_3, "DEL" 			;; ID &A4
	2748				DEFB 	Delimiter, Print_Color_Attr_3, "LCK"			;; ID &A5
	274D				DEFB 	Delimiter, Print_Color_Attr_3, "CTRL"			;; ID &A6
	2753				DEFB 	Delimiter, Print_Color_Attr_3, "COPY"			;; ID &A7
	2759				DEFB 	Delimiter, Print_Color_Attr_3, "ESC"			;; ID &A8
	275E				DEFB 	Delimiter, Print_Color_Attr_3, "ALT"			;; ID &A9
	2763				DEFB 	Delimiter, Print_Color_Attr_3, "ERAZE"			;; ID &AA
	276A				DEFB 	Delimiter, Print_Color_Attr_3, "INS"			;; ID &AB
	276F				DEFB 	Delimiter, Print_Color_Attr_3, "STOP"			;; ID &AC
	2775				DEFB 	Delimiter, Print_Color_Attr_3, "HOLD"			;; ID &AD
	277B				DEFB 	Delimiter, Print_Color_Attr_3, "CLR"			;; ID &AE
	2780				DEFB 	Delimiter, Print_Color_Attr_3, "ENTER"			;; ID &AF
	2787				DEFB 	Delimiter, "SHIFT"								;; ID &B0
	278D				DEFB 	Delimiter, Print_SetPos, 5, 3 					;; ID &B1
	2791				DEFB		Print_PRESS, Print_ENTER, Print_TO
	2794				DEFB		Print_FINISH, Print_ClrEOL
	2796				DEFB 	Delimiter, Print_ClrDbl_Pos, 6, 0				;; ID &B2
	279A				DEFB		Print_Color_Attr_3, Print_JOYSTICK
	279C				DEFB		" ", Print_SELECT, "ION", Print_1Chance
	27A2				DEFB 	Delimiter, " JOYSTICK"							;; ID &B3
	27AC				DEFB 	Delimiter, Print_KEY, "S", &2F					;; ID &B4
	27B0				DEFB		Print_KEY, Print_JOYSTICK
	27B2				DEFB 	Delimiter, "KEMPSTON", Print_JOYSTICK			;; ID &B5
	27BC				DEFB 	Delimiter, "FULLER", Print_JOYSTICK				;; ID &B6
	27C4				DEFB 	Delimiter, Print_Color_Attr_1, "JOY"			;; ID &B7
	27C9				DEFB 	Delimiter, Print_JOY, "F"						;; ID &B8
	27CC				DEFB 	Delimiter, Print_JOY, "U"						;; ID &B9
	27CF				DEFB 	Delimiter, Print_JOY, "D"						;; ID &BA
	27D2				DEFB 	Delimiter, Print_JOY, "R"						;; ID &BB
	27D5				DEFB 	Delimiter, Print_JOY, "L"						;; ID &BC
	27D8				DEFB 	Delimiter, "   "								;; ID &BD
	27DC				DEFB 	Delimiter, Print_DoubleSize, Print_Color_Attr_2 ;; ID &BE
	27DF				DEFB		Print_SetPos, 3, 3, Print_PRESS
	27E3				DEFB		Print_Color_Attr_3, Print_SHIFT, Print_TO
	27E6				DEFB		Print_FINISH, " ", Print_GAME
	27E9				DEFB		Print_SetPos, 4, 6, Print_PRESS
	27ED				DEFB		Print_Color_Attr_3, Print_ANY, Print_KEY
	27F0				DEFB		Print_TO, "RESUME"
	27F7				DEFB 	Delimiter, "ANY "								;; ID &BF
	27FC				DEFB 	Delimiter, "GAME" 								;; ID &C0
	2801				DEFB 	Delimiter, Print_SingleSize, Print_Color_Attr_1	;; ID &C1
	2804				DEFB		Print_SetPos, 0, 21
	2807				DEFB		Print_Arrow_1, Print_Arrow_2
	2809				DEFB		Print_Color_Attr_3, Print_SetPos, 5, 22
	280D				DEFB		Print_Icon_Spring, " ", Print_Color_Attr_2
	2810				DEFB		" ", Print_Icon_Shield, " "
	2813				DEFB		Print_Color_Attr_1, " ", Print_Icon_Speed
	2816				DEFB 	Delimiter, Print_ClrDbl_Pos, 12, 0 				;; ID &C2
	281A				DEFB		Print_Color_Attr_2, Print_BAT, Print_SOUND
	281D				DEFB		Print_Instructions
	281E				DEFB 	Delimiter, " SENSITIVITY"						;; ID &C3
	282B				DEFB 	Delimiter, Print_ClrDbl_Pos, 6, 0  				;; ID &C4
	282F				DEFB		Print_Color_Attr_2, Print_CONTROL
	2831				DEFB		Print_Instructions
	2832				DEFB 	Delimiter, "HIGH", Print_SENSITIVITY			;; ID &C5
	2838				DEFB 	Delimiter, "LOW", Print_SENSITIVITY				;; ID &C6
	283D				DEFB 	Delimiter, Print_SingleSize 					;; ID &C7
	283F				DEFB		Print_SetPos, 10, 23, Print_Color_Attr_2
	2843				DEFB 	Delimiter, Print_DoubleSize  					;; ID &C8
	2845				DEFB		Print_SetPos, 0, 22, Print_Color_Attr_3
	2849				DEFB 	Delimiter, Print_SingleSize  					;; ID &C9
	284B				DEFB		Print_SetPos, 4, 23, Print_Color_Attr_1
	284F				DEFB 	Delimiter, Print_SingleSize						;; ID &CA
	2851				DEFB		Print_SetPos, 7, 23, Print_Color_Attr_3
	2855				DEFB 	Delimiter, Print_ClrDbl_Pos, 9, 0 				;; ID &CB
	2859				DEFB		Print_PlayTheGame, Print_Instructions
	285B				DEFB 	Delimiter, "OLD ", Print_GAME					;; ID &CC
	2861				DEFB 	Delimiter, "NEW ", Print_GAME					;; ID &CD
	2867				DEFB 	Delimiter, Print_Title, Print_Instructions		;; ID &CE
	286A				DEFB 	Delimiter, Print_Title, Print_Color_Attr_3		;; ID &CF
	286D				DEFB		Print_DoubleSize, Print_SetPos, 11, 4
	2871				DEFB		Print_GAME, "  OVER", Print_SingleSize
	2879				DEFB		Print_Color_Attr_1, Print_SetPos, 12, 8
	287D				DEFB		Print_YOU, "HAVE", Print_SetPos, 3, 10
	2885				DEFB		Print_Color_Attr_2, "ASSEMBLED"
	288F				DEFB 	Delimiter, " ", Print_BATCRAFT, "PARTS" 		;; ID &D0
	2897				DEFB		Print_SetPos, 7, 12, "EXPLORED"
	28A2				DEFB 	Delimiter, "YOU "								;; ID &D1
	28A7				DEFB 	Delimiter, Print_WipeScreen, Print_DoubleSize	;; ID &D2 (needs to be followed by pos x,y)
	28AA				DEFB		Print_SetPos
	28AB				DEFB	Delimiter,Print_Instructions					;; ID &D3
	28AD				DEFB		Print_SetPos, 4, 3, Print_YOU
	28B1				DEFB		"ONLY GET ONE CHANCE"
	28C4				DEFB		Print_SetPos, 10, 5, "GET IT ", Print_RIGHT
	28CF				DEFB	Delimiter, Print_ClrDbl_Pos, 10, 0				;; ID &D4
	28D3				DEFB		Print_Color_Attr_3, "SCREEN ", Print_SHIFT
	28DC				DEFB		Print_1Chance, Print_SetPos, 0, 0
	28E0				DEFB		Print_Color_Attr_1, Print_Left_2
	28E2				DEFB		Print_SetPos, &1B, 0, Print_Right_2
	28E6				DEFB	Delimiter, Print_FINISH							;; ID &D5
	28E8				DEFB	Delimiter, Print_RIGHT							;; ID &D6
	28EA				DEFB	Delimiter, Print_LEFT				 			;; ID &D7
	28EC				DEFB	Delimiter, Print_ClrDbl_Pos, 10, 9				;; ID &D8
	28F0				DEFB		Print_Color_Attr_1, "DOGS"
	28F5				DEFB		Print_SetPos, 17, 9, "LIFE"
	28FC				DEFB	Delimiter, " ROOMS"								;; ID &D9
	2903				DEFB		Print_SetPos, 9, 14, "DIED "
	290B				DEFB	Delimiter, "  TIMES"							;; ID &DA
	2913				DEFB		Print_SetPos, 11, &16
	2915				DEFB		Print_DoubleSize, Print_Color_Attr_3
	2918				DEFB		"SCORE "
	291E				DEFB	Delimiter, "BATCRAFT "							;; ID &DB
	2928				DEFB	Delimiter, Print_Title, Print_DoubleSize		;; ID &DC
	292B				DEFB		Print_Color_Attr_1, Print_SetPos, 7, 5
	292F				DEFB 		Print_BATCRAFT, "COMPLETE"
	2938				DEFB	Delimiter										;; END ID &DD

;; -----------------------------------------------------------------------------------------------------------
;; Burries the doorway edge into the ground if needed.
;; Takes sprite codes in L and a height in A, and applies truncation
;; of the third column A * 2 + from the top of the column. This
;; performs removal of the bits of the door hidden by the walls.
;; If the door is raised, more of the frame is visible, so A is
;; the height of the door.
.OccludeDoorway:
	2939 F5             PUSH AF
	293A 7D             LD A,L
	293B 26 00          LD H,0
	293D 32 89 29       LD (Sprite_Code),A
	2940 CD 4D 2A       CALL Sprite3x56
	2943 EB             EX DE,HL
	2944 11 90 B8       LD DE,DoorwayBuf + MOVE_OFFSET
	2947 D5             PUSH DE
	2948 01 50 01       LD BC,56 * 3 * 2
	294B ED B0          LDIR
	294D E1             POP HL
	294E F1             POP AF
	294F 87             ADD A,A
	2950 C6 08          ADD A,8
	2952 FE 39          CP &39
	2954 38 02          JR c,occdw_1
	2956 3E 38          LD A,&38
occdw_1
	2958 47             LD B,A
	2959 87             ADD A,A
	295A 80             ADD A,B
	295B 5F             LD E,A
	295C 16 00          LD D,0
	295E 19             ADD HL,DE
	295F EB             EX DE,HL
	2960 21 A8 00       LD HL,56 * 3
	2963 19             ADD HL,DE
	2964 78             LD A,B
	2965 ED 44          NEG
	2967 C6 39          ADD A,&39
	2969 47             LD B,A
	296A 0E FC          LD C,&FC
	296C 18 13          JR occdw_2

occdw_3
	296E 1A             LD A,(DE)
	296F A1             AND C
	2970 12             LD (DE),A
	2971 13             INC DE
	2972 13             INC DE
	2973 13             INC DE
	2974 79             LD A,C
	2975 2F             CPL
	2976 B6             OR (HL)
	2977 77             LD (HL),A
	2978 23             INC HL
	2979 23             INC HL
	297A 23             INC HL
	297B A7             AND A
	297C CB 11          RL C
	297E A7             AND A
	297F CB 11          RL C
occdw_2
	2981 10 EB          DJNZ occdw_3
	2983 AF             XOR A
	2984 32 40 2B       LD (DoorwayFlipped),A
	2987 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.Sprite_Width:
	2988 04             DEFB 	4								;; width of sprite in bytes
Sprite_Code
	2989 00             DEFB	&00

;; -----------------------------------------------------------------------------------------------------------
	298A 00             DEFB	0
	298B 01				DEFB	1

;; -----------------------------------------------------------------------------------------------------------
;; This will init another table in 4F00-4FFF used as a look-up table
;; for byte reverses (RevTable).
;; The final table is:
;;  4F00 : 00 80 40 C0 20 A0 60 E0 10 90 50 D0 30 B0 70 F0
;;  4F10 : 08 88 48 C8    ....                       78 F8
;;  4F20 : 04 84 44 C4    ....                       74 F4
;;  ...    ...            ....                       ...
;;  4FE0 : 07 87 47 C7    ....                       77 F7
;;  4FF0 : 0F 8F 4F CF 2F AF 6F EF 1F 9F 5F DF 3F BF 7F FF
Init_table_rev:
	298C 21 00 4F      	LD HL,RevTable ;; 4F00
table2_next_idx
	298F 4D             LD C,L
	2990 3E 01          LD A,1
	2992 A7             AND A
table2_decomp
	2993 1F             RRA
	2994 CB 11          RL C
	2996 20 FB          JR NZ,table2_decomp
	2998 77             LD (HL),A
	2999 2C             INC L
	299A 20 F3          JR NZ,table2_next_idx
	299C C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; For a given sprite code, generates the X and Y extents, and sets
;; the current sprite code and sprite width.
;;
;; Parameters: Sprite code in A. X coordinate in C, Y coordinate in B
;; Returns: X extent in BC, Y extent in HL
GetSprExtents:
	299D 32 89 29       LD (Sprite_Code),A
	29A0 E6 7F          AND &7F
	29A2 FE 10          CP SPR_1st_3x32_sprite
	29A4 38 34          JR c,Case3x56
	29A6 11 06 06       LD DE,&06 * WORD_HIGH_BYTE + &06
	29A9 26 12          LD H,&12
	29AB FE 50          CP SPR_1st_4x28_sprite
	29AD 38 05          JR c,gsext_1
	29AF 11 08 08       LD DE,&08 * WORD_HIGH_BYTE + &08
	29B2 26 14          LD H,&14
gsext_1
	29B4 FE 30          CP SPR_1st_3x24_sprite
	29B6 30 0F          JR NC,SSW_2
	29B8 3A D0 14       LD A,(SpriteFlags)
	29BB E6 02          AND &02
	29BD 16 04          LD D,&04
	29BF 26 0C          LD H,&0C
	29C1 28 04          JR Z,SSW_2
	29C3 16 00          LD D,&00
	29C5 26 10          LD H,&10
SSW_2
	29C7 78             LD A,B
	29C8 82             ADD A,D
	29C9 6F             LD L,A
	29CA 92             SUB D
	29CB 94             SUB H
	29CC 67             LD H,A
	29CD 79             LD A,C
	29CE 83             ADD A,E
	29CF 4F             LD C,A
	29D0 93             SUB E
	29D1 93             SUB E
	29D2 47             LD B,A
	29D3 7B             LD A,E
	29D4 A7             AND A
	29D5 1F             RRA
	29D6 32 88 29       LD (Sprite_Width),A
	29D9 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Horrible hack to get the current object - we're usually
;; called via Blit_Objects, which sets this.
;;
;; However, IntersectObj is also called via AddObject, so err...
;; either something clever's going on, or the extents can be
;; slightly wrong in the AddObject case for doors.
.Case3x56:
	29DA 2A 9F 15       LD HL,(smc_CurrObject2+1)
	29DD 23             INC HL
	29DE 23             INC HL
	29DF CB 6E          BIT 5,(HL)
	29E1 08             EX AF,AF'
	29E2 7E             LD A,(HL)
	29E3 D6 10          SUB &10
	29E5 FE 20          CP &20
	29E7 2E 04          LD L,&04
	29E9 30 02          JR NC,br_359A
	29EB 2E 08          LD L,&08
br_359A
	29ED 78             LD A,B
	29EE 85             ADD A,L
	29EF 6F             LD L,A
	29F0 D6 38          SUB &38
	29F2 67             LD H,A
	29F3 08             EX AF,AF'
	29F4 79             LD A,C
	29F5 06 08          LD B,&08
	29F7 20 02          JR NZ,br_35A8
	29F9 06 04          LD B,&04
br_35A8
	29FB 80             ADD A,B
	29FC 4F             LD C,A
	29FD D6 0C          SUB &0C
	29FF 47             LD B,A
	2A00 3E 03          LD A,&03
	2A02 32 88 29       LD (Sprite_Width),A
	2A05 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Looks up based on SpriteCode. Top bit set means flip horizontally.
;; Return height in B, image in DE, mask in HL.
.Load_sprite_image_address_into_DE:
	2A06 3A 89 29       LD A,(Sprite_Code)
	2A09 E6 7F          AND &7F
	2A0B FE 50          CP SPR_1st_4x28_sprite
	2A0D D2 CF 2A       JP NC,Sprite4x28
	2A10 FE 30          CP SPR_1st_3x24_sprite
	2A12 30 7E          JR NC,Sprite3x24
	2A14 FE 10          CP SPR_1st_3x32_sprite
	2A16 26 00          LD H,0
	2A18 30 4B          JR NC,Sprite3x32
	2A1A 6F             LD L,A
	2A1B ED 5B 9F 15    LD DE,(smc_CurrObject2+1)
	2A1F 13             INC DE
	2A20 13             INC DE
	2A21 1A             LD A,(DE)
	2A22 F6 FC          OR &FC
	2A24 3C             INC A
	2A25 20 26          JR NZ,Sprite3x56
	2A27 3A 89 29       LD A,(Sprite_Code)
	2A2A 4F             LD C,A
	2A2B 17             RLA
	2A2C 3A E0 16       LD A,(RoomDimensionsIdx)
	2A2F 38 04          JR c,br_35E2
	2A31 FE 06          CP &06
	2A33 18 02          JR br_35E4
br_35E2
	2A35 FE 03          CP &03
br_35E4
	2A37 28 14          JR Z,Sprite3x56
	2A39 3A 40 2B       LD A,(DoorwayFlipped)
	2A3C A9             XOR C
	2A3D 17             RLA
	2A3E 11 90 B8       LD DE,DoorwayImgBuf + MOVE_OFFSET
	2A41 21 38 B9       LD HL,DoorwayMaskBuf + MOVE_OFFSET
	2A44 D0             RET NC
	2A45 79             LD A,C
	2A46 32 40 2B       LD (DoorwayFlipped),A
	2A49 06 70          LD B,56*2
	2A4B 18 66          JR FlipSprite3

;; -----------------------------------------------------------------------------------------------------------
;; Deal with a 3 byte x sprite 56 pixels high.
;; Same parameters/return as Load_sprite_image_address_into_DE.
Sprite3x56
	2A4D 7D             LD A,L
	2A4E 5F             LD E,A
	2A4F 87             ADD A,A
	2A50 87             ADD A,A
	2A51 83             ADD A,E
	2A52 87             ADD A,A
	2A53 6F             LD L,A
	2A54 29             ADD HL,HL
	2A55 29             ADD HL,HL
	2A56 29             ADD HL,HL
	2A57 7B             LD A,E
	2A58 84             ADD A,H
	2A59 67             LD H,A
	2A5A 11 F0 6B       LD DE,img_3x56_bin	+ MOVE_OFFSET ;; 6BF0 : Doorways
	2A5D 19             ADD HL,DE
	2A5E 11 A8 00       LD DE,56*3
	2A61 06 70          LD B,56*2
	2A63 18 46          JR Sprite3Wide

;; -----------------------------------------------------------------------------------------------------------
;; Deal with a 3 byte x 32 pixel high sprite.
;; Same parameters/return as Load_sprite_image_address_into_DE.
;;
;; Returns a half-height offset sprite if bit 2 is not set, since the
;; 3x32 sprites are broken into 2 16-bit-high chunks.
.Sprite3x32:
	2A65 D6 10          SUB SPR_1st_3x32_sprite
	2A67 6F             LD L,A
	2A68 87             ADD A,A
	2A69 85             ADD A,L
	2A6A 6F             LD L,A
	2A6B 29             ADD HL,HL
	2A6C 29             ADD HL,HL
	2A6D 29             ADD HL,HL
	2A6E 29             ADD HL,HL
	2A6F 29             ADD HL,HL
	2A70 29             ADD HL,HL
	2A71 11 50 7E       LD DE,img_3x32_bin	+ MOVE_OFFSET ;; 7E50 : Regular sprites
	2A74 19             ADD HL,DE
	2A75 11 60 00       LD DE,32*3
	2A78 06 40          LD B,32*2
	2A7A EB             EX DE,HL
	2A7B 19             ADD HL,DE
	2A7C D9             EXX
	2A7D CD 11 2B       CALL NeedsFlip
	2A80 D9             EXX
	2A81 D4 B3 2A       CALL NC,FlipSprite3
	2A84 3A D0 14       LD A,(SpriteFlags)
	2A87 E6 02          AND &02
	2A89 C0             RET NZ
	2A8A 01 30 00       LD BC,16*3
	2A8D 09             ADD HL,BC
	2A8E EB             EX DE,HL
	2A8F 09             ADD HL,BC
	2A90 EB             EX DE,HL
	2A91 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Deal with a 3 byte (x2 img/mask, 4pix per byte, hence 3*2*4 = 24 pix wide) x 24 pixel high sprite
;; Same parameters/return as Load_sprite_image_address_into_DE.
;; Return : height image+mask in B, image in DE, mask in HL.
.Sprite3x24:
	2A92 D6 30          SUB SPR_1st_3x24_sprite
	2A94 6F             LD L,A
	2A95 87             ADD A,A
	2A96 87             ADD A,A
	2A97 87             ADD A,A
	2A98 85             ADD A,L
	2A99 6F             LD L,A
	2A9A CE 00          ADC A,0
	2A9C 95             SUB L
	2A9D 67             LD H,A
	2A9E 29             ADD HL,HL
	2A9F 29             ADD HL,HL
	2AA0 29             ADD HL,HL
	2AA1 29             ADD HL,HL
	2AA2 11 10 94       LD DE,img_3x24_bin	+ MOVE_OFFSET ;; 9410
	2AA5 19             ADD HL,DE
	2AA6 11 48 00       LD DE,24*3
	2AA9 06 30          LD B,24*2
Sprite3Wide
	2AAB EB             EX DE,HL
	2AAC 19             ADD HL,DE
	2AAD D9             EXX
	2AAE CD 11 2B       CALL NeedsFlip
	2AB1 D9             EXX
	2AB2 D8             RET c
;; Flip a 3-character-wide sprite. Height in B, source in DE.
.FlipSprite3:
	2AB3 E5             PUSH HL
	2AB4 D5             PUSH DE
	2AB5 EB             EX DE,HL
	2AB6 16 4F          LD D,RevTable / WORD_HIGH_BYTE	 ;; 4F
fspr3_loop
	2AB8 4E             LD C,(HL)
	2AB9 22 C4 2A       LD (smc_flipsprite3+1),HL
	2ABC 23             INC HL
	2ABD 5E             LD E,(HL)
	2ABE 1A             LD A,(DE)
	2ABF 77             LD (HL),A
	2AC0 23             INC HL
	2AC1 5E             LD E,(HL)
	2AC2 1A             LD A,(DE)
smc_flipsprite3
	2AC3 32 00 00       LD (&0000),A
	2AC6 59             LD E,C
	2AC7 1A             LD A,(DE)
	2AC8 77             LD (HL),A
	2AC9 23             INC HL
	2ACA 10 EC          DJNZ fspr3_loop
	2ACC D1             POP DE
	2ACD E1             POP HL
	2ACE C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Looks up a 4x28 sprite.
;; Same parameters/return as Load_sprite_image_address_into_DE.
.Sprite4x28:
	2ACF D6 50          SUB SPR_1st_4x28_sprite
	2AD1 57             LD D,A
	2AD2 07             RLCA
	2AD3 07             RLCA
	2AD4 26 00          LD H,0
	2AD6 6F             LD L,A
	2AD7 5C             LD E,H
	2AD8 29             ADD HL,HL
	2AD9 29             ADD HL,HL
	2ADA 29             ADD HL,HL
	2ADB EB             EX DE,HL
	2ADC ED 52          SBC HL,DE
	2ADE 11 80 A5       LD DE,img_4x28_bin	+ MOVE_OFFSET ;; A580
	2AE1 19             ADD HL,DE
	2AE2 11 70 00       LD DE,28*4
	2AE5 06 38          LD B,28*2
	2AE7 EB             EX DE,HL
	2AE8 19             ADD HL,DE
	2AE9 D9             EXX
	2AEA CD 11 2B       CALL NeedsFlip
	2AED D9             EXX
	2AEE D8             RET c
;; Flip a 4-character-wide sprite. Height in B, source in DE.
flipSprite4:
	2AEF E5             PUSH HL
	2AF0 D5             PUSH DE
	2AF1 EB             EX DE,HL
	2AF2 16 4F          LD D,RevTable / WORD_HIGH_BYTE	 ;; 4F
fspr4_loop
	2AF4 4E             LD C,(HL)
	2AF5 22 06 2B       LD (smc_fs_addr+1),HL
	2AF8 23             INC HL
	2AF9 5E             LD E,(HL)
	2AFA 23             INC HL
	2AFB 1A             LD A,(DE)
	2AFC 5E             LD E,(HL)
	2AFD 77             LD (HL),A
	2AFE 2B             DEC HL
	2AFF 1A             LD A,(DE)
	2B00 77             LD (HL),A
	2B01 23             INC HL
	2B02 23             INC HL
	2B03 5E             LD E,(HL)
	2B04 1A             LD A,(DE)
smc_fs_addr
	2B05 32 00 00       LD (&0000),A
	2B08 59             LD E,C
	2B09 1A             LD A,(DE)
	2B0A 77             LD (HL),A
	2B0B 23             INC HL
	2B0C 10 E6          DJNZ fspr4_loop
	2B0E D1             POP DE
	2B0F E1             POP HL
	2B10 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Look up the sprite in the bitmap, returns with Carry set if the top bit of
;; SpriteCode matches the bitmap, otherwise updates the bitmap (assumes
;; that the caller will flip the sprite if we return NC). In effect, a
;; simple cache.
.NeedsFlip:
	2B11 3A 89 29       LD A,(Sprite_Code)
	2B14 4F             LD C,A
	2B15 E6 07          AND &07
	2B17 3C             INC A
	2B18 47             LD B,A
	2B19 3E 01          LD A,&01
ndflp_1
	2B1B 0F             RRCA
	2B1C 10 FD          DJNZ ndflp_1
	2B1E 47             LD B,A
	2B1F 79             LD A,C
	2B20 1F             RRA
	2B21 1F             RRA
	2B22 1F             RRA
	2B23 E6 0F          AND &0F
	2B25 5F             LD E,A
	2B26 16 00          LD D,0
	2B28 21 E0 56       LD HL,SpriteFlips_buffer + MOVE_OFFSET ;; 56E0
	2B2B 19             ADD HL,DE
	2B2C 78             LD A,B
	2B2D A6             AND (HL)
	2B2E 28 08          JR Z,SubNeedsFlip
	2B30 CB 11          RL C
	2B32 D8             RET c
	2B33 78             LD A,B
	2B34 2F             CPL
	2B35 A6             AND (HL)
	2B36 77             LD (HL),A
	2B37 C9             RET

SubNeedsFlip
	2B38 CB 11          RL C
	2B3A 3F             CCF
	2B3B D8             RET c
	2B3C 78             LD A,B
	2B3D B6             OR (HL)
	2B3E 77             LD (HL),A
	2B3F C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Are the contents of DoorwayBuf flipped?
.DoorwayFlipped:
	2B40 00				DEFB 0

CurrObject
	2B41 FA 00 			DEFW &00FA

ObjDir
	2B43 FF				DEFB &FF

;; -----------------------------------------------------------------------------------------------------------
;; Takes an object pointer in IY, an object code in A (index in the
;; ObjDefns list when ReadRoom), and initialises it.
;; Doesn't set flags, direction code, or coordinates.
;; Must then call AddObject to copy it into the room.
InitObj
	2B44 6F             LD L,A
	2B45 5F             LD E,A
	2B46 16 00          LD D,0				;; DE = index
	2B48 62             LD H,D				;; HL = index
	2B49 29             ADD HL,HL			;; HL = 2 * index
	2B4A 19             ADD HL,DE			;; HL = 3 * index
	2B4B 11 85 2C       LD DE,ObjDefns 		;; ObjDefns 2C85
	2B4E 19             ADD HL,DE			;; HL = ObjDefns + (3 * index)
	2B4F 7E             LD A,(HL)			;; get sprite
SetObjSprite
	2B50 FD 36 0F 00    LD (IY+O_ANIM),0
	2B54 FD 77 08       LD (IY+O_SPRITE),A
	2B57 FE 80          CP &80
	2B59 38 0B          JR c,sos_skip		;; if < &80 skip, else it has anim loop
	2B5B 87             ADD A,A				;; else if >= &80:
	2B5C 87             ADD A,A
	2B5D 87             ADD A,A				;; A[4:0]<<3
	2B5E FD 77 0F       LD (IY+O_ANIM),A
	2B61 E5             PUSH HL
	2B62 CD A5 2B       CALL AnimateObj
	2B65 E1             POP HL
sos_skip
	2B66 23             INC HL
	2B67 7E             LD A,(HL)
	2B68 FD 77 0A       LD (IY+O_FUNC),A
	2B6B 23             INC HL
	2B6C 7E             LD A,(HL)
	2B6D FE 80          CP &80
	2B6F CB BF          RES 7,A
	2B71 FD 77 FF       LD (IY-1),A			;; BaseFlags+1 (IY = TmpObj_variables)
	2B74 FD 36 FE 02    LD (IY-2),&02		;; BaseFlags (IY = TmpObj_variables)
	2B78 FD CB 09 96    RES 2,(IY+O_SPRFLAGS)
	2B7C D8             RET c
	2B7D FD CB 09 D6    SET 2,(IY+O_SPRFLAGS)
	2B81 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Takes an object pointer in DE (From ObjectsBuffer 6A40-...), and
;; index the object function in A.
;; Note that the function ID starts at 1, so to align on the ObjFnTbl
;; table, need to do a -1.
;; The object is of the same format that TmpObj_variables.
.CallObjFn:
	2B82 ED 53 41 2B    LD (CurrObject),DE
	2B86 D5             PUSH DE
	2B87 FD E1          POP IY
	2B89 3D             DEC A
	2B8A 87             ADD A,A
	2B8B C6 4F          ADD A,ObjFnTbl and WORD_LOW_BYTE
	2B8D 6F             LD L,A
	2B8E CE 2C          ADC A,ObjFnTbl / WORD_HIGH_BYTE ;; 2C4F
	2B90 95             SUB L
	2B91 67             LD H,A			;; HL = ObjFnTbl + 2 * (A-1)
	2B92 7E             LD A,(HL)
	2B93 23             INC HL
	2B94 66             LD H,(HL)
	2B95 6F             LD L,A
	2B96 AF             XOR A
	2B97 32 02 3D       LD (DrawFlags),A
	2B9A FD 7E 0B       LD A,(IY+O_IMPACT)
	2B9D 32 43 2B       LD (ObjDir),A
	2BA0 FD 36 0B FF    LD (IY+O_IMPACT),&FF
	2BA4 E9             JP (HL)

;; -----------------------------------------------------------------------------------------------------------
;; Update the animation. IY points to an object.
;; Returns with carry flag set if it's an animation. (NC if not)
AnimateObj
.Animate:
	2BA5 FD 4E 0F       LD C,(IY+O_ANIM)
	2BA8 79             LD A,C
	2BA9 E6 F8          AND &F8
	2BAB FE 08          CP FIRST_ANIM_code
	2BAD 3F             CCF
	2BAE D0             RET NC
	2BAF 0F             RRCA
	2BB0 0F             RRCA
	2BB1 D6 02          SUB 2
	2BB3 C6 DD          ADD A,AnimTable and WORD_LOW_BYTE
	2BB5 6F             LD L,A
	2BB6 CE 2B          ADC A,AnimTable / WORD_HIGH_BYTE ;; 2BDD
	2BB8 95             SUB L
	2BB9 67             LD H,A			;; HL = AnimTable
	2BBA 79             LD A,C
	2BBB 3C             INC A
	2BBC E6 07          AND &07
	2BBE 47             LD B,A
	2BBF 86             ADD A,(HL)
	2BC0 5F             LD E,A
	2BC1 23             INC HL
	2BC2 8E             ADC A,(HL)
	2BC3 93             SUB E
	2BC4 57             LD D,A
	2BC5 1A             LD A,(DE)
	2BC6 A7             AND A
	2BC7 20 07          JR NZ,Anim1
	2BC9 06 00          LD B,0
	2BCB 7E             LD A,(HL)
	2BCC 2B             DEC HL
	2BCD 6E             LD L,(HL)
	2BCE 67             LD H,A
	2BCF 7E             LD A,(HL)
Anim1
	2BD0 FD 77 08       LD (IY+O_SPRITE),A
	2BD3 78             LD A,B
	2BD4 A9             XOR C
	2BD5 E6 07          AND &07
	2BD7 A9             XOR C
	2BD8 FD 77 0F       LD (IY+O_ANIM),A
	2BDB 37             SCF
	2BDC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Pointers on the anim sprites list from the anim codes [7:3] and [2:0] frame
;; Note : The 'B' version is the moving-away-from-viewers version (Back/rear view).
;; The code &00 = no anim.
ANIM_VAPE				EQU		&81
ANIM_WOLF				EQU		&82
ANIM_SHARK 				EQU		&84
ANIM_DOG 				EQU		&86
ANIM_JOKER 				EQU		&88
ANIM_DEMON 				EQU		&8A
ANIM_SALT 				EQU		&8C
ANIM_RIDDLER 			EQU		&8E
ANIM_WORM 				EQU		&90
ANIM_BIGVAPE 			EQU		&92
ANIM_BEACON 			EQU		&94
;; -----------------------------------------------------------------------------------------------------------
;; value set in O_ANIM; [7:3] = AnimID (bit3=Front/Back for most values); [2:0] = frame index
NO_ANIM_code			EQU		&00					;; [7:3] AnimID = 0 (no anim), [2:0] frame = 0
ANIM_VAPE_code			EQU		&08					;; [7:3] AnimID = 1 (&81), [2:0] frame = 0
FIRST_ANIM_code			EQU		ANIM_VAPE_code
;; -----------------------------------------------------------------------------------------------------------

.AnimTable:
	2BDD 07 2C			DEFW anim_sml_vape		;; &81 ; bit7 set, code1 will become &08 + phase in O_ANIM
	2BDF 0C 2C          DEFW anim_f_wolf		;; &82
	2BE1 11 2C          DEFW anim_b_wolf        ;; &83
	2BE3 16 2C          DEFW anim_f_shark       ;; &84
	2BE5 1B 2C          DEFW anim_b_shark       ;; &85
	2BE7 20 2C          DEFW anim_f_dog         ;; &86
	2BE9 25 2C          DEFW anim_b_dog         ;; &87
	2BEB 2A 2C          DEFW anim_f_joker       ;; &88
	2BED 2C 2C          DEFW anim_b_joker       ;; &89
	2BEF 33 2C          DEFW anim_f_demon       ;; &8A
	2BF1 35 2C          DEFW anim_b_demon       ;; &8B
	2BF3 37 2C          DEFW anim_x_salt        ;; &8C
	2BF5 37 2C          DEFW anim_x_salt        ;; &8D
	2BF7 3A 2C          DEFW anim_f_riddler     ;; &8E
	2BF9 3C 2C          DEFW anim_b_riddler     ;; &8F
	2BFB 3E 2C          DEFW anim_x_worm        ;; &90
	2BFD 3E 2C          DEFW anim_x_worm        ;; &91
	2BFF 43 2C          DEFW anim_big_vape      ;; &92
	2C01 43 2C          DEFW anim_big_vape      ;; &93
	2C03 4C 2C          DEFW anim_x_beacon      ;; &94
	2C05 4C 2C          DEFW anim_x_beacon      ;; &95 ; bit7 set, code1 will become &A0 + phase in O_ANIM

;; -----------------------------------------------------------------------------------------------------------
.AnimTable_data:
anim_sml_vape:
	2C07 				DEFB SPR_VAPE_2 or SPR_FLIP, SPR_VAPE_2, SPR_VAPE_1, SPR_VAPE_0, 0
anim_f_wolf:
	2C0C 				DEFB SPR_WOLF_0, SPR_WOLF_1, SPR_WOLF_0, SPR_WOLF_2, 0
anim_b_wolf:
	2C11 				DEFB SPR_WOLF_B0, SPR_WOLF_B1, SPR_WOLF_B0, SPR_WOLF_B2, 0
anim_f_shark:
	2C16 				DEFB SPR_SHARK_0, SPR_SHARK_0, SPR_SHARK_1, SPR_SHARK_1, 0
anim_b_shark:
	2C1B 				DEFB SPR_SHARK_B0, SPR_SHARK_B0, SPR_SHARK_B1, SPR_SHARK_B1, 0
anim_f_dog:
	2C20 				DEFB SPR_DOG_0, SPR_DOG_0, SPR_DOG_1, SPR_DOG_1, 0
anim_b_dog:
	2C25 				DEFB SPR_DOG_B0, SPR_DOG_B0, SPR_DOG_B1, SPR_DOG_B1, 0
anim_f_joker
	2C2A 				DEFB SPR_JOKER, 0
anim_b_joker:
	2C2C 				DEFB SPR_JOKERB, SPR_JOKERB, SPR_JOKERB, SPR_JOKERB, SPR_JOKER_B1, SPR_JOKER_B1, 0
anim_f_demon:
	2C33 				DEFB SPR_DEMON, 0
anim_b_demon:
	2C35 				DEFB SPR_DEMONB, 0
anim_x_salt:
	2C37 				DEFB SPR_SALT, SPR_SALT or SPR_FLIP, 0
anim_f_riddler:
	2C3A 				DEFB SPR_RIDDLER, 0
anim_b_riddler:
	2C3C 				DEFB SPR_RIDDLERB, 0
anim_x_worm:
	2C3E 				DEFB SPR_WORM_0, SPR_WORM_0, SPR_WORM_1, SPR_WORM_1, 0
anim_big_vape:
	2C43 				DEFB SPR_VAPE_0, SPR_VAPE_0 or SPR_FLIP, SPR_VAPE_1 or SPR_FLIP, SPR_VAPE_1, SPR_VAPE_2, SPR_VAPE_2 or SPR_FLIP, SPR_VAPE_1 or SPR_FLIP, SPR_VAPE_1, 0
anim_x_beacon:
	2C4C 				DEFB SPR_BEACON, SPR_BEACON or SPR_FLIP, 0

;; -----------------------------------------------------------------------------------------------------------
;; Function names will be kept consitent with the ones in Head Over Heels
OBJFN_FADE				EQU	&12

.ObjFnTbl:
	2C4F D0 3D			DEFW ObjFnPushable		;; &01 	3DD0
	2C51 85 3D			DEFW ObjFnRollers1		;; &02  3D85
	2C53 89 3D			DEFW ObjFnRollers2		;; &03  3D89
	2C55 8D 3D			DEFW ObjFnRollers3		;; &04  3D8D
	2C57 91 3D			DEFW ObjFnRollers4		;; &05  3D91
	2C59 E7 3D			DEFW ObjFnVisor1		;; &06  3DE7
	2C5B EC 3D			DEFW ObjFnMonocat		;; &07  3DEC
	2C5D F1 3D			DEFW ObjFnAnticlock		;; &08  3DF1
	2C5F 05 3E			DEFW ObjFnRandB			;; &09  3E05
	2C61 04 3D			DEFW ObjFnBall			;; &0A  3D04
	2C63 F6 3D			DEFW ObjFnBee			;; &0B  3DF6
	2C65 FB 3D			DEFW ObjFnRandK			;; &0C  3DFB
	2C67 00 3E			DEFW ObjFnRandR			;; &0D  3E00
	2C69 0F 3E			DEFW ObjFnTowards		;; &0E  3E0F
	2C6B 52 3D			DEFW ObjFnSwitch		;; &0F  3D52
	2C6D 0A 3E			DEFW ObjFnHomeIn		;; &10  3E0A
	2C6F 6B 3E			DEFW ObjFnHeliplat3		;; &11  3E6B
	2C71 B6 3D			DEFW ObjFnFade			;; &12  3DB6
	2C73 6A 3D			DEFW ObjFnHeliplat60	;; &13  3D6A
	2C75 70 3D			DEFW ObjFnHeliplat10	;; &14  3D70
	2C77 7A 3D			DEFW ObjFnColapse		;; &15  3D7A
	2C79 9E 3D			DEFW ObjFnDissolve2		;; &16  3D9E
	2C7B E1 3D			DEFW ObjFnSquarePatrol	;; &17  3DE1
	2C7D DB 3D			DEFW ObjFnLinePatrol	;; &18  3DDB
	2C7F 67 3D			DEFW ObjFnHeliplat90	;; &19  3D67
	2C81 6D 3D			DEFW ObjFnHeliplat30	;; &1A  3D6D
	2C83 9B 3D			DEFW ObjFnDissolve		;; &1B  3D9B

;; -----------------------------------------------------------------------------------------------------------
;; Define the objects that can appear in a room definition
;; "sprite codes" >= &81 are animations
ObjDefns: 		;;		<sprite code> 	<function> 						<flag>
	2C85 36 01 40		DEFB SPR_S_CUSHION, &01, &40 ;; SPR_S_CUSHION
	2C88 3C 01 40		DEFB SPR_PRESENT, &01, &40 ;; SPR_PRESENT
	2C8B 3D 01 40		DEFB SPR_WELL, &01, &40 ;; SPR_WELL
	2C8E 3E 01 40		DEFB SPR_PAWDRUM, &01, &40 ;; SPR_PAWDRUM
	2C91 3F 01 40		DEFB SPR_STOOL, &01, &40 ;; SPR_STOOL
	2C94 47 00 00		DEFB SPR_PILLAR, 0, &00 ;; SPR_PILLAR
	2C97 42 01 40		DEFB SPR_KETTLE, &01, &40 ;; SPR_KETTLE
	2C9A 43 01 40		DEFB SPR_SUGARBOX, &01, &40 ;; SPR_SUGARBOX
	2C9D 48 01 40		DEFB SPR_BUNDLE, &01, &40 ;; SPR_BUNDLE
	2CA0 45 0A 20		DEFB SPR_QBALL, &0A, &20 ;; SPR_QBALL
	2CA3 4A 0A 00		DEFB SPR_BUBBLE, &0A, &00 ;; SPR_BUBBLE
	2CA6 5C 01 01		DEFB SPR_CRATE, &01, &01 ;; SPR_CRATE
	2CA9 3D 00 00		DEFB SPR_WELL, 0, &00 ;; SPR_WELL
	2CAC 41 0F 00		DEFB SPR_SWITCH, &0F, &00 ;; SPR_SWITCH
	2CAF 8C 09 20		DEFB ANIM_SALT, &09, &20
	2CB2 40 00 20		DEFB SPR_SHROOM, 0, &20 ;; SPR_SHROOM
	2CB5 5A 19 01		DEFB SPR_TURTLE, &19, &01 ;; SPR_TURTLE
	2CB8 45 16 00		DEFB SPR_QBALL, &16, &00 ;; SPR_QBALL
	2CBB 51 01 01		DEFB SPR_SMILEY, &01, &01 ;; SPR_SMILEY
	2CBE 52 02 11		DEFB SPR_ROLLER, &02, &11 ;; SPR_ROLLER
	2CC1 52 03 11		DEFB SPR_ROLLER, &03, &11 ;; SPR_ROLLER
	2CC4 52 04 01		DEFB SPR_ROLLER, &04, &01 ;; SPR_ROLLER
	2CC7 52 05 01		DEFB SPR_ROLLER, &05, &01 ;; SPR_ROLLER
	2CCA 54 02 01		DEFB SPR_STEPBOX, &02, &01 ;; SPR_STEPBOX
	2CCD 54 03 01		DEFB SPR_STEPBOX, &03, &01 ;; SPR_STEPBOX
	2CD0 54 04 01		DEFB SPR_STEPBOX, &04, &01 ;; SPR_STEPBOX
	2CD3 54 05 01		DEFB SPR_STEPBOX, &05, &01 ;; SPR_STEPBOX
	2CD6 53 00 01		DEFB SPR_CLEARBOX, 0, &01 ;; SPR_CLEARBOX
	2CD9 54 00 01		DEFB SPR_STEPBOX, 0, &01 ;; SPR_STEPBOX
	2CDC 56 00 01		DEFB SPR_COLUMN, 0, &01 ;; SPR_COLUMN
	2CDF 59 00 21		DEFB SPR_Z_CUSHION, 0, &21 ;; SPR_Z_CUSHION
	2CE0 5A 00 01		DEFB SPR_TURTLE, 0, &01 ;; SPR_TURTLE
	2CE5 5B 00 01		DEFB SPR_TABLE, 0, &01 ;; SPR_HELIPLAT
	2CE8 5C 00 01		DEFB SPR_CRATE, 0, &01 ;; SPR_CRATE
	2CEB 5E 00 01		DEFB SPR_DSPIKES, 0, &01 ;; SPR_DSPIKES
	2CEE 5F 00 02		DEFB SPR_BRICKW, 0, &02 ;; SPR_BRICKW
	2CF1 55 00 21		DEFB SPR_LAVAPIT, 0, &21 ;; SPR_LAVAPIT
	2CF4 57 00 21		DEFB SPR_ECRIN, 0, &21 ;; SPR_ECRIN
	2CF7 58 00 21		DEFB SPR_BOX, 0, &21 ;; SPR_BOX
	2CFA 5D 00 21		DEFB SPR_TARBOX, 0, &21 ;; SPR_TARBOX
	2CFD 60 00 A2		DEFB &60, 0, &A2
	2D00 5E 1A A2		DEFB SPR_DSPIKES, &1A, &A2 ;; SPR_DSPIKES
	2D03 54 16 01		DEFB SPR_STEPBOX, &16, &01 ;; SPR_STEPBOX
	2D06 53 16 01		DEFB SPR_CLEARBOX, &16, &01 ;; SPR_CLEARBOX
	2D09 56 16 01		DEFB SPR_COLUMN, &16, &01 ;; SPR_COLUMN
	2D0C 5C 16 01		DEFB SPR_CRATE, &16, &01 ;; SPR_CRATE
	2D0F 94 0B 20		DEFB ANIM_BEACON, &0B, &20
	2D12 90 0B 20		DEFB ANIM_WORM, &0B, &20
	2D15 92 0C 20		DEFB ANIM_BIGVAPE, &0C, &20
	2D18 82 06 28		DEFB ANIM_WOLF, &06, &28
	2D1B 8A 06 28		DEFB ANIM_DEMON, &06, &28
	2D1E 84 0D 28		DEFB ANIM_SHARK, &0D, &28
	2D21 2B 00 28		DEFB SPR_RIDDLER, 0, &28 ;; SPR_ONEEYE
	2D24 88 08 28		DEFB ANIM_JOKER, &08, &28
	2D27 1E 00 28		DEFB SPR_DEMON, 0, &28 ;; SPR_DEMON
	2D2A 1F 00 28		DEFB SPR_DEMONB, 0, &28 ;; SPR_DEMONB
	2D2D 86 07 28		DEFB ANIM_DOG, &07, &28
	2D30 54 19 01		DEFB SPR_STEPBOX, &19, &01 ;; SPR_STEPBOX
	2D33 54 15 01		DEFB SPR_STEPBOX, &15, &01 ;; SPR_STEPBOX
	2D36 56 18 01		DEFB SPR_COLUMN, &18, &01 ;; SPR_COLUMN
	2D39 56 17 01		DEFB SPR_COLUMN, &17, &01 ;; SPR_COLUMN
	2D3C 56 15 01		DEFB SPR_COLUMN, &15, &01 ;; SPR_COLUMN
	2D3F 5D 19 21		DEFB SPR_TARBOX, &19, &21 ;; SPR_TARBOX
	2D42 47 14 A0		DEFB SPR_PILLAR, &14, &A0 ;; SPR_PILLAR
	2D45 5D 13 21		DEFB SPR_TARBOX, &13, &21 ;; SPR_TARBOX
	2D48 8E 10 28		DEFB ANIM_RIDDLER, &10, &28
	2D4B 8C 0E 00		DEFB ANIM_SALT, &0E, &00
	2D4E 3C 1B 20		DEFB SPR_PRESENT, &1B, &20 ;; SPR_PRESENT

;; -----------------------------------------------------------------------------------------------------------
;; Reinitialisation size of the array
;; The Reinitialise call with 3986 as argument will copy the 27 bytes of
;; ObjVars_reset_data into the ObjListIdx & after
ObjVars:
	2D51 1B				DEFB 27 ;; length
ObjVars_reset_data
	2D52 00             DEFB 	&00								;; reset for idx Objects
	2D53 40 50          DEFW 	ObjectsBuffer      				;; reset for dest Objects 5040
	2D55 74 2D          DEFW 	ObjList_Regular_Far2Near		;; reset for B List Pointer ObjectLists
	2D57 7E 2D          DEFW 	ObjList_Regular_Near2Far		;; reset for A List Pointer ObjectLists + 2
	2D59 00 00 00 00    DEFW 	&0000, &0000					;; reset for B and A usual list 1st item
	2D5D 00 00 00 00 	DEFW 	&0000, &0000					;; reset for Next V room B & A
	2D61 00 00 00 00 	DEFW 	&0000, &0000					;; reset for Next U room B & A
	2D65 00 00 00 00 	DEFW 	&0000, &0000					;; reset for Next Far room B & A
	2D69 00 00 00 00 	DEFW 	&0000, &0000					;; reset for Next Near room B & A

.SaveRestore_Block2:											;; Save/Restore block 2 : &1D (29 bytes)
.ObjListIdx:													;; The index into ObjectLists.
	2D6D 00             DEFB 	&00
Object_Destination:												;; Current pointer for where we write objects into (6A40 buffer)
	2D6E 40 50          DEFW 	ObjectsBuffer
;; 'A' list item pointers are offset +2 from 'B' list pointers.
.ObjListF2NPtr:
	2D70 74 2D          DEFW 	ObjList_Regular_Far2Near		;; pointer on the B list start (ObjectLists + 0
.ObjListN2FPtr:
	2D72 7E 2D          DEFW 	ObjList_Regular_Near2Far		;; pointer on the A list start (ObjectLists + 2

ObjectLists:
ObjList_Regular_Far2Near:										;; list type 0 ; ObjectLists + 0 ; Regular B (Far to Near) list 1st item pointer
	2D74 00 00          DEFW 	&0000
ObjList_NextRoomV_Far2Near:                        				;; list type 1 ; ObjectLists + 4 ; Next room in V direction B list pointers
	2D76 00 00          DEFW 	&0000
ObjList_NextRoomU_Far2Near:           							;; list type 2 ; ObjectLists + 8 ; Next room in U direction B list pointers
	2D78 00 00          DEFW 	&0000
ObjList_Far_Far2Near:                 							;; list type 3 ; ObjectLists + 12 ; Far (far corner of main room) B list pointers
	2D7A 00 00          DEFW 	&0000
ObjList_Near_Far2Near:                							;; list type 4 ; ObjectLists + 16 ; Near (near corner of main room) B list pointers
	2D7C 00 00          DEFW 	&0000

ObjList_Regular_Near2Far:                         				;; list type 0 ; ObjectLists + 2 ; Regular A (Near to Far) list 1st item pointer
	2D7E 00 00          DEFW 	&0000
ObjList_NextRoomV_Near2Far:           		            		;; list type 1 ; ObjectLists + 6 ; Next room in V direction A list pointers
	2D80 00 00          DEFW 	&0000
ObjList_NextRoomU_Near2Far:          							;; list type 2 ; ObjectLists + 10 ; Next room in U direction A list pointers
	2D82 00 00          DEFW 	&0000
ObjList_Far_Near2Far:                 							;; list type 3 ; ObjectLists + 14 ; Far A list pointers
	2D84 00 00          DEFW 	&0000
ObjList_Near_Near2Far:                							;; list type 4 ; ObjectLists + 18 ; Near A list pointers
	2D86 00 00          DEFW 	&0000

;; -----------------------------------------------------------------------------------------------------------
.SortObj:
	2D88 00 00          DEFW 	&0000

;; -----------------------------------------------------------------------------------------------------------
;; Set the object list index and pointers. list index in A (3 far, 4 near, 0 mid), .
.SetObjList:
	2D8A 32 6D 2D       LD (ObjListIdx),A
	2D8D 87             ADD A,A
	2D8E 87             ADD A,A
	2D8F C6 9F          ADD A,ObjectLists_ptr and WORD_LOW_BYTE ;; 2D9F
	2D91 6F             LD L,A
	2D92 CE 2D          ADC A,ObjectLists_ptr / WORD_HIGH_BYTE ;; 2D9F
	2D94 95             SUB L
	2D95 67             LD H,A
	2D96 11 70 2D       LD DE,ObjListF2NPtr
	2D99 01 04 00       LD BC,4
	2D9C ED B0          LDIR
	2D9E C9             RET

;; -----------------------------------------------------------------------------------------------------------
ObjectLists_ptr
	2D9F 74 2D			DEFW ObjList_Regular_Far2Near
	2DA1 7E 2D			DEFW ObjList_Regular_Near2Far
	2DA3 76 2D			DEFW ObjList_NextRoomV_Far2Near
	2DA5 80 2D			DEFW ObjList_NextRoomV_Near2Far
	2DA7 78 2D			DEFW ObjList_NextRoomU_Far2Near
	2DA9 82 2D			DEFW ObjList_NextRoomU_Near2Far
	2DAB 7A 2D			DEFW ObjList_Far_Far2Near
	2DAD 84 2D			DEFW ObjList_Far_Near2Far
	2DAF 7C 2D			DEFW ObjList_Near_Far2Near
	2DB1 86 2D			DEFW ObjList_Near_Near2Far

;; -----------------------------------------------------------------------------------------------------------
;; DE contains an 'A' list object pointer. Assumes the other half of the object
;; is in the next slot (+0x12). Syncs the object UVZ and state.
.SyncDoubleObject:
	2DB3 21 12 00       LD HL,OBJECT_LENGTH
	2DB6 19             ADD HL,DE
	2DB7 E5             PUSH HL
	2DB8 EB             EX DE,HL
	2DB9 01 05 00       LD BC,5
	2DBC ED B0          LDIR
	2DBE 7E             LD A,(HL)
	2DBF D6 06          SUB 6
	2DC1 12             LD (DE),A
	2DC2 13             INC DE
	2DC3 23             INC HL
	2DC4 ED A0          LDI
	2DC6 E1             POP HL
	2DC7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Copy an object into the object buffer, add a second object if it's
;; doubled, and link it into the depth-sorted lists.
;;
;; HL is a 'B' pointer to an object.
;; BC contains the size of the object (18 bytes).
.AddObject:
	2DC8 E5             PUSH HL
	2DC9 C5             PUSH BC
	2DCA 23             INC HL
	2DCB 23             INC HL
	2DCC CD 31 16       CALL IntersectObj
	2DCF C1             POP BC
	2DD0 E1             POP HL
	2DD1 D0             RET NC
	2DD2 ED 5B 6E 2D    LD DE,(Object_Destination)
	2DD6 D5             PUSH DE
	2DD7 ED B0          LDIR
	2DD9 ED 53 6E 2D    LD (Object_Destination),DE
	2DDD E1             POP HL
	2DDE E5             PUSH HL
	2DDF FD E1          POP IY
	2DE1 FD CB 04 5E    BIT 3,(IY+O_FLAGS)
	2DE5 28 1A          JR Z,Enlist
	;; Bit3 of O_FLAGS is set = tall object. Make the second object like
    ;; the first, copying offsets 0 to 8, then offset 9 (setting bit1)
	;; offset 10 will be &00,
	2DE7 01 09 00       LD BC,&0009
	2DEA E5             PUSH HL
	2DEB ED B0          LDIR
	2DED EB             EX DE,HL
	2DEE 1A             LD A,(DE)
	2DEF F6 02          OR &02
	2DF1 77             LD (HL),A
	2DF2 23             INC HL
	2DF3 36 00          LD (HL),0
	2DF5 23             INC HL					;; In Head Over Heels this HL + 8 is
	2DF6 23             INC HL					;; done like so:
	2DF7 23             INC HL					;; LD DE,8
	2DF8 23             INC HL					;; ADD HL,DE
	2DF9 23             INC HL
	2DFA 23             INC HL
	2DFB 23             INC HL
	2DFC 23             INC HL
	2DFD 22 6E 2D       LD (Object_Destination),HL
	2E00 E1             POP HL
	;; will fall in Enlist
;; -----------------------------------------------------------------------------------------------------------
;; Enlist the object. Both HL and IY point on the copied Object addr
.Enlist:
	2E01 3A 6D 2D       LD A,(ObjListIdx)
	2E04 3D             DEC A
	2E05 FE 02          CP &02
	2E07 30 23          JR NC,EnlistAux
	2E09 23             INC HL
	2E0A 23             INC HL
	2E0B FD CB 04 5E    BIT 3,(IY+O_FLAGS)
	2E0F 28 14          JR Z,EnlistObj
	2E11 E5             PUSH HL
	2E12 CD 25 2E       CALL EnlistObj
	2E15 D1             POP DE
	2E16 CD B3 2D       CALL SyncDoubleObject
	2E19 E5             PUSH HL
	2E1A CD FA 2E       CALL GetUVZExtents_Far2Near
	2E1D D9             EXX
	2E1E FD E5          PUSH IY
	2E20 E1             POP HL
	2E21 23             INC HL
	2E22 23             INC HL
	2E23 18 51          JR DepthInsert

;; -----------------------------------------------------------------------------------------------------------
;; Put the object in HL into its depth-sorted position in the list.
.EnlistObj:
	2E25 E5             PUSH HL
	2E26 CD FA 2E       CALL GetUVZExtents_Far2Near
	2E29 D9             EXX
	2E2A 18 47          JR DepthInsertHd

;; -----------------------------------------------------------------------------------------------------------
;; Takes a B pointer in HL/IY. Enlists it, and its other half if it's a
;; double-size object. Inserts inthe the appropriate list.
EnlistAux
	2E2C 23             INC HL
	2E2D 23             INC HL
	2E2E FD CB 04 5E    BIT 3,(IY+O_FLAGS)
	2E32 28 14          JR Z,EnlistObjAux
	2E34 E5             PUSH HL
	2E35 CD 48 2E       CALL EnlistObjAux
	2E38 D1             POP DE
	2E39 CD B3 2D       CALL SyncDoubleObject
	2E3C E5             PUSH HL
	2E3D CD FA 2E       CALL GetUVZExtents_Far2Near
	2E40 D9             EXX
	2E41 FD E5          PUSH IY
	2E43 E1             POP HL
	2E44 23             INC HL
	2E45 23             INC HL
	2E46 18 2E          JR DepthInsert

;; -----------------------------------------------------------------------------------------------------------
;; Object in HL. Inserts object into appropriate object list
;; based on coordinates.
;; List 3 is far away in the main room, 0 in "middle", 4 is near.
EnlistObjAux
	2E48 E5             PUSH HL
	2E49 CD FA 2E       CALL GetUVZExtents_Far2Near
	2E4C 3E 03          LD A,3
	2E4E 08             EX AF,AF'
	2E4F 3A EA 16       LD A,(MaxU)
	2E52 BA             CP D
	2E53 38 19          JR c,elonjax_1
	2E55 3A EB 16       LD A,(MaxV)
	2E58 BC             CP H
	2E59 38 13          JR c,elonjax_1
	2E5B 3E 04          LD A,4
	2E5D 08             EX AF,AF'
	2E5E 3A E8 16       LD A,(MinU)
	2E61 3D             DEC A
	2E62 BB             CP E
	2E63 30 09          JR NC,elonjax_1
	2E65 3A E9 16       LD A,(MinV)
	2E68 3D             DEC A
	2E69 BD             CP L
	2E6A 30 02          JR NC,elonjax_1
	2E6C AF             XOR A
	2E6D 08             EX AF,AF'
elonjax_1
	2E6E D9             EXX
	2E6F 08             EX AF,AF'
	2E70 CD 8A 2D       CALL SetObjList
	;; will fall in DepthInsertHd
;; -----------------------------------------------------------------------------------------------------------
;; DepthInsertHd : Does a DepthInsert on the list pointed to by ObjListF2NPtr.
;; DepthInsert : Object extents in alt registers, 'B' pointer (far to near) in HL.
;; Object to insert is on the stack.
;; Goes thru the list sorted far-to-near, and loads up HL with the
;; nearest object further away from our object.
.DepthInsertHd:
	2E73 2A 70 2D       LD HL,(ObjListF2NPtr)
DepthInsert
	2E76 22 88 2D       LD (SortObj),HL
DepIns2
	2E79 7E             LD A,(HL)
	2E7A 23             INC HL
	2E7B 66             LD H,(HL)
	2E7C 6F             LD L,A
	2E7D B4             OR H
	2E7E 28 0D          JR Z,DepIns3
	2E80 E5             PUSH HL
	2E81 CD FA 2E       CALL GetUVZExtents_Far2Near
	2E84 CD 6E 2F       CALL DepthCmp
	2E87 E1             POP HL
	2E88 30 EC          JR NC,DepthInsert
	2E8A A7             AND A
	2E8B 20 EC          JR NZ,DepIns2
DepIns3
	2E8D 2A 88 2D       LD HL,(SortObj)
	2E90 D1             POP DE
	2E91 7E             LD A,(HL)
	2E92 ED A0          LDI
	2E94 4F             LD C,A
	2E95 7E             LD A,(HL)
	2E96 12             LD (DE),A
	2E97 1B             DEC DE
	2E98 72             LD (HL),D
	2E99 2B             DEC HL
	2E9A 73             LD (HL),E
	2E9B 69             LD L,C
	2E9C 67             LD H,A
	2E9D B1             OR C
	2E9E 20 05          JR NZ,br_3ADF
	2EA0 2A 72 2D       LD HL,(ObjListN2FPtr)
	2EA3 23             INC HL
	2EA4 23             INC HL
br_3ADF
	2EA5 2B             DEC HL
	2EA6 1B             DEC DE
	2EA7 ED A8          LDD
	2EA9 7E             LD A,(HL)
	2EAA 12             LD (DE),A
	2EAB 73             LD (HL),E
	2EAC 23             INC HL
	2EAD 72             LD (HL),D
	2EAE C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Take an object out of the list, and reinserts it in the
;; appropriate list.
.Relink:
	2EAF E5             PUSH HL
	2EB0 CD B7 2E       CALL Unlink
	2EB3 E1             POP HL
	2EB4 C3 2C 2E       JP EnlistAux

;; -----------------------------------------------------------------------------------------------------------
;; Unlink the object in HL. If bit 3 of IY+4 is set, it's an
;; object made out of two subcomponents, and both must be
;; unlinked.
.Unlink:
	2EB7 FD CB 04 5E    BIT 3,(IY+O_FLAGS)
	2EBB 28 09          JR Z,UnlinkObj
	2EBD E5             PUSH HL
	2EBE CD C6 2E       CALL UnlinkObj
	2EC1 D1             POP DE
	2EC2 21 12 00       LD HL,OBJECT_LENGTH
	2EC5 19             ADD HL,DE
UnlinkObj
	2EC6 5E             LD E,(HL)
	2EC7 23             INC HL
	2EC8 56             LD D,(HL)
	2EC9 23             INC HL
	2ECA D5             PUSH DE
	2ECB 7A             LD A,D
	2ECC B3             OR E
	2ECD 20 06          JR NZ,ulnk_1
	2ECF ED 5B 70 2D    LD DE,(ObjListF2NPtr)
	2ED3 1B             DEC DE
	2ED4 1B             DEC DE
ulnk_1
	2ED5 13             INC DE
	2ED6 13             INC DE
	2ED7 7E             LD A,(HL)
	2ED8 ED A0          LDI
	2EDA 4F             LD C,A
	2EDB 7E             LD A,(HL)
	2EDC 12             LD (DE),A
	2EDD 67             LD H,A
	2EDE 69             LD L,C
	2EDF B1             OR C
	2EE0 20 05          JR NZ,br_3B1F
	2EE2 2A 72 2D       LD HL,(ObjListN2FPtr)
	2EE5 23             INC HL
	2EE6 23             INC HL
br_3B1F
	2EE7 2B             DEC HL
	2EE8 D1             POP DE
	2EE9 72             LD (HL),D
	2EEA 2B             DEC HL
	2EEB 73             LD (HL),E
	2EEC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Like "GetUVZExtents_Near2Far", but applies extra height adjustment.
;; A has the object flags.
;; Increases height by 6 if flag bit 3 is set.
.GetUVZExtents_AdjustLowZ:
	2EED CD F8 2E       CALL GetUVZExtents_Near2Far
	2EF0 E6 08          AND &08
	2EF2 C8             RET Z
	2EF3 79             LD A,C
	2EF4 D6 06          SUB 6
	2EF6 4F             LD C,A
	2EF7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; * GetUVZExtents_Near2Far : At entry, HL points on the object variables array + 0 (ie. A list pointer)
;;    (Apparently GetUVZExtents_Near2Far is only used by Heels_variables and Head_variables).
;;    Then first thing, HL will be updated to point on Object O_FLAGS
;; * GetUVZExtents_Far2Near :  At entry, HL points on the object variables array + 2 (ie. B list pointer)
;; 	  Then first thing, HL will be updated to point on Object O_FLAGS
;; So given an object (variables array) in HL, returns its U, V and Z extents.
;; Moves in a particular direction:
;;
;; Values are based on the bottom 3 bits [2:0] of O_FLAGS
;; Flag   U      V      Z
;; 000	+3 -3  +3 -3  0  -6
;; 001	+4 -4  +4 -4  0  -6
;; 010	+4 -4  +1 -1  0  -6		DE = high,low U
;; 011	+1 -1  +4 -4  0  -6		HL = high,low V
;; 100	+4  0  +4  0  0 -18		BC = high,low Z (note: the smaller the higher)
;; 101	 0 -4  +4  0  0 -18
;; 110	+4  0   0 -4  0 -18		It returns flags in A.
;; 111	 0 -4   0 -4  0 -18
GetUVZExtents_Near2Far
	2EF8 23             INC HL
	2EF9 23             INC HL
GetUVZExtents_Far2Near
	2EFA 23             INC HL
	2EFB 23             INC HL
	2EFC 7E             LD A,(HL)
	2EFD 23             INC HL
	2EFE 4F             LD C,A
	2EFF 08             EX AF,AF'
	2F00 79             LD A,C
	2F01 CB 57          BIT 2,A
	2F03 20 42          JR NZ,GUVZE_1xx
	2F05 CB 4F          BIT 1,A
	2F07 20 1A          JR NZ,GUVZE_01x
	2F09 E6 01          AND &01
	2F0B C6 03          ADD A,3
	2F0D 47             LD B,A
	2F0E 87             ADD A,A
	2F0F 4F             LD C,A
	2F10 7E             LD A,(HL)
	2F11 80             ADD A,B
	2F12 57             LD D,A
	2F13 91             SUB C
	2F14 5F             LD E,A
	2F15 23             INC HL
	2F16 7E             LD A,(HL)
	2F17 23             INC HL
	2F18 80             ADD A,B
	2F19 46             LD B,(HL)
	2F1A 67             LD H,A
	2F1B 91             SUB C
	2F1C 6F             LD L,A
GUVZE_z_zm6
	2F1D 78             LD A,B
	2F1E D6 06          SUB 6
	2F20 4F             LD C,A
	2F21 08             EX AF,AF'
	2F22 C9             RET

GUVZE_01x
	2F23 1F             RRA
	2F24 38 11          JR c,GUVZE_011
	2F26 7E             LD A,(HL)
	2F27 C6 04          ADD A,4
	2F29 57             LD D,A
	2F2A D6 08          SUB 8
	2F2C 5F             LD E,A
	2F2D 23             INC HL
	2F2E 7E             LD A,(HL)
	2F2F 23             INC HL
	2F30 46             LD B,(HL)
	2F31 67             LD H,A
	2F32 6F             LD L,A
	2F33 24             INC H
	2F34 2D             DEC L
	2F35 18 E6          JR GUVZE_z_zm6

GUVZE_011
	2F37 56             LD D,(HL)
	2F38 5A             LD E,D
	2F39 14             INC D
	2F3A 1D             DEC E
	2F3B 23             INC HL
	2F3C 7E             LD A,(HL)
	2F3D 23             INC HL
	2F3E C6 04          ADD A,4
	2F40 46             LD B,(HL)
	2F41 67             LD H,A
	2F42 D6 08          SUB 8
	2F44 6F             LD L,A
	2F45 18 D6          JR GUVZE_z_zm6

GUVZE_1xx
	2F47 7E             LD A,(HL)
	2F48 CB 19          RR C
	2F4A 38 06          JR c,GUVZE_1x1
	2F4C 5F             LD E,A
	2F4D C6 04          ADD A,4
	2F4F 57             LD D,A
	2F50 18 04          JR GUVZE_1xA

GUVZE_1x1
	2F52 57             LD D,A
	2F53 D6 04          SUB 4
	2F55 5F             LD E,A
GUVZE_1xA
	2F56 23             INC HL
	2F57 7E             LD A,(HL)
	2F58 23             INC HL
	2F59 46             LD B,(HL)
	2F5A CB 19          RR C
	2F5C 38 06          JR c,GUVZE_11A
	2F5E 6F             LD L,A
	2F5F C6 04          ADD A,4
	2F61 67             LD H,A
	2F62 18 04          JR GUVZE_z_zm18

GUVZE_11A
	2F64 67             LD H,A
	2F65 D6 04          SUB 4
	2F67 6F             LD L,A
GUVZE_z_zm18
	2F68 78             LD A,B
	2F69 D6 12          SUB &12
	2F6B 4F             LD C,A
	2F6C 08             EX AF,AF'
	2F6D C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Provides a single, long-winded function to depth-order two set of
;; UVZ extents.
;; Two set of UVZ extents (as returned from GetUVZExtents), in main
;; and EXX'd registers.
;;
;; Returns:
;;  Carry set if EXX'd registers represent a further-away object.
;;  A = 0 if there's an overlap in 2 dimensions, &FF otherwise
.DepthCmp:
	2F6E 7D             LD A,L
	2F6F D9             EXX
	2F70 BC             CP H
	2F71 7D             LD A,L
	2F72 D9             EXX
	2F73 30 03          JR NC,NoUOverlap
	2F75 BC             CP H
	2F76 38 37          JR c,UOverlap
NoUOverlap
	2F78 7B             LD A,E
	2F79 D9             EXX
	2F7A BA             CP D
	2F7B 7B             LD A,E
	2F7C D9             EXX
	2F7D 30 03          JR NC,dpth_1
	2F7F BA             CP D
	2F80 38 64          JR c,VNoUOverlap
dpth_1
	2F82 79             LD A,C
	2F83 D9             EXX
	2F84 B8             CP B
NoUVOverlap
	2F85 79             LD A,C
	2F86 D9             EXX
	2F87 30 03          JR NC,NoUVZOverlap
	2F89 B8             CP B
	2F8A 38 17          JR c,ZNoUVOverlap
NoUVZOverlap
	2F8C 7D             LD A,L
	2F8D 83             ADD A,E
	2F8E 81             ADD A,C
	2F8F 6F             LD L,A
	2F90 CE 00          ADC A,0
	2F92 95             SUB L
	2F93 67             LD H,A
	2F94 D9             EXX
	2F95 7D             LD A,L
	2F96 83             ADD A,E
	2F97 81             ADD A,C
	2F98 D9             EXX
	2F99 5F             LD E,A
	2F9A CE 00          ADC A,0
	2F9C 93             SUB E
	2F9D 57             LD D,A
	2F9E ED 52          SBC HL,DE
	2FA0 3E FF          LD A,&FF
	2FA2 C9             RET

;; -----------------------------------------------------------------------------------------------------------
ZNoUVOverlap
	2FA3 7D             LD A,L
	2FA4 83             ADD A,E
	2FA5 6F             LD L,A
	2FA6 D9             EXX
	2FA7 7D             LD A,L
	2FA8 83             ADD A,E
	2FA9 D9             EXX
	2FAA BD             CP L
	2FAB 3F             CCF
	2FAC 3E FF          LD A,&FF
	2FAE C9             RET

;; -----------------------------------------------------------------------------------------------------------
.UOverlap:
	2FAF 7B             LD A,E
	2FB0 D9             EXX
	2FB1 BA             CP D
	2FB2 7B             LD A,E
	2FB3 D9             EXX
	2FB4 30 03          JR NC,UNoVOverlap
	2FB6 BA             CP D
	2FB7 38 26          JR c,UVOverlap
UNoVOverlap
	2FB9 79             LD A,C
	2FBA D9             EXX
	2FBB B8             CP B
	2FBC 79             LD A,C
	2FBD D9             EXX
	2FBE 30 03          JR NC,UNoVZOverlap
	2FC0 B8             CP B
	2FC1 38 15          JR c,UZNoVOverlap
UNoVZOverlap
	2FC3 D9             EXX
	2FC4 83             ADD A,E
	2FC5 D9             EXX
	2FC6 6F             LD L,A
	2FC7 CE 00          ADC A,0
	2FC9 95             SUB L
	2FCA 67             LD H,A
	2FCB 79             LD A,C
	2FCC 83             ADD A,E
	2FCD 5F             LD E,A
	2FCE CE 00          ADC A,0
	2FD0 93             SUB E
	2FD1 57             LD D,A
	2FD2 ED 52          SBC HL,DE
	2FD4 3F             CCF
	2FD5 3E FF          LD A,&FF
	2FD7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
UZNoVOverlap
	2FD8 7B             LD A,E
	2FD9 D9             EXX
	2FDA BB             CP E
	2FDB D9             EXX
	2FDC 3E 00          LD A,0
	2FDE C9             RET

;; -----------------------------------------------------------------------------------------------------------
.UVOverlap:
	2FDF 79             LD A,C
	2FE0 D9             EXX
	2FE1 B9             CP C
	2FE2 D9             EXX
	2FE3 3E 00          LD A,0
	2FE5 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.VNoUOverlap:
	2FE6 79             LD A,C
	2FE7 D9             EXX
	2FE8 B8             CP B
	2FE9 79             LD A,C
	2FEA D9             EXX
	2FEB 30 03          JR NC,VNoUZOverlap
	2FED B8             CP B
	2FEE 38 14          JR c,VZNoUOverlap
VNoUZOverlap
	2FF0 D9             EXX
	2FF1 85             ADD A,L
	2FF2 D9             EXX
	2FF3 5F             LD E,A
	2FF4 CE 00          ADC A,0
	2FF6 93             SUB E
	2FF7 57             LD D,A
	2FF8 79             LD A,C
	2FF9 85             ADD A,L
	2FFA 6F             LD L,A
	2FFB CE 00          ADC A,0
	2FFD 95             SUB L
	2FFE 67             LD H,A
	2FFF ED 52          SBC HL,DE
	3001 3E FF          LD A,&FF
	3003 C9             RET

;; -----------------------------------------------------------------------------------------------------------
VZNoUOverlap
	3004 7D             LD A,L
	3005 D9             EXX
	3006 BD             CP L
	3007 D9             EXX
	3008 3E 00          LD A,0
	300A C9             RET

;; -----------------------------------------------------------------------------------------------------------
Walls_PanelBase
	300B 00 00          DEFW 	&0000
Walls_PanelFlipsPtr
	300D 00 00          DEFW 	&0000
Walls_ScreenMaxV
	300F 00             DEFB 	&00
Walls_ScreenMaxU
	3010 00             DEFB 	&00
Walls_CornerX
	3011 00             DEFB 	&00
Walls_DoorZ
	3012 00             DEFB 	&00

;; -----------------------------------------------------------------------------------------------------------
;; Set the various variables used to work out the edges of the walls.
.StoreCorner:
	3013 CD 4B 31       CALL GetCorner
	3016 79             LD A,C
	3017 D6 06          SUB 6
	3019 4F             LD C,A
	301A 80             ADD A,B
	301B 1F             RRA
	301C 32 0F 30       LD (Walls_ScreenMaxV),A
	301F 78             LD A,B
	3020 ED 44          NEG
	3022 81             ADD A,C
	3023 1F             RRA
	3024 32 10 30       LD (Walls_ScreenMaxU),A
	3027 78             LD A,B
	3028 32 11 30       LD (Walls_CornerX),A
	302B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Configure the walls.
;; Height of highest door in A.
DoConfigWalls
.ConfigWalls:
	302C 32 12 30       LD (Walls_DoorZ),A
	302F CD 4E 30       CALL VWall
	3032 3A E6 16       LD A,(Has_no_wall)
	3035 E6 04          AND &04
	3037 C0             RET NZ
	3038 06 04          LD B,4
	303A D9             EXX
	303B 3E 80          LD A,&80
	303D 32 DA 30       LD (smc_OWFlag+1),A
	3040 CD 4B 31       CALL GetCorner
	3043 11 02 00       LD DE,2
	3046 FD 7E FF       LD A,(IY-1)
	3049 FD 96 FD       SUB (IY-3)
	304C 18 1B          JR OneWall

;; -----------------------------------------------------------------------------------------------------------
;; Draw wall parallel to U axis.
.VWall:
	304E 3A E6 16       LD A,(Has_no_wall)
	3051 E6 08          AND &08
	3053 C0             RET NZ
	3054 06 08          LD B,&08
	3056 D9             EXX
	3057 AF             XOR A
	3058 32 DA 30       LD (smc_OWFlag+1),A
	305B CD 4B 31       CALL GetCorner
	305E 2D             DEC L
	305F 2D             DEC L
	3060 11 FE FF       LD DE,&FFFE
	3063 FD 7E FE       LD A,(IY-2)
	3066 FD 96 FC       SUB (IY-4)
;; Room extent in A, movement step in DE, BackgrdBuff pointer in HL,
;; X/Y in B/C. The flag for this wall in B'
.OneWall:
	3069 1F             RRA
	306A 1F             RRA
	306B 1F             RRA
	306C 1F             RRA
	306D E6 0F          AND &0F
	306F E5             PUSH HL
	3070 DD E1          POP IX
	3072 D9             EXX
	3073 4F             LD C,A
	3074 3A E7 16       LD A,(Has_Door)
	3077 A0             AND B
	3078 FE 01          CP &01
	307A 08             EX AF,AF'
	307B 3A E5 16       LD A,(WorldId)
	307E 47             LD B,A
PanelFlips_after_move	EQU		PanelFlips + MOVE_OFFSET
	307F C6 D8          ADD A,PanelFlips_after_move and WORD_LOW_BYTE ;; 56D8
	3081 6F             LD L,A
	3082 CE 56          ADC A,PanelFlips_after_move / WORD_HIGH_BYTE ;; 56D8
	3084 95             SUB L
	3085 67             LD H,A
	3086 22 0D 30       LD (Walls_PanelFlipsPtr),HL
	3089 78             LD A,B
	308A 87             ADD A,A
	308B 47             LD B,A
	308C 87             ADD A,A
	308D 87             ADD A,A
Panel_WorldData_m1		EQU		Panel_WorldData - 1							;; = &3173; minus 1 so that the FetchData2b (using DataPtr and dummy CurrData) will start at Panel_WorldData
	308E C6 72          ADD A,Panel_WorldData_m1 and WORD_LOW_BYTE ;; 3172
	3090 6F             LD L,A
	3091 CE 31          ADC A,Panel_WorldData_m1 / WORD_HIGH_BYTE ;; 3172
	3093 95             SUB L
	3094 67             LD H,A
	3095 22 D0 16       LD (DataPtr),HL
	3098 3E 80          LD A,&80
	309A 32 D2 16       LD (CurrData),A
	309D 3E 63          LD A,PanelsBaseAddr and WORD_LOW_BYTE ;; 3163
	309F 80             ADD A,B
	30A0 6F             LD L,A
	30A1 CE 31          ADC A,PanelsBaseAddr / WORD_HIGH_BYTE ;; 3163
	30A3 95             SUB L
	30A4 67             LD H,A
	30A5 7E             LD A,(HL)
	30A6 23             INC HL
	30A7 66             LD H,(HL)
	30A8 6F             LD L,A
	30A9 22 0B 30       LD (Walls_PanelBase),HL
	30AC 3E FF          LD A,&FF
	30AE 08             EX AF,AF'
	30AF 79             LD A,C
	30B0 F5             PUSH AF
	30B1 D6 04          SUB 4
	30B3 06 01          LD B,1
	30B5 28 0C          JR Z,owctd_1
	30B7 06 0F          LD B,&0F
	30B9 3C             INC A
	30BA 28 07          JR Z,owctd_1
	30BC 06 19          LD B,&19
	30BE 3C             INC A
	30BF 28 02          JR Z,owctd_1
	30C1 06 1F          LD B,&1F
owctd_1
	30C3 F1             POP AF
	30C4 38 06          JR c,owctd_2
	30C6 79             LD A,C
	30C7 87             ADD A,A
	30C8 80             ADD A,B
	30C9 47             LD B,A
	30CA 79             LD A,C
	30CB 08             EX AF,AF'
owctd_2
	30CC CD 43 31       CALL FetchData2b
	30CF 10 FB          DJNZ owctd_2
	30D1 41             LD B,C
	30D2 CB 20          SLA B
.OWPanel:
	30D4 08             EX AF,AF'
	30D5 3D             DEC A
	30D6 28 32          JR Z,OWDoor
	30D8 08             EX AF,AF'
.smc_OWFlag:
	30D9 F6 00          OR &00
	30DB DD 77 01       LD (IX+1),A
	30DE D9             EXX
	30DF 79             LD A,C
	30E0 C6 08          ADD A,&08
	30E2 DD 71 00       LD (IX+0),C
	30E5 4F             LD C,A
	30E6 DD 19          ADD IX,DE
	30E8 D9             EXX
	30E9 CD 43 31       CALL FetchData2b
.OWPanelLoop:
	30EC 10 E6          DJNZ OWPanel
	30EE D9             EXX
	30EF DD E5          PUSH IX
	30F1 E1             POP HL
	30F2 7D             LD A,L
	30F3 FE 40          CP &40
	30F5 D0             RET NC
	30F6 DD 7E 00       LD A,(IX+0)
	30F9 A7             AND A
	30FA C0             RET NZ
	30FB 3A DA 30       LD A,(smc_OWFlag+1)
	30FE F6 05          OR &05
	3100 DD 77 01       LD (IX+1),A
	3103 79             LD A,C
	3104 D6 10          SUB &10
	3106 DD 77 00       LD (IX+0),A
	3109 C9             RET

.OWDoor:
	310A D9             EXX
	310B 3A 12 30       LD A,(Walls_DoorZ)
	310E A7             AND A
	310F 79             LD A,C
	3110 28 03          JR Z,br_3D4C
	3112 C6 10          ADD A,&10
	3114 4F             LD C,A
br_3D4C
	3115 D6 10          SUB &10
	3117 DD 77 00       LD (IX+0),A
	311A 3A DA 30       LD A,(smc_OWFlag+1)
	311D F6 04          OR &04
	311F DD 77 01       LD (IX+1),A
	3122 DD 19          ADD IX,DE
	3124 DD 77 01       LD (IX+1),A
	3127 79             LD A,C
	3128 D6 08          SUB 8
	312A DD 77 00       LD (IX+0),A
	312D C6 18          ADD A,&18
	312F 4F             LD C,A
	3130 3A 12 30       LD A,(Walls_DoorZ)
	3133 A7             AND A
	3134 28 04          JR Z,br_3D71
	3136 79             LD A,C
	3137 D6 10          SUB &10
	3139 4F             LD C,A
br_3D71
	313A DD 19          ADD IX,DE
	313C 3E FF          LD A,&FF
	313E 08             EX AF,AF'
	313F D9             EXX
	3140 05             DEC B
	3141 18 A9          JR OWPanelLoop

;; -----------------------------------------------------------------------------------------------------------
;; Fetch 2 bits from data in CurrData, returned in A
;; CurrData and DataPtr updated as needed
.FetchData2b:
	3143 C5             PUSH BC
	3144 06 02          LD B,2
	3146 CD C1 1A       CALL FetchData
	3149 C1             POP BC
	314A C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Gets values associated with the far back corner of the screen.
;; IY must point just after Max_min_UV_Table. (IY=Max_min_UV_Table+4)
;; Returns X in B, Y in C, BackgrdBuff pointer in HL
.GetCorner:
	314B FD 7E FE       LD A,(IY-2)
	314E 57             LD D,A
	314F FD 5E FF       LD E,(IY-1)
	3152 93             SUB E
	3153 C6 80          ADD A,&80
	3155 47             LD B,A
	3156 1F             RRA
	3157 1F             RRA
	3158 E6 3E          AND &3E
	315A 6F             LD L,A
	315B 26 50          LD H,BackgrdBuff / WORD_HIGH_BYTE ;; &5000
	315D 3E 07          LD A,&07
	315F 93             SUB E
	3160 92             SUB D
	3161 4F             LD C,A
	3162 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This table returns a pointer on the base wall panel for the current
;; world. From that base value, the Panel_WorldData will add an offset
;; to pick the wall panel we want for each part of the wall.
.PanelsBaseAddr:															;; panel images base addr
	3163 F0 56         DEFW		img_wall_0 + MOVE_OFFSET ;; 56F0
	3165 70 5A         DEFW		img_wall_4 + MOVE_OFFSET ;; 5A70
	3167 F0 5D         DEFW		img_wall_8 + MOVE_OFFSET ;; 5DF0
	3169 90 60         DEFW		img_wall_11 + MOVE_OFFSET ;; 6090
	316B 30 63         DEFW		img_wall_14 + MOVE_OFFSET ;; 6330
	316D D0 65         DEFW		img_wall_17 + MOVE_OFFSET ;; 65D0
	316F 70 68         DEFW		img_wall_20 + MOVE_OFFSET ;; 6870
	3171 30 6A         DEFW		img_wall_22 + MOVE_OFFSET ;; 6A30

;; -----------------------------------------------------------------------------------------------------------
;; Used when Wall building.
;; These data consists of packed 2-bit values to choose the panel sprite
;; to pick for each part of the wall. It is essentially an index to add
;; to PanelsBaseAddr
.Panel_WorldData:
	3173         		DEFB	&EB, &EB, &F5, &FD, &07, &D7, &EB, &F0		;; 3,2,1,3,....
	317B         		DEFB	&E4, &E4, &E3, &4E, &34, &CC, &E4, &CC
	3183         		DEFB	&06, &18, &10, &82, &04, &10, &00, &01
	318B         		DEFB	&08, &20, &10, &42, &08, &00, &14, &00
	3193         		DEFB	&08, &20, &05, &02, &08, &14, &00, &50
	319B         		DEFB	&41, &41, &10, &41, &04, &41, &14, &0A
	31A3         		DEFB	&40, &01, &55, &54, &01, &55, &41, &54
	31AB         		DEFB	&00, &00, &00, &05, &55, &55, &00, &05

;; -----------------------------------------------------------------------------------------------------------
;; Bit mask of worlds saved (5 bits : "1" means got crown for corresponding world).
;; This will be used to count how many worlds have been saved:
;; bit4 to 0 are : Blacktooth, BookWorld, Safari, Penitentiary, Egyptus
;;.saved_World_Mask:
parts_got_Mask:
	31B3 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; Byte 0 : room ID lowbyte
;; Byte 1 : room ID highbyte
;; Byte 2 : U
;; Byte 3 : V
;; Byte 4 : Z
;; Byte 5 : Sprite (bit7 = flipped)
;; Byte 6 : function index
Special_obj_List ;; total of 41 (&29)
NB_TOOLS				EQU		4
NB_PARTS				EQU		7
NB_BONUSES				EQU		30
NB_SPECIAL_OBJ			EQU		NB_TOOLS + NB_PARTS + NB_BONUSES ;; 41
LEN_ENTRY_SPECIAL_OBJ	EQU		7

InventoryList: ;; 4
	;;						roomID l h,  U    V    Z    SPR          func
	31B4				DEFB &40, &49, &02, &07, &05, SPR_BATTHRUSTER, &00    		;; SPR_BATTHRUSTER
	31BB				DEFB &30, &54, &00, &03, &02, SPR_BATBELT, &01				;; SPR_BATBELT
	31C2				DEFB &40, &A7, &07, &02, &06, SPR_BATBOOTS, &02			;; SPR_BATBOOTS
	31C9				DEFB &40, &A9, &06, &04, &07, SPR_BATBAG, &03				;; SPR_BATBAG
PartsList: ;; 7
	31D0				DEFB &50, &6D, &00, &06, &04, SPR_BATCRAFT_RFNT, &0A		;; SPR_BATCRAFT_RFNT
	31D7				DEFB &20, &A4, &04, &00, &07, SPR_BATCRAFT_LBCK, &0B		;; SPR_BATCRAFT_LBCK
	31DE				DEFB &30, &5D, &04, &03, &07, SPR_BATCRAFT_RBLF or SPR_FLIP, &0C		;; SPR_BATCRAFT_RBLF or SPR_FLIP
	31E5				DEFB &30, &81, &07, &02, &07, SPR_BATCRAFT_RBLF, &0D		;; SPR_BATCRAFT_RBLF
	31EC				DEFB &80, &57, &01, &07, &02, SPR_BATCRAFT_FINS, &0E		;; SPR_BATCRAFT_FINS
	31F3				DEFB &30, &89, &01, &07, &07, SPR_BATCRAFT_FINS, &0F		;; SPR_BATCRAFT_FINS
	31FA				DEFB &30, &12, &00, &07, &05, SPR_BATCRAFT_CKPIT, &10		;; SPR_BATCRAFT_CKPIT
SpecialList: ;; 30
	3201				DEFB &40, &68, &03, &04, &00, SPR_BONUS, &05				;; SPR_BONUS : CNT_SPEED
	3208				DEFB &30, &73, &02, &04, &06, SPR_BONUS, &05
	320F				DEFB &30, &41, &00, &03, &00, SPR_BONUS, &05
	3216				DEFB &60, &5D, &04, &04, &07, SPR_BONUS, &05
	321D				DEFB &30, &4A, &00, &03, &00, SPR_BONUS, &05				;; ...
	3224				DEFB &30, &1F, &03, &02, &06, SPR_BONUS, &05
	322B				DEFB &30, &4D, &06, &03, &06, SPR_BONUS, &05
	3232				DEFB &30, &33, &03, &06, &07, SPR_BONUS, &05
	3239				DEFB &40, &46, &03, &01, &00, SPR_BONUS, &05  				;; SPR_BONUS : CNT_SPEED
	3240				DEFB &30, &74, &04, &03, &06, SPR_BONUS, &08 				;; SPR_BONUS : CNT_LIVES
	3247				DEFB &30, &8B, &01, &00, &07, SPR_BONUS, &08
	324E				DEFB &80, &7A, &04, &03, &06, SPR_BONUS, &08				;; ...
	3255				DEFB &40, &88, &03, &01, &00, SPR_BONUS, &08 				;; SPR_BONUS : CNT_LIVES
	325C				DEFB &30, &51, &05, &05, &03, SPR_BONUS, &06 				;; SPR_BONUS : CNT_SPRING
	3263				DEFB &30, &8B, &04, &06, &05, SPR_BONUS, &06
	326A				DEFB &20, &A4, &06, &07, &07, SPR_BONUS, &06				;; ...
	3271				DEFB &80, &6A, &00, &03, &07, SPR_BONUS, &06				;; This one may be changed to a Malus
	3278				DEFB &30, &56, &04, &04, &00, SPR_BONUS, &06 				;; SPR_BONUS : CNT_SPRING
	327F				DEFB &40, &59, &01, &06, &06, SPR_BONUS, &07 				;; SPR_BONUS : CNT_SHIELD
	3286				DEFB &30, &2F, &00, &01, &01, SPR_BONUS, &07
	328D				DEFB &30, &B3, &06, &01, &06, SPR_BONUS, &07				;; ...
	3294				DEFB &50, &5C, &00, &03, &06, SPR_BONUS, &07 				;; SPR_BONUS : CNT_SHIELD
	329B				DEFB &30, &75, &03, &02, &07, SPR_BONUS, &09 				;; SPR_BONUS : Reset boost
	32A2				DEFB &80, &8A, &07, &04, &07, SPR_BONUS, &09				;; ... This one may be changed to a Bonus
	32A9				DEFB &30, &35, &02, &00, &07, SPR_BONUS, &09 				;; SPR_BONUS : Reset boost
	32B0				DEFB &40, &48, &04, &04, &04, SPR_BATSIGNAL, &04			;; SPR_BATSIGNAL (same thing than FISH in HoH)
	32B7				DEFB &30, &33, &03, &03, &04, SPR_BATSIGNAL, &04
	32BE				DEFB &40, &A8, &05, &04, &07, SPR_BATSIGNAL, &04			;; ...
	32C5				DEFB &60, &7E, &02, &07, &05, SPR_BATSIGNAL, &04
	32CC				DEFB &30, &8A, &01, &01, &06, SPR_BATSIGNAL, &04      		;; SPR_BATSIGNAL

;; -----------------------------------------------------------------------------------------------------------
AddSpecialItems
	32D3 21 B4 31       LD HL,Special_obj_List
	32D6 11 06 00       LD DE,LEN_ENTRY_SPECIAL_OBJ - 1
	32D9 3E 29          LD A,NB_SPECIAL_OBJ

addspe_loop
	32DB F5             PUSH AF
	32DC 7E             LD A,(HL)
	32DD 23             INC HL
	32DE B9             CP C
	32DF 20 04          JR NZ,AddCollectedPartsInVictoryRoom
	32E1 7E             LD A,(HL)
	32E2 B8             CP B
	32E3 28 2D          JR Z,br_3F25

AddCollectedPartsInVictoryRoom
	32E5 19             ADD HL,DE
	32E6 F1             POP AF
	32E7 3D             DEC A
	32E8 20 F1          JR NZ,addspe_loop
	32EA 21 00 E5       LD HL,RoomID_Victory
	32ED AF             XOR A
	32EE ED 42          SBC HL,BC
	32F0 C0             RET NZ
	32F1 32 C7 16       LD (TmpObj_variables+O_FUNC),A
	32F4 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
	32F7 3A B3 31       LD A,(parts_got_Mask)
	32FA 37             SCF
	32FB 17             RLA
position_Batcraft_parts:
	32FC 21 3A 33       LD HL,BatCraftList
pbcp_loop:
	32FF 11 C2 16       LD DE,TmpObj_variables+O_U
	3302 01 04 00       LD BC,4
	3305 ED B0          LDIR
	3307 87             ADD A,A
	3308 C8             RET Z
	3309 F5             PUSH AF
	330A E5             PUSH HL
	330B DC EB 18       CALL c,AddObjOpt
	330E E1             POP HL
	330F F1             POP AF
	3310 18 ED          JR pbcp_loop

br_3F25
	3312 E5             PUSH HL
	3313 D5             PUSH DE
	3314 C5             PUSH BC
	3315 23             INC HL
	3316 46             LD B,(HL)
	3317 23             INC HL
	3318 4E             LD C,(HL)
	3319 23             INC HL
	331A 5E             LD E,(HL)
	331B 23             INC HL
	331C 7E             LD A,(HL)
	331D 32 C5 16       LD (TmpObj_variables+O_SPRITE),A
	3320 AF             XOR A
	3321 32 CC 16       LD (TmpObj_variables+O_ANIM),A
	3324 7B             LD A,E
	3325 CD 7D 1A       CALL SetTmpObjUVZ
	3328 3E 01          LD A,&01
	332A 32 C7 16       LD (TmpObj_variables+O_FUNC),A
	332D 3E 60          LD A,&60
	332F 32 C1 16       LD (TmpObj_variables+O_FLAGS),A
	3332 CD EB 18       CALL AddObjOpt
	3335 C1             POP BC
	3336 D1             POP DE
	3337 E1             POP HL
	3338 18 AB          JR AddCollectedPartsInVictoryRoom

;; -----------------------------------------------------------------------------------------------------------
;; Batcraft parts in the last room
BatCraftList
	333A				DEFB &14, &22, &B4, SPR_BATCRAFT_CKPIT		;; U V Z Sprite
	333E				DEFB &17, &2E, &B4, SPR_BATCRAFT_FINS
	3342				DEFB &11, &2E, &B4, SPR_BATCRAFT_FINS
	3346				DEFB &11, &2B, &BA, SPR_BATCRAFT_RBLF
	334A				DEFB &17, &25, &BA, SPR_BATCRAFT_RBLF or SPR_FLIP
	334E				DEFB &17, &2B, &BA, SPR_BATCRAFT_LBCK
	3352				DEFB &11, &25, &BA, SPR_BATCRAFT_RFNT

;; -----------------------------------------------------------------------------------------------------------
;; Reset the "collected" flag (bit0 of room ID) on all the specials.
;; When a special item is picked-up, the corresponding RoomID bit0 in
;; tab_Specials_collectible is set, so that a search will no longer
;; match that item.
.ResetSpecials:
	3356 21 B4 31       LD HL,Special_obj_List ;; special objects table (tools, parts, special)
	3359 11 07 00       LD DE,LEN_ENTRY_SPECIAL_OBJ ;; length 7 bytes per entry
	335C 06 29          LD B,NB_SPECIAL_OBJ ;; number of objects
rstspe_loop
	335E CB 86          RES 0,(HL) ;; reset "found" bit
	3360 19             ADD HL,DE ;; next
	3361 10 FB          DJNZ rstspe_loop ;; loop

Change_Special_Effect:
	3363 CD 9B 36       CALL Random_gen		;; get a ramdom value in L
	3366 3E 06          LD A,&06
	3368 CB 1D          RR L
	336A 38 02          JR c,Mutate_items	;; if L[0] = 1 use A=6 (bonus), else use A=9 (malus)
	336C 3E 09          LD A,&09
	;; flow in Mutate_items
;; -----------------------------------------------------------------------------------------------------------
;; This will swap (or not) 2 specific items depending on a random value
Mutable_Item1_fn		EQU		16*7 + SpecialList + 6	;; 3277 : id 16 in SpecialList, 7 bytes per entry, byte #6 (ie. last one = function)
Mutable_Item2_fn		EQU		23*7 + SpecialList + 6	;; 32A8 : id 23 in SpecialList, 7 bytes per entry, byte #6 (ie. last one = function)

Mutate_items:
	336E 32 77 32       LD (Mutable_Item1_fn),A		;; Will keep 6 (Spring Bonus) or change to 9 (Malus) depending on random value
	3371 EE 0F          XOR &0F						;; 6 <--> 9
	3373 32 A8 32       LD (Mutable_Item2_fn),A		;; Will keep 9 (Malus) or change to 6 (Spring Bonus) depending on random value
	3376 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Find_Specials
	3377 08             EX AF,AF'
	3378 21 B4 31       LD HL,Special_obj_List
	337B 11 06 00       LD DE,6
	337E 3E 29          LD A,NB_SPECIAL_OBJ ;; number of objects

findspec_loop
	3380 F5             PUSH AF
	3381 7E             LD A,(HL)
	3382 23             INC HL
	3383 B9             CP C
	3384 20 04          JR NZ,FindSpecCont
	3386 7E             LD A,(HL)
	3387 B8             CP B
	3388 28 06          JR Z,&3390

FindSpecCont
	338A 19             ADD HL,DE
	338B F1             POP AF
	338C 3D             DEC A
	338D 20 F1          JR NZ,findspec_loop
	338F C9             RET

	3390 E5             PUSH HL
	3391 08             EX AF,AF'
	3392 23             INC HL
	3393 23             INC HL
	3394 23             INC HL
	3395 23             INC HL
	3396 BE             CP (HL)
	3397 28 04          JR Z,&339D
	3399 E1             POP HL
	339A 08             EX AF,AF'
	339B 18 ED          JR FindSpecCont

	339D 23             INC HL
	339E 7E             LD A,(HL)
	339F CB 41          BIT 0,C
	33A1 C2 2B 34       JP NZ,dconti_1
	33A4 E1             POP HL
	33A5 2B             DEC HL
	33A6 CB C6          SET 0,(HL)		;; set bit0 to says "already picked up"
	33A8 E1             POP HL
	33A9 D6 04          SUB 4			;; test if 7th byte (special function) is >= 4
	33AB 30 0B          JR NC,pu_skip		;; yes: jump 33B8
PickedUp_Tool:
	33AD C6 05          ADD A,5		;; else picked up a tools; beacuse of the "sub 4" above and because wa want bitN for the (N+1)th item; need to add 5 here
	33AF 21 CF 1B       LD HL,Inventory
	33B2 CD 79 34       CALL Set_bit_nb_A_in_content_HL ;; bit0:SPR_BATTHRUSTER, 1:SPR_BATBELT, 2:SPR_BATBOOTS, bit3:SPR_BATBAG
	33B5 C3 6B 37       JP Draw_Screen_Periphery
pu_skip
	33B8 D6 01          SUB 1			;; align special fn "4, 5, ..." to "FF, 0, ..."
	33BA 38 2A          JR c,Picked_BatSignal		;; if was a BATSIGNAL (save game), jump 33E6
	33BC FE 04          CP &04			;; if special fn was 9
	33BE 28 19          JR Z,PickedUp_Malus		;; then special fn "reset boost" , jump 33D9
	33C0 D2 6E 34       JP NC,PickedUp_Part		;; if was >= &0A (batcraft parts) jump 346E
PickedUp_Bonus
	33C3 CD C3 34       CALL Get_Count_pointer		;; else was a Bonus (5 (0):speed, 6 (1):spring, 7 (2):shield, 8 (3):lives)
	33C6 CD B1 34       CALL Boost_HLcontent_base10_clamp99
	33C9 F5             PUSH AF
	33CA CD CF 35       CALL Incr_Bonus_collected		;; TOVERIFY
	33CD F1             POP AF
Show_Num
	33CE F5             PUSH AF
	33CF 79             LD A,C
	33D0 C6 C7          ADD A,Print_Sgl_Pos
	33D2 CD 15 3C       CALL Print_String
	33D5 F1             POP AF
	33D6 C3 EC 3C       JP subprint_2Digits

;; -----------------------------------------------------------------------------------------------------------
;; some of the SPR_BONUS actually are bad, as they make you forget every boost you currently have.
;; So this is it: when we get a "reset" bonus, aka Malus, clears all active bonuses
PickedUp_Malus
	33D9 AF             XOR A
	33DA 32 D2 1B       LD (Counter_shield),A
	33DD 32 D0 1B       LD (Counter_speed),A
	33E0 32 D1 1B       LD (Counter_spring),A
	33E3 C3 9C 34       JP PrintStatus

;; -----------------------------------------------------------------------------------------------------------
Picked_BatSignal:		;; save game (C, B, CNT_LIVES, parts_got_Mask)
	33E6 CD 61 34       CALL GetContinueData ;; get save game pointer
	33E9 71             LD (HL),C
	33EA ED 67          RRD
	33EC 3A CF 1B       LD A,(Inventory)
	33EF ED 6F          RLD
	33F1 23             INC HL
	33F2 70             LD (HL),B
	33F3 3A D3 1B       LD A,(Counter_lives)
	33F6 23             INC HL
	33F7 77             LD (HL),A
	33F8 3A B3 31       LD A,(parts_got_Mask)
	33FB 23             INC HL
	33FC 77             LD (HL),A
	33FD 21 D4 34       LD HL,Save_point_value
	3400 34             INC (HL)
	3401 37             SCF
	3402 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.DoContinue:
	3403 21 D4 34       LD HL,Save_point_value
	3406 35             DEC (HL)
	3407 CD 61 34       CALL GetContinueData
	340A 7E             LD A,(HL)
	340B E6 0F          AND &0F
	340D 32 CF 1B       LD (Inventory),A
	3410 7E             LD A,(HL)
	3411 E6 F0          AND &F0
	3413 4F             LD C,A
	3414 23             INC HL
	3415 46             LD B,(HL)
	3416 ED 43 0E 01    LD (current_Room_ID),BC
	341A 23             INC HL
	341B 7E             LD A,(HL)
	341C 32 D3 1B       LD (Counter_lives),A
	341F 23             INC HL
	3420 7E             LD A,(HL)
	3421 32 B3 31       LD (parts_got_Mask),A
	3424 CB C1          SET 0,C
	3426 3E 35          LD A,SPR_BATSIGNAL
	3428 C3 77 33       JP Find_Specials

dconti_1
	342B 2B             DEC HL
	342C 2B             DEC HL
	342D 7E             LD A,(HL)
	342E 2B             DEC HL
	342F 4E             LD C,(HL)
	3430 2B             DEC HL
	3431 46             LD B,(HL)
	3432 11 EC 34       LD DE,UVZ_coord_Set_UVZ
	3435 08             EX AF,AF'
	3436 21 E9 34       LD HL,UVZ_origin
	3439 CD 84 1A       CALL Set_UVZ
	343C 3E 05          LD A,5									;; room access code
	343E 32 17 38       LD (access_new_room_code),A
	3441 E1             POP HL
	3442 E1             POP HL
	;; realign what inventory and parts we have got
	3443 21 B4 31       LD HL,Special_obj_List
	3446 CD 50 34       CALL Update_Inventory_from_save
	3449 06 07          LD B,NB_PARTS							;; 7 Batcraft parts
	344B 3A B3 31       LD A,(parts_got_Mask)					;; parts
	344E 18 08          JR Update_from_save_state

Update_Inventory_from_save
	3450 06 04          LD B,NB_TOOLS							;; 4 Inventory items
	3452 3A CF 1B       LD A,(Inventory)
	3455 11 07 00       LD DE,LEN_ENTRY_SPECIAL_OBJ				;; 7 bytes per entry in the InventoryTable table
Update_from_save_state:
savedgotit_loop:
	3458 CB 1E          RR (HL)				;; This loop replaces the bit 0 of (HL) n°i (i 0 to 3) [= low byte of room ID in the crown search table]....
	345A 1F             RRA					;; ...with the bit n°i in A (saved world (complement))...
	345B CB 16          RL (HL)				;; ...to indicate if we saved the corresponding world (currbit=0, will match during search in InventoryTable table)
	345D 19             ADD HL,DE			;; ...or if we did not save it (currbit=1 will no longer match during search)
	345E 10 F8          DJNZ savedgotit_loop			;; loop
	3460 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Output : HL points on the Continue_Data data for the Save point in Save_point_value
GetContinueData
	3461 3A D4 34       LD A,(Save_point_value)	;; save point index
	3464 87             ADD A,A
	3465 87             ADD A,A					;; * 4
	3466 C6 D5          ADD A,Save_Data and WORD_LOW_BYTE
	3468 6F             LD L,A
	3469 CE 34          ADC A,Save_Data / WORD_HIGH_BYTE 				;; 34D5
	346B 95             SUB L
	346C 67             LD H,A					;; HL = 34D5 + 4*index
	346D C9             RET

;; -----------------------------------------------------------------------------------------------------------
PickedUp_Part
	346E D6 04          SUB 4
	3470 21 B3 31       LD HL,parts_got_Mask
	3473 CD 79 34       CALL Set_bit_nb_A_in_content_HL
	3476 C3 21 37       JP Refresh_HUD

;; -----------------------------------------------------------------------------------------------------------
;; This function will set a bit (bit number in A) in a byte pointed by HL, leaving the
;; other bits in (HL) untouched.
;; Input: A: the bit number to set
;;        HL: the pointer on the data byte where to set the bit.
.Set_bit_nb_A_in_content_HL:
	3479 47             LD B,A
	347A 3E 80          LD A,&80
fsbn_loop
	347C 07             RLCA
	347D 10 FD          DJNZ fsbn_loop
	347F B6             OR (HL)
	3480 77             LD (HL),A
	3481 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Counters_increments
	3482 99       		DEFB &99 ;; (BCD) ; Bonus value , 1BD0 : Counters CNT_SPEED
	3483 D0 1B			DEFW Counter_speed
	3485 01				DEFB &01
	3486 D3 1B      	DEFW Counter_lives ;; 1BD3 CNT_LIVES
	3488 10				DEFB &10
	3489 D1 1B      	DEFW Counter_spring ;; 1BD1 CNT_SPRING
	348B 99				DEFB &99
	348C D2 1B     		DEFW Counter_shield ;; 1BD2 CNT_SHIELD

;; -----------------------------------------------------------------------------------------------------------
;; Decrement one of the counters and print new value
;; Input : A can be: 0: speed, 1: spring, 2:Heels Invul, 3: Head Invul, 4:Heels Lives, 5:Head Lives, 6:Donuts
;; Output : Zero flag set if was 0; Zero flag reset is was able to decrement the counter.
Decrement_counter_and_display
	348E CD C3 34		CALL Get_Count_pointer
	348F CD B9 34		CALL Sub_1_HLcontent_base10_clamp0
	3494 C8             RET Z
	3495 7E             LD A,(HL)
	3496 CD CE 33       CALL Show_Num
	3499 F6 FF          OR &FF
	349B C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Re-prints all the Counters values on the HUD.
.PrintStatus:
	349C 3E C1          LD A,Print_HUD_Left
	349E CD 15 3C       CALL Print_String
	34A1 3E 04          LD A,NB_COUNTERS
prntstat_1
	34A3 F5             PUSH AF
	34A4 3D             DEC A
	34A5 CD C3 34       CALL Get_Count_pointer
	34A8 7E             LD A,(HL)
	34A9 CD CE 33       CALL Show_Num
	34AC F1             POP AF
	34AD 3D             DEC A
	34AE 20 F3          JR NZ,prntstat_1
	34B0 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Increment the Counter pointer by HL with the increment value in A.
;; Output: Carry reset: counter incremented;
;;         Carry set: counter incremented and clamped at 99
.Boost_HLcontent_base10_clamp99:
	34B1 86             ADD A,(HL)
	34B2 27             DAA
	34B3 77             LD (HL),A
	34B4 D0             RET NC
	34B5 3E 99          LD A,&99
	34B7 77             LD (HL),A
	34B8 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Input: HL = pointer on the counter we want to decrement (by 1)
;; Output: A=0/Zset : was already 0 (clapmed at 0);
;;         A=-1/Zreset : value in (HL) decremented by 1
.Sub_1_HLcontent_base10_clamp0:
	34B9 7E             LD A,(HL)
	34BA A7             AND A
	34BB C8             RET Z
	34BC D6 01          SUB 1
	34BE 27             DAA
	34BF 77             LD (HL),A
	34C0 F6 FF          OR &FF
	34C2 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Given a count index in A, return the corresponding counter increment
;; and Counters address in HL.
;; Input: A can be 0: speed, 1: spring, 2:Heels Invul, 3: Head Invul, 4:Heels Lives, 5:Head Lives, 6:Donuts
;; If access_new_room_code is non-zero, return 3 as the increment. (dec invulnr counters by 3 if changing room ???)
;; Output: HL selected Counter pointer
.Get_Count_pointer:
	34C3 4F             LD C,A		;; i
	34C4 87             ADD A,A		;; i*2
	34C5 81             ADD A,C		;; i*3
	34C6 C6 82          ADD A,Counters_increments and WORD_LOW_BYTE
	34C8 6F             LD L,A
	34C9 CE 34          ADC A,Counters_increments / WORD_HIGH_BYTE	;; 3482
	34CB 95             SUB L
	34CC 67             LD H,A		;; &3482 + 3*index
	34CD 7E             LD A,(HL)	;; first item in A = value
	34CE 23             INC HL
	34CF 46             LD B,(HL)
	34D0 23             INC HL
	34D1 66             LD H,(HL)	;; H=3rd
	34D2 68             LD L,B		;; L=2nd : HL = counter pointer
	34D3 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Save_point_value
	34D4 00             DEFB 0 ;; there are 5 batsignals

Save_Data
	34D5 23 E5 CD F7	DEFS 4,0
	34D9 20 EB 2A B8	DEFS 4,0
	34DD 37 CD 5B 17	DEFS 4,0
	34E1 EB 2A B6 37	DEFS 4,0
	34E5 EB CD C3 02	DEFS 4,0

;; -----------------------------------------------------------------------------------------------------------
UVZ_origin
	34E9 00 00 00       DEFS 3,0

UVZ_coord_Set_UVZ
	34EC 00 00 00       DEFS 3,0

;; -----------------------------------------------------------------------------------------------------------
reset_count_val
	34EF 02             DEFB 2 ;; length
nbtimes_died_resetval
	34F0 00             DEFB 0
nbcollected_bonus_resetval
	34F1 00             DEFB 0

nbtimes_died
	34F2 00             DEFB 0
nbcollected_bonus
	34F3 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
NB_ROOMS				EQU		&A0 ;;	151 defined but 160 forseen

RoomMask_buffer
	34F4 	            DEFS 	NB_ROOMS, &00

;; -----------------------------------------------------------------------------------------------------------
RecoreredParts
	3594 11 00 00       LD DE,&0000
	3597 18 08          JR gotParts
CountInventory
	3599 21 CF 1B       LD HL,Inventory
	359C 06 01          LD B,1 ;; 1 byte in which to check all bits set
	359E CD AD 35       CALL countBits
gotParts: ;; SavedWorldCount
	35A1 21 B3 31       LD HL,parts_got_Mask
	35A4 06 01          LD B,1 ;; 1 byte in which to check all bits set
	35A6 18 08          JR cbi1

RoomCount
	35A8 21 F4 34       LD HL,RoomMask_buffer
	35AB 06 A0          LD B,NB_ROOMS
countBits
	35AD 11 00 00       LD DE,0
cbi1
	35B0 4E             LD C,(HL)
	35B1 37             SCF
	35B2 CB 11          RL C
cbi2
	35B4 7B             LD A,E
	35B5 CE 00          ADC A,0
	35B7 27             DAA
	35B8 5F             LD E,A
	35B9 7A             LD A,D
	35BA CE 00          ADC A,0
	35BC 27             DAA
	35BD 57             LD D,A
	35BE CB 21          SLA C
	35C0 20 F2          JR NZ,cbi2
	35C2 23             INC HL
	35C3 10 EB          DJNZ cbi1
	35C5 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.Erase_visited_room:
	35C6 21 F4 34       LD HL,RoomMask_buffer
	35C9 01 A0 00       LD BC,NB_ROOMS
	35CC C3 A8 1B       JP Erase_forward_Block_RAM

;; -----------------------------------------------------------------------------------------------------------
Incr_Bonus_collected
	35CF 21 F3 34       LD HL,nbcollected_bonus
	35D2 18 03          JR Incr_DAA_value

;; -----------------------------------------------------------------------------------------------------------
Incr_died_number
	35D4 21 F2 34       LD HL,nbtimes_died
Incr_DAA_value
	35D7 7E             LD A,(HL)
	35D8 C6 01          ADD A,1
	35DA 27             DAA
	35DB 77             LD (HL),A
	35DC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Calculate the score in HL (BCD).
.GetScore: ;; ???
	35DD CD A8 35       CALL RoomCount
	35E0 3A 16 01       LD A,(win_state)
	35E3 A7             AND A
	35E4 21 00 00       LD HL,&0000
	35E7 28 03          JR Z,gs_1
	35E9 21 00 09       LD HL,&0900
gs_1
	35EC 01 10 00       LD BC,&0010
	35EF CD 08 36       CALL MulAccBCD
	35F2 E5             PUSH HL
	35F3 CD 99 35       CALL CountInventory
	35F6 E1             POP HL
	35F7 01 90 01       LD BC,&0190
	35FA CD 08 36       CALL MulAccBCD
	35FD ED 5B F3 34    LD DE,(nbcollected_bonus)
	3601 16 00          LD D,0
	3603 01 64 00       LD BC,&0064
	3606 18 00          JR MulAccBCD

;; The function MulAccBCD adds to HL (BCD), the product
;; of DE (BCD) and BC (not in BCD) :  HL = HL + (DE * BC)
.MulAccBCD:																	;; HL and DE are in BCD. BC is not.
	3608 7B             LD A,E
	3609 85             ADD A,L
	360A 27             DAA
	360B 6F             LD L,A
	360C 7C             LD A,H
	360D 8A             ADC A,D
	360E 27             DAA
	360F 67             LD H,A
	3610 0B             DEC BC
	3611 78             LD A,B
	3612 B1             OR C
	3613 20 F3          JR NZ,MulAccBCD
	3615 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Get the direction code from a LRDU user input in A (and ignore conflicting inputs).
;; In other words: LRDU -> Dir code (0 to 7 and FF)
;; Input: a 4-bit bitmask Left,Right,Down,Up (active low)
;; North is the far corner on the game screen, South the near corner
;; 		Let's take "A"=active (0), "I"=inactive (1)
;;  	(note: we must ignore conflicting inputs (eg. L+R = no move))              (Back)
;;		LRDU : return_code					LRDU : return_code			  (Back)	 Up    East (?)
;;		AAAA : FF	(no move)				IAAA : 02	(Right)				North __________> U
;;  	AAAI : 00	(Down)					IAAI : 01	(Down and Right)		 |05 04 03
;;		AAIA : 04	(Up)					IAIA : 03	(Up and Right)		Left |06 FF 02 Right (Front)
;;  	AAII : FF 	(no move)				IAII : 02	(Right)			  (Back) |07 00 01
;;		AIAA : 06	(Left)					IIAA : FF 	(no move)				 |  Down   South
;;  	AIAI : 07	(Down and Left)			IIAI : 00	(Down)          West     Y  (Front)  (Front)
;;		AIIA : 05	(Up and Left)			IIIA : 04	(Up)			(?)	    V
;;  	AIII : 06 	(Left)					IIII : FF 	(no move)
;; Output in A: the validated direction as described above
.DirCode_from_LRDU:
	3616 E6 0F          AND &0F
	3618 C6 21          ADD A,Array_direction_table and WORD_LOW_BYTE
	361A 6F             LD L,A
	361B CE 36          ADC A,Array_direction_table / WORD_HIGH_BYTE ;; 3621
	361D 95             SUB L
	361E 67             LD H,A
	361F 7E             LD A,(HL)
	3620 C9             RET

Array_direction_table
	3621 				DEFB 	&FF, &00, &04, &FF, &06, &07, &05, &06
	3629				DEFB 	&02, &01, &03, &02, &FF, &00, &04, &FF

;; -----------------------------------------------------------------------------------------------------------
;; A has a direction, returns Y delta in C, X delta in B, and
;; third entry goes in A and is the DirTable inverse mapping.
.DirDeltas:
	3631 6F             LD L,A
	3632 87             ADD A,A
	3633 85             ADD A,L
	3634 C6 41          ADD A,DirTable2 and WORD_LOW_BYTE
	3636 6F             LD L,A
	3637 CE 36          ADC A,DirTable2 / WORD_HIGH_BYTE ;; 3641
	3639 95             SUB L
	363A 67             LD H,A
	363B 4E             LD C,(HL)
	363C 23             INC HL
	363D 46             LD B,(HL)
	363E 23             INC HL
	363F 7E             LD A,(HL)
	3640 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; First byte is Y delta, second X, third is reverse lookup
;; (Only DirTable[3:0] give direction; DirTable inverse mapping?)
.DirTable2:
	3641 FF 00 0D       DEFB 	-1,  0, &0D          	;; Ydelta, Xdelta, DirTable FD ; 0:down
	3644 FF FF 09       DEFB 	-1, -1, &09          	;; Ydelta, Xdelta, DirTable F9 ; 1:south
	3647 00 FF 0B       DEFB 	 0, -1, &0B          	;; Ydelta, Xdelta, DirTable FB ; 2:right
	364A 01 FF 0A       DEFB 	 1, -1, &0A       		;; Ydelta, Xdelta, DirTable FA ; 3:east
	364D 01 00 0E       DEFB 	 1,  0, &0E       		;; Ydelta, Xdelta, DirTable FE ; 4:up
	3650 01 01 06       DEFB 	 1,  1, &06       		;; Ydelta, Xdelta, DirTable F6 ; 5:north
	3653 00 01 07       DEFB 	 0,  1, &07       		;; Ydelta, Xdelta, DirTable F7 ; 6:left
	3656 FF 01 05       DEFB 	-1,  1, &05				;; Ydelta, Xdelta, DirTable F5 ; 7:west

;; -----------------------------------------------------------------------------------------------------------
.UpdatePos:
	3659 E5      		PUSH HL
	365A CD 31 36       CALL DirDeltas
	365D 11 0B 00       LD DE,O_IMPACT
	3660 E1             POP HL
	3661 19             ADD HL,DE
	3662 AE             XOR (HL)
	3663 E6 0F          AND &0F
	3665 AE             XOR (HL)
	3666 77             LD (HL),A
	3667 11 FA FF       LD DE,&FFFA
	366A 19             ADD HL,DE
	366B 7E             LD A,(HL)
	366C 81             ADD A,C
	366D 77             LD (HL),A
	366E 23             INC HL
	366F 7E             LD A,(HL)
	3670 80             ADD A,B
	3671 77             LD (HL),A
	3672 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; HL is a pointer to an index, incremented into a byte-array
;; that follows it. Next item is returned in A. Array is 0-terminated
;; at which point we read the first item again.
.Read_Loop_byte:
	3673 34             INC (HL)
	3674 7E             LD A,(HL)
	3675 85             ADD A,L
	3676 5F             LD E,A
	3677 8C             ADC A,H
	3678 93             SUB E
	3679 57             LD D,A
	367A 1A             LD A,(DE)
	367B A7             AND A
	367C C0             RET NZ
	367D 36 01          LD (HL),&01
	367F 23             INC HL
	3680 7E             LD A,(HL)
	3681 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Word version of ReadLoop.
ReadLoopW:
unused_Read_Loop_word:														;; same than Read_Loop_byte, but for word (NOT USED!)
	3682 7E             LD A,(HL)
	3683 34             INC (HL)
	3684 87             ADD A,A
	3685 85             ADD A,L
	3686 5F             LD E,A
	3687 8C             ADC A,H
	3688 93             SUB E
	3689 57             LD D,A
	368A 13             INC DE
	368B 1A             LD A,(DE)
	368C A7             AND A
	368D 28 05          JR Z,Read_Loop_word_sub1
	368F EB             EX DE,HL
	3690 5F             LD E,A
	3691 23             INC HL
	3692 56             LD D,(HL)
	3693 C9             RET
Read_Loop_word_sub1
	3694 36 01          LD (HL),&01
	3696 23             INC HL
	3697 5E             LD E,(HL)
	3698 23             INC HL
	3699 56             LD D,(HL)
	369A C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Pseudo random generator
;; value in HL
.Random_gen:
	369B 2A CC 36       LD HL,(Rand_seed_2)
	369E 55             LD D,L
	369F 29             ADD HL,HL
	36A0 ED 6A          ADC HL,HL
	36A2 4C             LD C,H
	36A3 2A CA 36       LD HL,(Rand_seed_1)
	36A6 44             LD B,H
	36A7 CB 10          RL B
	36A9 5C             LD E,H
	36AA CB 13          RL E
	36AC CB 12          RL D
	36AE 09             ADD HL,BC
	36AF 22 CA 36       LD (Rand_seed_1),HL
	36B2 2A CC 36       LD HL,(Rand_seed_2)
	36B5 ED 5A          ADC HL,DE
	36B7 CB BC          RES 7,H
	36B9 22 CC 36       LD (Rand_seed_2),HL
	36BC FA C6 36       JP M,rg_2
	36BF 21 CA 36       LD HL,Rand_seed_1
rg_1
	36C2 34             INC (HL)
	36C3 23             INC HL
	36C4 28 FC          JR Z,rg_1
rg_2
	36C6 2A CA 36       LD HL,(Rand_seed_1)
	36C9 C9             RET

Rand_seed_1
	36CA 4A 6F          DEFW 	&6F4A
Rand_seed_2
	36CC 6E 21 			DEFW 	&216E

;; -----------------------------------------------------------------------------------------------------------
;; HL : Pointer to object to remove
.RemoveObject:
	36CE E5				PUSH HL
	36CF E5    	    	PUSH HL
	36D0 FD E5          PUSH IY
	36D2 E5             PUSH HL
	36D3 FD E1          POP IY
	36D5 CD B7 2E       CALL Unlink
	36D8 FD E1          POP IY
	36DA E1             POP HL
	36DB CD F2 36       CALL DrawObject
	36DE DD E1          POP IX
	36E0 DD CB 04 FE    SET 7,(IX+O_FLAGS)
	36E4 3A 11 01       LD A,(Do_Objects_Phase)
	36E7 DD 4E 0A       LD C,(IX+O_FUNC)
	36EA A9             XOR C
	36EB E6 80          AND &80
	36ED A9             XOR C
	36EE DD 77 0A       LD (IX+O_FUNC),A
	36F1 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; HL : Object pointer
.DrawObject:
	36F2 FD E5          PUSH IY
	36F4 23             INC HL
	36F5 23             INC HL
	36F6 CD 5B 16       CALL GetShortObjExt		;; GetObjExtents
	36F9 EB             EX DE,HL
	36FA 60             LD H,B
	36FB 69             LD L,C
	36FC CD 1C 15       CALL Draw_View
	36FF FD E1          POP IY
	3701 C9             RET

;; -----------------------------------------------------------------------------------------------------------
.InsertObject:
	3702 E5             PUSH HL
	3703 E5             PUSH HL
	3704 FD E5          PUSH IY
	3706 E5             PUSH HL
	3707 FD E1          POP IY
	3709 CD 2C 2E       CALL EnlistAux
	370C FD E1          POP IY
	370E E1             POP HL
	370F CD F2 36       CALL DrawObject
	3712 DD E1          POP IX
	3714 DD CB 04 BE    RES 7,(IX+O_FLAGS)
	3718 DD 36 0B FF    LD (IX+O_IMPACT),&FF
	371C DD 36 0C FF    LD (IX+&0C),&FF
	3720 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Refresh_HUD
	3721 CD 2D 37       CALL WaitKey
	3724 CD 29 03       CALL DrawBlacked
	3727 CD C5 20       CALL Draw_carried_objects
	372A C3 2E 1B       JP Update_Screen_Periph

;; -----------------------------------------------------------------------------------------------------------
;; Wait a key press to leave the screen shown (crown/worlds screen)
;; but leave automatically after a while (about 18-20 sec)
MAX_DELAY_IF_NO_KEY		EQU		&1400										;; Show the page for a max 18/20 seconds if no key is pressed

WaitKey
	372D CD C8 06       CALL clr_screen
	3730 3E 09          LD A,9
	3732 CD 5D 03       CALL Set_colors
	3735 CD 4D 0A       CALL Play_Batman_Theme
	3738 21 56 37       LD HL,Parts_Sprites_list ;; 3756
	373B ED 5B B3 31    LD DE,(parts_got_Mask)
	373F 16 07          LD D,NB_PARTS
	3741 CD 74 37       CALL Draw_from_list
Wait_key_pressed
	3744 21 00 14       LD HL,MAX_DELAY_IF_NO_KEY ;; delay
waitkp_loop
	3747 10 FE          DJNZ waitkp_loop
	3749 E5             PUSH HL
	374A E1             POP HL
	374B 2B             DEC HL
	374C 7C             LD A,H
	374D B5             OR L
	374E 20 F7          JR NZ,waitkp_loop
wait_loop
	3750 CD B5 0C       CALL TestHasSomthingToBePlayed
	3753 C8             RET Z
	3754 18 FA          JR wait_loop

;; -----------------------------------------------------------------------------------------------------------
Parts_Sprites_list
	3756 4C 78 B0		DEFB 	SPR_BATCRAFT_RFNT,             &78, &B0 ;; BATCRAFT Right Front part, y, x coord
	3759 4D 78 90		DEFB 	SPR_BATCRAFT_LBCK,             &78, &90 ;; BATCRAFT Back Left part
	375C CB 88 A0		DEFB 	SPR_BATCRAFT_RBLF or SPR_FLIP, &88, &A0 ;; BATCRAFT Left Front part
	375F 4B 68 A0		DEFB 	SPR_BATCRAFT_RBLF,             &68, &A0 ;; BATCRAFT Back Right part
	3762 44 58 80		DEFB 	SPR_BATCRAFT_FINS,             &58, &80 ;; BATCRAFT Left Fin part
	3765 44 68 70		DEFB 	SPR_BATCRAFT_FINS,             &68, &70 ;; BATCRAFT Right Fin part
	3768 4E 98 B8		DEFB 	SPR_BATCRAFT_CKPIT,            &98, &B8 ;; BATCRAFT Cockpit part

;; -----------------------------------------------------------------------------------------------------------
;; This draws the game HUD, called the "Periphery".
;; It also provide an entry for drawing Head and Heels (Draw_sprites_from_list).
.Draw_Screen_Periphery:
	376B 21 98 37       LD HL,Inventory_sprite_list
	376E ED 5B CF 1B    LD DE,(Inventory)
	3772 16 04          LD D,4 ;; 4 sprites
;; -----------------------------------------------------------------------------------------------------------
;; Draw a list of 3x24 sprites.
;; Inputs: D: number of sprites
;; 		   E: bitmask indicating to drawn the nth sprite or to shadow it
;; 		   HL: pointer on Sprites list/array (like Inventory_sprite_list, EmperorPageSpriteList, Planet_Sprites_list, Crown_sprites_list, etc.)
;; The sprites array data should contain for each entry:
;;         a Sprite code (1 byte), the Coordinates (2 bytes)
;; Important Note: if the bitmap is 0, a sprite is still drawn, but without the
;;                 vibrant color, to give a shadowed effect.
.Draw_from_list:
	3774 7E             LD A,(HL)
	3775 23             INC HL
	3776 4E             LD C,(HL)
	3777 23             INC HL
	3778 46             LD B,(HL)
	3779 23             INC HL
	377A E5             PUSH HL
	377B CB 1B          RR E
	377D D5             PUSH DE
	377E 30 11          JR NC,dfl_2
	3780 2E 01          LD L,1
	3782 2C             INC L
	3783 2D             DEC L
	3784 16 03          LD D,3
	3786 28 0B          JR Z,dfl_3
	3788 CD B8 37       CALL Draw_sprite_3x24
dfl_1
	378B D1             POP DE
	378C E1             POP HL
	378D 15             DEC D
	378E 20 E4          JR NZ,Draw_from_list
	3790 C9             RET

dfl_2
	3791 16 01          LD D,1
dfl_3
	3793 CD A4 37       CALL Draw_sprite_3x24_and_attribute
	3796 18 F3          JR dfl_1

;; -----------------------------------------------------------------------------------------------------------
.Inventory_sprite_list:
	3798				DEFB SPR_BATTHRUSTER, 	&B4, &D0 ;; spr y,x coords on HUD
	379B				DEFB SPR_BATBELT, 		&B4, &F0
	379E				DEFB SPR_BATBOOTS, 		&94, &F0
	37A1				DEFB SPR_BATBAG, 		&A4, &E0

;; -----------------------------------------------------------------------------------------------------------
;; Draw a 3 byte x 24 row sprite on clear background, complete with
;; attributes in D, via Draw_Sprite.
;; Input: Sprite code in A.
;;        position the sprite in BC - bottomleft corner
;;        Attribute style in D:
;;				1 = "Shadow" mode
;;				3 = "Color" mode (this is the one used if using "Draw_sprite_3x24_attr3")
;; If entering directly at Draw_sprite_3x24_and_attribute, we
;; expect the attribute in D.
.Draw_sprite_3x24_and_attribute:
	37A4 32 89 29       LD (Sprite_Code),A
	37A7 78             LD A,B
	37A8 D6 48          SUB 3*24
	37AA 47             LD B,A
	37AB D5             PUSH DE
	37AC C5             PUSH BC
	37AD CD 06 2A       CALL Load_sprite_image_address_into_DE
	37B0 21 0C 18       LD HL,&18 * WORD_HIGH_BYTE + &0C
	37B3 C1             POP BC
	37B4 F1             POP AF
	37B5 C3 D1 06       JP Draw_Sprite

;; -----------------------------------------------------------------------------------------------------------
;; Draw a 3-byte * 24 rows sprite on clear background
;; BC=bottomleft origin (without attribute)
;; A has the sprite code
.Draw_sprite_3x24:
	37B8 32 89 29       LD (Sprite_Code),A
	37BB CD D9 37       CALL Calculate_Extents_3x24
	37BE CD 0D 38       CALL Clear_Dest_buffer
	37C1 CD 06 2A       CALL Load_sprite_image_address_into_DE
	37C4 01 00 4D       LD BC,ViewBuff ;; 4D00
	37C7 D9             EXX
	37C8 06 18          LD B,24
	37CA CD 02 0D       CALL BlitMask3of3
	37CD C3 0A 04       JP Blit_screen

;; -----------------------------------------------------------------------------------------------------------
;; Clear a 3x24 area
.Clear_3x24:
	37D0 CD D9 37       CALL Calculate_Extents_3x24
	37D3 CD 0D 38       CALL Clear_Dest_buffer
	37D6 C3 0A 04       JP Blit_screen

;; -----------------------------------------------------------------------------------------------------------
;; Calculate the X and Y Extent for a 3x24 sprite
;; Input: coordinate (bottom left) : y in B, x in C
;; Output: HL = x, x+12, BC = y, y+24
.Calculate_Extents_3x24:
	37D9 61             LD H,C
	37DA 7C             LD A,H
	37DB C6 0C          ADD A,12
	37DD 6F             LD L,A
	37DE 22 C6 14       LD (ViewXExtent),HL
	37E1 78             LD A,B
	37E2 C6 18          ADD A,24
	37E4 4F             LD C,A
	37E5 ED 43 C8 14    LD (ViewYExtent),BC
	37E9 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; how is this used? if it is used? &_NOTUSED_& ???
;; Draw a 3-byte * 32 rows sprite on clear background
;; BC=bottomleft origin (without attribute)
Draw_sprite_3x32:
	37EA 32 89 29       LD (Sprite_Code),A
	37ED CD D9 37       CALL Calculate_Extents_3x24
	37F0 78             LD A,B
	37F1 C6 20          ADD A,32
	37F3 32 C8 14       LD (ViewYExtent),A
	37F6 CD 0D 38       CALL Clear_Dest_buffer
	37F9 3E 02          LD A,&02
	37FB 32 D0 14       LD (SpriteFlags),A
	37FE CD 06 2A       CALL Load_sprite_image_address_into_DE
	3801 01 00 4D       LD BC,ViewBuff ;; 4D00
	3804 D9             EXX
	3805 06 20          LD B,32
	3807 CD 02 0D       CALL BlitMask3of3
	380A C3 0A 04       JP Blit_screen

;; -----------------------------------------------------------------------------------------------------------
;; Clear the 6800 buffer
.Clear_Dest_buffer:
	380D 21 00 4E       LD HL,DestBuff
	3810 01 00 01       LD BC,&0100
	3813 C3 A8 1B       JP Erase_forward_Block_RAM

;; -----------------------------------------------------------------------------------------------------------
Movement_Facing
	3816 00             DEFB 0
access_new_room_code
	3817 00             DEFB 0
Dying
	3818 00             DEFB 0

NR_Direction
	3819 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; HL contains an object, A contains a direction
;; TODO: I guess IY holds the character object?
;; If collision: Carry set
MoveCurrent
.Move:
	381A F5             PUSH AF
	381B CD ED 2E       CALL GetUVZExtents_AdjustLowZ
	381E D9             EXX
	381F F1             POP AF
	3820 32 19 38       LD (NR_Direction),A
DoMove
	3823 CD 2A 38       CALL DoMoveAux
	3826 3A 19 38       LD A,(NR_Direction)
	3829 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Takes direction in A, and UV extents in DE', HL'.
;; From the direction code in A, lookup in MoveTbl the Move and Collide functions
;; to call (being pushed on the stack, they are called when encountering a RET)
;; Then the final RET will launch the PostMove function.
.DoMoveAux:
	382A 11 49 38       LD DE,PostMove
	382D D5             PUSH DE
	382E 4F             LD C,A
	382F 87             ADD A,A
	3830 87             ADD A,A
	3831 81             ADD A,C
	3832 C6 23          ADD A,MoveTbl and WORD_LOW_BYTE ;; 3923
	3834 6F             LD L,A
	3835 CE 39          ADC A,MoveTbl / WORD_HIGH_BYTE ;; 3923
	3837 95             SUB L
	3838 67             LD H,A
	3839 7E             LD A,(HL)
	383A 32 16 38       LD (Movement_Facing),A
	383D 23             INC HL
	383E 5E             LD E,(HL)
	383F 23             INC HL
	3840 56             LD D,(HL)
	3841 23             INC HL
	3842 7E             LD A,(HL)
	3843 23             INC HL
	3844 66             LD H,(HL)
	3845 6F             LD L,A
	3846 D5             PUSH DE
	3847 D9             EXX
	3848 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Called after the call to the function in DoMoveAux.
;; The second movement function is in HL', the direction in C'.
.PostMove:
	3849 D9             EXX
	384A C8             RET Z
	384B E5             PUSH HL
	384C DD E1          POP IX
	384E CB 51          BIT 2,C
	3850 20 15          JR NZ,PM_Alt
	3852 21 74 2D       LD HL,ObjList_Regular_Far2Near
PM_ALoop
	3855 7E             LD A,(HL)
	3856 23             INC HL
	3857 66             LD H,(HL)
	3858 6F             LD L,A
	3859 B4             OR H
	385A 28 23          JR Z,PM_ABreak
	385C E5             PUSH HL
	385D CD E0 11       CALL DoJumpIX
	3860 E1             POP HL
	3861 38 30          JR c,PM_AFound
	3863 20 F0          JR NZ,PM_ALoop
	3865 18 18          JR PM_ABreak

PM_Alt
	3867 21 7E 2D       LD HL,ObjList_Regular_Near2Far
PM_BLoop
	386A 7E             LD A,(HL)
	386B 23             INC HL
	386C 66             LD H,(HL)
	386D 6F             LD L,A
	386E B4             OR H
	386F 28 09          JR Z,PM_BBreak
	3871 E5             PUSH HL
	3872 CD E0 11       CALL DoJumpIX
	3875 E1             POP HL
	3876 38 1D          JR c,PM_BFound
	3878 20 F0          JR NZ,PM_BLoop
PM_BBreak
	387A 21 EA 1B       LD HL,Batman_variables
	387D 18 03          JR PM_Break
PM_ABreak
	387F 21 EC 1B       LD HL,Batman_variables+O_FAR2NEAR_LST
PM_Break
	3882 FD CB 09 46    BIT 0,(IY+O_SPRFLAGS)
	3886 C0             RET NZ
	3887 3A E4 1B       LD A,(Saved_Objects_List_index)
	388A A7             AND A
	388B C8             RET Z
	388C CD E0 11       CALL DoJumpIX
	388F D0             RET NC
	3890 21 EC 1B       LD HL,Batman_variables+O_FAR2NEAR_LST
PM_AFound
	3893 2B             DEC HL
	3894 2B             DEC HL
PM_BFound
	3895 E5             PUSH HL
	3896 DD E1          POP IX
	3898 3A 16 38       LD A,(Movement_Facing)
	389B DD CB 09 4E    BIT 1,(IX+O_SPRFLAGS)
	389F 28 08          JR Z,PM_Found2
	38A1 DD A6 FA       AND (IX-OBJECT_LENGTH+&0C)
	38A4 DD 77 FA       LD (IX-OBJECT_LENGTH+&0C),A
	38A7 18 06          JR PM_Found3
PM_Found2
	38A9 DD A6 0C       AND (IX+&0C)
	38AC DD 77 0C       LD (IX+&0C),A
PM_Found3
	38AF AF             XOR A
	38B0 D6 01          SUB 1
ProcContact
	38B2 F5             PUSH AF
	38B3 DD E5          PUSH IX
	38B5 FD E5          PUSH IY
	38B7 CD C0 38       CALL ContactAux
	38BA FD E1          POP IY
	38BC DD E1          POP IX
	38BE F1             POP AF
	38BF C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; IX and IY are both objects, may be characters.
;; Something is in A.
.ContactAux:
	38C0 FD CB 09 46    BIT 0,(IY+O_SPRFLAGS)
	38C4 28 15          JR Z,Contact_Player_Obj
	38C6 DD CB 04 6E    BIT 5,(IX+O_FLAGS)
	38CA C8             RET Z
	38CB DD CB 04 76    BIT 6,(IX+O_FLAGS)
	38CF 20 33          JR NZ,CollectSpecial
	38D1 A7             AND A
	38D2 28 1E          JR Z,DeadlyContact
	38D4 DD CB 09 56    BIT 2,(IX+O_SPRFLAGS)
	38D8 C0             RET NZ
	38D9 18 17          JR DeadlyContact
Contact_Player_Obj
	38DB DD CB 09 46    BIT 0,(IX+O_SPRFLAGS)
	38DF C8             RET Z
	38E0 FD CB 04 6E    BIT 5,(IY+O_FLAGS)
	38E4 C8             RET Z
	38E5 FD CB 04 76    BIT 6,(IY+O_FLAGS)
	38E9 C0             RET NZ
	38EA A7             AND A
	38EB 28 05          JR Z,DeadlyContact
	38ED FD CB 09 56    BIT 2,(IY+O_SPRFLAGS)
	38F1 C0             RET NZ
DeadlyContact
	38F2 3A D2 1B       LD A,(Counter_shield)
	38F5 A7             AND A
	38F6 C0             RET NZ
	38F7 3A 18 38       LD A,(Dying)
	38FA A7             AND A
	38FB C0             RET NZ
	38FC 3E 0C          LD A,&0C
	38FE 32 18 38       LD (Dying),A
	3901 C3 80 0A       JP DeadlyContactSong ;; sound dying

;; -----------------------------------------------------------------------------------------------------------
;; Make the special object disappear when picking it up
;; and call the associated function.
.CollectSpecial:
	3904 DD 36 0F 08    LD (IX+O_ANIM),&08 ;; ANIM_VAPE1_code
	3908 DD 36 04 80    LD (IX+O_FLAGS),&80
	390C DD 7E 0A       LD A,(IX+O_FUNC)
	390F E6 80          AND &80
	3911 F6 12          OR OBJFN_FADE
	3913 DD 77 0A       LD (IX+O_FUNC),A
	3916 ED 4B 0E 01    LD BC,(current_Room_ID)
	391A DD 7E 08       LD A,(IX+O_SPRITE)
	391D CD 77 33       CALL Find_Specials
	3920 C3 67 0A       JP GetSpecialSong

;; -----------------------------------------------------------------------------------------------------------
;; MoveTbl is indexed on a direction, as per LookupDir.
;; First element is LRDU bit mask for directions.
;; Second is the function to move in that direction.
;; Third element is the function to check collisions.
FACING_DOWN				EQU		&FD				;; bit1 = 0 (active low) in LRDU
FACING_NEAR				EQU		&F9				;; bits 1&2 = 0 (active low) in LRDU
FACING_RIGHT			EQU		&FB				;; bit2 = 0 (active low) in LRDU
FACING_EAST				EQU		&FA				;; bits 0&2 = 0 (active low) in LRDU
FACING_UP				EQU		&FE				;; bit0 = 0 (active low) in LRDU
FACING_FAR				EQU		&F6				;; bits 0&3 = 0 (active low) in LRDU
FACING_LEFT				EQU		&F7				;; bit3 = 0 (active low) in LRDU
FACING_WEST				EQU		&F5				;; bits 1&3 = 0 (active low) in LRDU

MoveTbl:
	3923 FD         	DEFB	FACING_DOWN
	3924 6A 3A 30 3A    DEFW	MoveT_Down, CollideT_Down		;; MoveT_Down 3A6A, CollideT_Down 3A30
	3928 FF             DEFB	&FF
	3929 4B 39 00 00    DEFW	MoveT_DownRight, &0000			;; MoveT_DownRight 394B
	392D FB             DEFB	FACING_RIGHT
	392E C1 3A 4E 3A    DEFW	MoveT_Right, CollideT_Right		;; MoveT_Right 3AC1, CollideT_Right 3A4E
	3932 FF             DEFB	&FF
	3933 6C 39 00 00    DEFW	MoveT_UpRight, &0000			;; MoveT_UpRight 396C
	3937 FE           	DEFB	FACING_UP
	3938 11 3B D4 39	DEFW	MoveT_Up, CollideT_Up			;; MoveT_Up 3B11, CollideT_Up 39D4
	393C FF       		DEFB	&FF
	393D 90 39 00 00    DEFW 	MoveT_UpLeft, &0000				;; MoveT_UpLeft 3990
	3941 F7             DEFB	FACING_LEFT
	3942 59 3B 15 3A    DEFW	MoveT_Left, CollideT_Left		;; MoveT_Left 3B59, CollideT_Left 3A15
	3946 FF				DEFB	&FF
	3947 B3 39 00 00    DEFW	MoveT_DownLeft, &0000			;; MoveT_DownLeft 39B3

DOOR_LOW				EQU		&24
DOOR_HIGH				EQU		&2C

;; -----------------------------------------------------------------------------------------------------------
;; The diagonal movement functions rearrange things:
;; * They remove two elements of the stack, removing the call to
;;   PostMove and the return into DoMove (which puts (Direction) into A).
;; * They call DoMove, and check the resultant carry flag. Carry means
;;   failure to move in that direction. They move one direction, then the
;;   other.
;; * If the first move succeeds, the extents are updated to represent the
;;   successful move, before the second check is attempted.
;; * Depending on what works, they generate a movement direction in A,
;;   and success/failure in the carry flag.
MoveT_DownRight
	394B D9             EXX
	394C E1             POP HL
	394D D1             POP DE
	394E AF             XOR A
	394F CD 23 38       CALL DoMove
	3952 38 0E          JR c,drght_1
	3954 D9             EXX
	3955 15             DEC D
	3956 1D             DEC E
	3957 D9             EXX
	3958 3E 02          LD A,2
	395A CD 23 38       CALL DoMove
	395D 3E 01          LD A,1
	395F D0             RET NC
	3960 AF             XOR A
	3961 C9             RET
drght_1
	3962 3E 02          LD A,2
	3964 CD 23 38       CALL DoMove
	3967 D8             RET c
	3968 A7             AND A
	3969 3E 02          LD A,2
	396B C9             RET

;; -----------------------------------------------------------------------------------------------------------
MoveT_UpRight
	396C D9             EXX
	396D E1             POP HL
	396E D1             POP DE
	396F 3E 04          LD A,4
	3971 CD 23 38       CALL DoMove
	3974 38 10          JR c,urght_1
	3976 D9             EXX
	3977 14             INC D
	3978 1C             INC E
	3979 D9             EXX
	397A 3E 02          LD A,2
	397C CD 23 38       CALL DoMove
	397F 3E 03          LD A,3
	3981 D0             RET NC
	3982 3E 04          LD A,4
	3984 A7             AND A
	3985 C9             RET
urght_1
	3986 3E 02          LD A,2
	3988 CD 23 38       CALL DoMove
	398B D8             RET c
	398C A7             AND A
	398D 3E 02          LD A,2
	398F C9             RET

;; -----------------------------------------------------------------------------------------------------------
MoveT_UpLeft
	3990 D9             EXX
	3991 E1             POP HL
	3992 D1             POP DE
	3993 3E 04          LD A,4
	3995 CD 23 38       CALL DoMove
	3998 38 10          JR c,ulft_1
	399A D9             EXX
	399B 14             INC D
	399C 1C             INC E
	399D D9             EXX
	399E 3E 06          LD A,6
	39A0 CD 23 38       CALL DoMove
	39A3 3E 05          LD A,5
	39A5 D0             RET NC
	39A6 3E 04          LD A,4
	39A8 A7             AND A
	39A9 C9             RET
ulft_1
	39AA 3E 06          LD A,6
	39AC CD 23 38       CALL DoMove
	39AF D8             RET c
	39B0 3E 06          LD A,6
	39B2 C9             RET

;; -----------------------------------------------------------------------------------------------------------
MoveT_DownLeft
	39B3 D9             EXX
	39B4 E1             POP HL
	39B5 D1             POP DE
	39B6 AF             XOR A
	39B7 CD 23 38       CALL DoMove
	39BA 38 0E          JR c,dlft_1
	39BC D9             EXX
	39BD 15             DEC D
	39BE 1D             DEC E
	39BF D9             EXX
	39C0 3E 06          LD A,6
	39C2 CD 23 38       CALL DoMove
	39C5 3E 07          LD A,7
	39C7 D0             RET NC
	39C8 AF             XOR A
	39C9 C9             RET
dlft_1
	39CA 3E 06          LD A,6
	39CC CD 23 38       CALL DoMove
	39CF D8             RET c
	39D0 A7             AND A
	39D1 3E 06          LD A,6
	39D3 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Collide functions. Object in HL, check it against the
;; character whose extents are in DE' and HL'
;;
;; Returned flags are:
;;  Carry = Collided
;;  NZ = No collision, but further collisions are possible.
;;  Z = Stop now, no further collisions possible.
CollideT_Up
	39D4 23             INC HL
	39D5 23             INC HL
	39D6 CD E4 3B       CALL GetSimpleSize
	39D9 7E             LD A,(HL)
	39DA 91             SUB C
	39DB D9             EXX
	39DC BA             CP D
	39DD D9             EXX
	39DE 38 31          JR c,CollideContinue
	39E0 20 1D          JR NZ,ChkBack
	39E2 23             INC HL
ChkVCollide
	39E3 7E             LD A,(HL)
	39E4 90             SUB B
	39E5 D9             EXX
	39E6 BC             CP H
	39E7 7D             LD A,L
	39E8 D9             EXX
	39E9 30 26          JR NC,CollideContinue
	39EB 90             SUB B
	39EC BE             CP (HL)
	39ED 30 22          JR NC,CollideContinue
ChkZCollide
	39EF 23             INC HL
	39F0 D9             EXX
	39F1 79             LD A,C
	39F2 D9             EXX
	39F3 BE             CP (HL)
	39F4 30 1B          JR NC,CollideContinue
	39F6 7E             LD A,(HL)
	39F7 93             SUB E
	39F8 D9             EXX
	39F9 B8             CP B
	39FA D9             EXX
	39FB 30 14          JR NC,CollideContinue
	39FD 37             SCF
	39FE C9             RET

;; -----------------------------------------------------------------------------------------------------------
.ChkBack:
	39FF 23             INC HL
	3A00 7E             LD A,(HL)
	3A01 90             SUB B
	3A02 D9             EXX
	3A03 BC             CP H
	3A04 D9             EXX
	3A05 38 0A          JR c,CollideContinue
	3A07 23             INC HL
	3A08 7E             LD A,(HL)
	3A09 93             SUB E
	3A0A D9             EXX
	3A0B B8             CP B
	3A0C D9             EXX
	3A0D 38 02          JR c,CollideContinue
	3A0F AF             XOR A
	3A10 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; No carry = no collision, non-zero = keep searching.
;; return -1, no Z and no Carry
.CollideContinue:
	3A11 3E FF          LD A,&FF
	3A13 A7             AND A
	3A14 C9             RET

;; -----------------------------------------------------------------------------------------------------------
CollideT_Left
	3A15 23             INC HL
	3A16 23             INC HL
	3A17 CD E4 3B       CALL GetSimpleSize
	3A1A 7E             LD A,(HL)
	3A1B 91             SUB C
	3A1C D9             EXX
	3A1D BA             CP D
	3A1E 7B             LD A,E
	3A1F D9             EXX
	3A20 30 DD          JR NC,ChkBack
	3A22 91             SUB C
	3A23 BE             CP (HL)
	3A24 30 EB          JR NC,CollideContinue
	3A26 23             INC HL
	3A27 7E             LD A,(HL)
	3A28 90             SUB B
	3A29 D9             EXX
	3A2A BC             CP H
	3A2B D9             EXX
	3A2C 28 C1          JR Z,ChkZCollide
	3A2E 18 E1          JR CollideContinue

;; -----------------------------------------------------------------------------------------------------------
CollideT_Down
	3A30 CD E4 3B       CALL GetSimpleSize
	3A33 D9             EXX
	3A34 7B             LD A,E
	3A35 D9             EXX
	3A36 91             SUB C
	3A37 BE             CP (HL)
	3A38 38 D7          JR c,CollideContinue
	3A3A 23             INC HL
	3A3B 28 A6          JR Z,ChkVCollide
ChkFront
	3A3D D9             EXX
	3A3E 7D             LD A,L
	3A3F D9             EXX
	3A40 90             SUB B
	3A41 BE             CP (HL)
	3A42 38 CD          JR c,CollideContinue
	3A44 23             INC HL
	3A45 7E             LD A,(HL)
	3A46 83             ADD A,E
	3A47 D9             EXX
	3A48 B8             CP B
	3A49 D9             EXX
	3A4A 30 C5          JR NC,CollideContinue
	3A4C AF             XOR A
	3A4D C9             RET

;; -----------------------------------------------------------------------------------------------------------
CollideT_Right
	3A4E CD E4 3B       CALL GetSimpleSize
	3A51 D9             EXX
	3A52 7B             LD A,E
	3A53 D9             EXX
	3A54 91             SUB C
	3A55 BE             CP (HL)
	3A56 23             INC HL
	3A57 30 E4          JR NC,ChkFront
	3A59 2B             DEC HL
	3A5A 7E             LD A,(HL)
	3A5B 91             SUB C
	3A5C D9             EXX
	3A5D BA             CP D
	3A5E 7D             LD A,L
	3A5F D9             EXX
	3A60 30 AF          JR NC,CollideContinue
	3A62 23             INC HL
	3A63 90             SUB B
	3A64 BE             CP (HL)
	3A65 CA EF 39       JP Z,ChkZCollide
	3A68 18 A7          JR CollideContinue

;; -----------------------------------------------------------------------------------------------------------
;; Up, Down, Left and Right
;;
;; Takes U extent in DE, V extent in HL.
;; U/D work in U direction, L/R work in V direction. ???????Check if this is right?????????TODO
;; IX points on the Max_min_UV_Table. IX-1 is the Has_Door variable, IX-2 is the Has_no_wall variable.
;; Sets NZ and Carry if you can move in a direction.
;; Sets Zero and Carry if you cannot.
;; Leaving room sets direction in NextRoom, sets Carry and Zero.
MoveT_Down
	3A6A CD DB 3B       CALL ChkCantLeave
	3A6D 28 33          JR Z,D_NoExit
	3A6F CD A1 3B       CALL UD_InOtherDoor
	3A72 3E 24          LD A,DOOR_LOW
	3A74 38 2F          JR c,D_NoExit2
	3A76 DD CB FF 46    BIT 0,(IX-1)
	3A7A 28 14          JR Z,D_NoDoor
	3A7C 3A 17 17       LD A,(DoorHeights+3)
	3A7F CD D5 3B       CALL DoorHeightCheck
	3A82 38 1E          JR c,D_NoExit
	3A84 CD C5 3B       CALL UD_InFrame
	3A87 38 20          JR c,D_NearDoor
	3A89 3A E8 16       LD A,(MinU)
	3A8C D6 04          SUB 4
	3A8E 18 09          JR D_Exit

D_NoDoor
	3A90 DD CB FE 46    BIT 0,(IX-2)
	3A94 28 0C          JR Z,D_NoExit
	3A96 3A E8 16       LD A,(MinU)
D_Exit
	3A99 BB             CP E
	3A9A C0             RET NZ
	3A9B 3E 01          LD A,1
LeaveRoom
	3A9D 32 17 38       LD (access_new_room_code),A
	3AA0 37             SCF
	3AA1 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; The case where we can't exit the room, but may hit the wall.
D_NoExit
	3AA2 3A E8 16       LD A,(MinU)
D_NoExit2
	3AA5 BB             CP E
	3AA6 C0             RET NZ
	3AA7 37             SCF
	3AA8 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Handle the near-door case: If we're not near the door frame,
;; we do the normal "not door" case. Otherwise, we do that and
;; then nudge into the door.
.D_NearDoor:
	3AA9 CD CD 3B       CALL UD_InFrameW
	3AAC 38 F4          JR c,D_NoExit
	3AAE CD A2 3A       CALL D_NoExit
UD_Nudge
	3AB1 C0             RET NZ
	3AB2 7D             LD A,L
	3AB3 FE 25          CP DOOR_LOW + 1
	3AB5 3E F7          LD A,FACING_LEFT
	3AB7 38 02          JR c,Nudge
	3AB9 3E FB          LD A,FACING_RIGHT
Nudge
	3ABB 32 E5 1B       LD (Movement),A ;; 1BE5
	3ABE AF             XOR A
	3ABF 37             SCF
	3AC0 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; IX points on the Max_min_UV_Table. IX-1 is the Has_Door variable, IX-2 is the Has_no_wall variable.
MoveT_Right
	3AC1 CD DB 3B       CALL ChkCantLeave
	3AC4 28 30          JR Z,R_NoExit
	3AC6 CD AB 3B       CALL LR_InOtherDoor
	3AC9 3E 24          LD A,DOOR_LOW
	3ACB 38 2C          JR c,R_NoExit2
	3ACD DD CB FF 4E    BIT 1,(IX-1)
	3AD1 28 14          JR Z,R_NoDoor
	3AD3 3A 16 17       LD A,(DoorHeights+2)
	3AD6 CD D5 3B       CALL DoorHeightCheck
	3AD9 38 1B          JR c,R_NoExit
	3ADB CD B5 3B       CALL LR_InFrame
	3ADE 38 1D          JR c,R_NearDoor
	3AE0 3A E9 16       LD A,(MinV)
	3AE3 D6 04          SUB 4
	3AE5 18 09          JR R_Exit

R_NoDoor
	3AE7 DD CB FE 4E    BIT 1,(IX-2)
	3AEB 28 09          JR Z,R_NoExit
	3AED 3A E9 16       LD A,(MinV)
R_Exit
	3AF0 BD             CP L
	3AF1 C0             RET NZ
	3AF2 3E 02          LD A,2
	3AF4 18 A7          JR LeaveRoom

R_NoExit
	3AF6 3A E9 16       LD A,(MinV)
;; (or some other value given in A).
.R_NoExit2:
	3AF9 BD             CP L
	3AFA C0             RET NZ
	3AFB 37             SCF
	3AFC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; The case where we can't exit the room, but may hit the wall.
.R_NearDoor:
	3AFD CD BD 3B       CALL LR_InFrameW
	3B00 38 F4          JR c,R_NoExit
	3B02 CD F6 3A       CALL R_NoExit
;; Choose a direction to move based on which side of the door
;; we're trying to get through.
.LR_Nudge:
	3B05 C0             RET NZ
	3B06 7B             LD A,E
	3B07 FE 25          CP DOOR_LOW + 1
	3B09 3E FE          LD A,FACING_UP
	3B0B 38 AE          JR c,Nudge
	3B0D 3E FD          LD A,FACING_DOWN
	3B0F 18 AA          JR Nudge

;; -----------------------------------------------------------------------------------------------------------
;; IX points on the Max_min_UV_Table. IX-1 is the Has_Door variable, IX-2 is the Has_no_wall variable.
MoveT_Up
	3B11 CD DB 3B       CALL ChkCantLeave
	3B14 28 31          JR Z,U_NoExit
	3B16 CD A1 3B       CALL UD_InOtherDoor
	3B19 3E 2C          LD A,DOOR_HIGH
	3B1B 38 2D          JR c,U_NoExit2
	3B1D DD CB FF 56    BIT 2,(IX-1)
	3B21 28 14          JR Z,U_NoDoor
	3B23 3A 15 17       LD A,(DoorHeights+1)
	3B26 CD D5 3B       CALL DoorHeightCheck
	3B29 38 1C          JR c,U_NoExit
	3B2B CD C5 3B       CALL UD_InFrame
	3B2E 38 1E          JR c,U_NearDoor
	3B30 3A EA 16       LD A,(MaxU)
	3B33 C6 04          ADD A,4
	3B35 18 09          JR U_Exit
U_NoDoor
	3B37 DD CB FE 56    BIT 2,(IX-2)
	3B3B 28 0A          JR Z,U_NoExit
	3B3D 3A EA 16       LD A,(MaxU)
U_Exit
	3B40 BA             CP D
	3B41 C0             RET NZ
	3B42 3E 03          LD A,3
	3B44 C3 9D 3A       JP LeaveRoom
U_NoExit
	3B47 3A EA 16       LD A,(MaxU)
U_NoExit2
	3B4A BA             CP D
	3B4B C0             RET NZ
	3B4C 37             SCF
	3B4D C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Handle the near-door case: If we're not near the door frame,
;; we do the normal "not door" case. Otherwise, we do that and
;; then nudge into the door.
.U_NearDoor:
	3B4E CD CD 3B       CALL UD_InFrameW
	3B51 38 F4          JR c,U_NoExit
	3B53 CD 47 3B       CALL U_NoExit
	3B56 C3 B1 3A       JP UD_Nudge

;; -----------------------------------------------------------------------------------------------------------
;; IX points on the Max_min_UV_Table. IX-1 is the Has_Door variable, IX-2 is the Has_no_wall variable.
MoveT_Left
	3B59 CD DB 3B       CALL ChkCantLeave
	3B5C 28 31          JR Z,L_NoExit
	3B5E CD AB 3B       CALL LR_InOtherDoor
	3B61 3E 2C          LD A,DOOR_HIGH
	3B63 38 2D          JR c,L_NoExit2
	3B65 DD CB FF 5E    BIT 3,(IX-1)
	3B69 28 14          JR Z,L_NoDoor
	3B6B 3A 14 17       LD A,(DoorHeights)
	3B6E CD D5 3B       CALL DoorHeightCheck
	3B71 38 1C          JR c,L_NoExit
	3B73 CD B5 3B       CALL LR_InFrame
	3B76 38 1E          JR c,L_NearDoor
	3B78 3A EB 16       LD A,(MaxV)
	3B7B C6 04          ADD A,4
	3B7D 18 09          JR L_Exit
L_NoDoor
	3B7F DD CB FE 5E    BIT 3,(IX-2)
	3B83 28 0A          JR Z,L_NoExit
	3B85 3A EB 16       LD A,(MaxV)
L_Exit
	3B88 BC             CP H
	3B89 C0             RET NZ
	3B8A 3E 04          LD A,4
	3B8C C3 9D 3A       JP LeaveRoom
L_NoExit
	3B8F 3A EB 16       LD A,(MaxV)
L_NoExit2
	3B92 BC             CP H
	3B93 C0             RET NZ
	3B94 37             SCF
	3B95 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Handle the near-door case: If we're not near the door frame,
;; we do the normal "not door" case. Otherwise, we do that and
;; then nudge into the door.
.L_NearDoor:
	3B96 CD BD 3B       CALL LR_InFrameW
	3B99 38 F4          JR c,L_NoExit
	3B9B CD 8F 3B       CALL L_NoExit
	3B9E C3 05 3B       JP LR_Nudge

;; -----------------------------------------------------------------------------------------------------------
;; If we're not inside the V extent, we must be in the doorframes to
;; the side. Set Carry if this is the case.
;; IX points on the Max_min_UV_Table.
.UD_InOtherDoor:
	3BA1 3A EB 16       LD A,(MaxV)
	3BA4 BC             CP H
	3BA5 D8             RET c
	3BA6 7D             LD A,L
	3BA7 DD BE 01       CP (IX+1)
	3BAA C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; If we're not inside the U extent, we must be in the doorframes to
;; the side. Set Carry if this is the case.
;; IX points on the Max_min_UV_Table.
.LR_InOtherDoor:
	3BAB 3A EA 16       LD A,(MaxU)
	3BAE BA             CP D
	3BAF D8             RET c
	3BB0 7B             LD A,E
	3BB1 DD BE 00       CP (IX+0)
	3BB4 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Return NC if within the interval associated with the door.
;; Specifically, returns NC if D <= DOOR_HIGH and E >= DOOR_LOW
.LR_InFrame:
	3BB5 3E 2C          LD A,DOOR_HIGH
	3BB7 BA             CP D
	3BB8 D8             RET c
	3BB9 7B             LD A,E
	3BBA FE 24          CP DOOR_LOW
	3BBC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Same, but for the whole door, not just the inner arch
.LR_InFrameW:
	3BBD 3E 30          LD A,DOOR_HIGH + 4
	3BBF BA             CP D
	3BC0 D8             RET c
	3BC1 7B             LD A,E
	3BC2 FE 20          CP DOOR_LOW - 4
	3BC4 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Return NC if within the interval associated with the door.
;; Specifically, returns NC if H <= DOOR_HIGH and L >= DOOR_LOW
.UD_InFrame:
	3BC5 3E 2C          LD A,DOOR_HIGH
	3BC7 BC             CP H
	3BC8 D8             RET c
	3BC9 7D             LD A,L
	3BCA FE 24          CP DOOR_LOW
	3BCC C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Same, but for the whole door, not just the inner arch
.UD_InFrameW:
	3BCD 3E 30          LD A,DOOR_HIGH + 4
	3BCF BC             CP H
	3BD0 D8             RET c
	3BD1 7D             LD A,L
	3BD2 FE 20          CP DOOR_LOW - 4
	3BD4 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Door height check.
;;
;; Checks to see if the character Z coord (in A) is between B
;; and either B + 3 or B + 9 (depending on if you're both head
;; and heels currently). Returns NC if the character is in the right
;; height range to go through door.
.DoorHeightCheck:
	3BD5 90             SUB B
	3BD6 D8             RET c
	3BD7 FE 03          CP 3
	3BD9 3F             CCF
	3BDA C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Points IX at the room boundaries, sets zero flag (can't leave room) if:
;; Bit 0 of IY+O_SPRFLAGS is not zero, or bottom 7 bits of IY+0A are not zero.
;;
;; Assumes IY points at the object.
;; Returns with zero flag set if it can't leave the room.
;; Also points IX at the room boundaries.
;;
;; TODO: Can't leave room if it's a not a player, or the object
;; function is zero'd.
.ChkCantLeave:
	3BDB FD CB 09 46    BIT 0,(IY+O_SPRFLAGS)
	3BDF DD 21 E8 16    LD IX,Max_min_UV_Table
	3BE3 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; HL points to the object to check + 2.
;; Assumes flags are in range 0-3.
;; Returns fixed height of 6 in E.
;; Returns V extent in B, U extent in C.
;; Leaves HL pointing at the U coordinate.
.GetSimpleSize:
	3BE4 23             INC HL
	3BE5 23             INC HL
	3BE6 7E             LD A,(HL)
	3BE7 23             INC HL
	3BE8 1E 06          LD E,6
	3BEA CB 4F          BIT 1,A
	3BEC 20 08          JR NZ,GSS_1
	3BEE 1F             RRA
	3BEF 3E 03          LD A,3
	3BF1 CE 00          ADC A,0
	3BF3 47             LD B,A
	3BF4 4F             LD C,A
	3BF5 C9             RET

GSS_1
	3BF6 1F             RRA
	3BF7 38 04          JR c,GSS_2
	3BF9 01 04 01       LD BC,&01 * WORD_HIGH_BYTE + &04
	3BFC C9             RET
GSS_2
	3BFD 01 01 04       LD BC,&04 * WORD_HIGH_BYTE + &01
	3C00 C9             RET

;; -----------------------------------------------------------------------------------------------------------
Double_size_char_buffer
	3C01 				DEFS 16, 0

current_pen_number
	3C11 02             DEFB &02

Char_cursor_pixel_position
	3C12 40 80          DEFW &80 * WORD_HIGH_BYTE + &40
text_size
	3C14 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; This will Print a string and in the meantime handles the attribute
;; codes inserted within the string data.
;; -----------------------------------------------------------------------------------------------------------
;; If the string code is >= &80, then use the string data defined in the string tables:
;;  * String ID &80 to &CB come from String_Table_Main index 0 to &4B;
;;  * String ID &E0 to &FF come from String_Table_Kb index 0 to &1F.
;; But we can also use the following codes:
;; 	 00 : Wipe Screen effect
;; 	 01 : New Line
;; 	 02 : Space to erase until the end of the line
;;   03 : Text_single_size (double height Off)
;;   04 : Text_double_size (double height On)
;;   05 xx : Color attribute
;;			xx = 00 : Rainbow (each letter changes the color)
;;				 else : color (1, 2 or 3)
;; 	 06 xx yy : Set_Text_Position col xx, row yy
;; -----------------------------------------------------------------------------------------------------------
Print_String
smc_print_string_routine
	3C15 C3 18 3C       JP Print_Char_base
Print_Char_base
	3C18 FE 80          CP &80
	3C1A 30 21          JR NC,Sub_Print_String
	3C1C D6 20          SUB &20
	3C1E 38 2E          JR c,Control_Codes
	3C20 CD E3 03       CALL Char_code_to_Addr
	3C23 21 04 08       LD HL,&08 * WORD_HIGH_BYTE + &04
	3C26 3A 14 3C       LD A,(text_size)
	3C29 A7             AND A
	3C2A C4 C8 3C       CALL NZ,Double_sized_char
	3C2D ED 4B 12 3C    LD BC,(Char_cursor_pixel_position)
	3C31 79             LD A,C
	3C32 C6 04          ADD A,&04
	3C34 32 12 3C       LD (Char_cursor_pixel_position),A
	3C37 3A 11 3C       LD A,(current_pen_number)
	3C3A C3 D1 06       JP Draw_Sprite

Sub_Print_String
	3C3D E6 7F          AND &7F
	3C3F CD BB 3C       CALL Get_String_code_A
print_char_until_delimiter
	3C42 7E             LD A,(HL)
	3C43 FE FF          CP Delimiter
	3C45 C8             RET Z
	3C46 23             INC HL
	3C47 E5             PUSH HL
	3C48 CD 15 3C       CALL Print_String
	3C4B E1             POP HL
	3C4C 18 F4          JR print_char_until_delimiter

;; -----------------------------------------------------------------------------------------------------------
;; Available string attribute codes:
;; 	 00 : Wipe Screen effect
;; 	 01 : New Line
;; 	 02 : Space to erase until the end of the line
;;   03 : Text_single_size (double height Off)
;;   04 : Text_double_size (double height On)
;;   05 xx : Color attribute
;;			xx = 00 : Rainbow (each letter changes the current color (cycle 1 to 3))
;;				 else : color (1, 2 or 3)
;; 	 06 xx yy : Set_Text_Position col xx, row yy
;; -----------------------------------------------------------------------------------------------------------
;; First part of the string attributes parsing. Handles the codes
;; 0 to 4. It'll jump to Control_Codes_more for codes 5 to 7
Control_Codes
	3C4E C6 20          ADD A,&20
	3C50 FE 05          CP &05
	3C52 30 31          JR NC,Control_Codes_more
	3C54 A7             AND A
	3C55 CA C8 06       JP Z,clr_screen
	3C58 D6 02          SUB 2
	3C5A 38 14          JR c,Control_Code_new_line
	3C5C 28 05          JR Z,Control_Code_space_erase_end
	3C5E 3D             DEC A
	3C5F 32 14 3C       LD (text_size),A
	3C62 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This is the string attribute 02: clear the line from current cursor
;; position to the end of line (erase any old character that could
;; remain when text has changed)
SPACE_CHAR				EQU		&20

Control_Code_space_erase_end:
	3C63 3A 12 3C       LD A,(Char_cursor_pixel_position)
	3C66 FE C0          CP &C0
	3C68 D0             RET NC
	3C69 3E 20          LD A,SPACE_CHAR
	3C6B CD 15 3C       CALL Print_String
	3C6E 18 F3          JR Control_Code_space_erase_end

;; -----------------------------------------------------------------------------------------------------------
;; This is the string attribute 01: "New line" (go to begining of next line)
.Control_Code_new_line:
	3C70 2A 12 3C       LD HL,(Char_cursor_pixel_position)
	3C73 3A 14 3C       LD A,(text_size)
	3C76 A7             AND A
	3C77 7C             LD A,H
	3C78 28 02          JR Z,ccnewln_single
	3C7A C6 08          ADD A,&08
ccnewln_single
	3C7C C6 08          ADD A,&08
	3C7E 67             LD H,A
	3C7F 2E 40          LD L,&40
	3C81 22 12 3C       LD (Char_cursor_pixel_position),HL
	3C84 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Next part of the string attributes parsing. Here it'll handle the
;; codes 5, 6 and 7; these are followed by parameters
.Control_Codes_more:											;; Handles Codes 5, 6 and 7
	3C85 21 91 3C       LD HL,Control_Code_attribute_5_setmode  ;; Control_Code_attribute_5_setmode
	3C88 28 03          JR Z,Update_attribute_jump_address
	3C8A 21 99 3C       LD HL,Control_Code_attribute_6_getcol
Update_attribute_jump_address
	3C8D 22 16 3C       LD (smc_print_string_routine+1),HL
	3C90 C9             RET

Control_Code_attribute_5_setmode
	3C91 32 11 3C       LD (current_pen_number),A
Control_Code_attribute_funnel
	3C94 21 18 3C       LD HL,Print_Char_base
	3C97 18 F4          JR Update_attribute_jump_address

Control_Code_attribute_6_getcol
	3C99 21 A5 3C       LD HL,Control_Code_attribute_6_getrow
	3C9C 87             ADD A,A
	3C9D 87             ADD A,A
	3C9E C6 40          ADD A,&40			;; &40=minX
	3CA0 32 12 3C       LD (Char_cursor_pixel_position),A
	3CA3 18 E8          JR Update_attribute_jump_address

Control_Code_attribute_6_getrow
	3CA5 87             ADD A,A
	3CA6 87             ADD A,A
	3CA7 87             ADD A,A
	3CA8 32 13 3C       LD (Char_cursor_pixel_position+1),A
	3CAB 18 E7          JR Control_Code_attribute_funnel

;; -----------------------------------------------------------------------------------------------------------
;; Produce a String attribute 06 (position "LOCATE")
;; Input: BC is the position;
;; Output: HL = pointer on Cursor_position_code string attribute.
.Set_Cursor_position:
	3CAD ED 43 B8 3C    LD (Cursor_position_code_pos),BC
	3CB1 21 B7 3C       LD HL,Cursor_position_code
	3CB4 C3 42 3C       JP print_char_until_delimiter

;; -----------------------------------------------------------------------------------------------------------
;; This produce a "String" attribute code 06 (position).
;; the position is set by Set_Cursor_position
.Cursor_position_code:
	3CB7 06 			DEFB	Print_SetPos ;; 06
Cursor_position_code_pos
	3CB8 00 00          DEFW	&0000
	3CBA FF             DEFB	Delimiter

;; -----------------------------------------------------------------------------------------------------------
;; This will find the pointer on the String we are looking for.
;; The "String ID AND &7F" is in A.
;;  * String ID &80 to &CB come from String_Table_Main index 0 to &4B;
;;  * String ID &E0 to &FF come from String_Table_Kb index 0 to &1F.
;; Output: HL = pointer on the wanted String data.
.Get_String_code_A:
	3CBB 47             LD B,A
	3CBC 04             INC B
	3CBD 3E FF          LD A,Delimiter
	3CBF 21 07 26       LD HL,String_Table_Main
loop_search_nth_Delimiter
	3CC2 4F             LD C,A
	3CC3 ED B1          CPIR
	3CC5 10 FB          DJNZ loop_search_nth_Delimiter
	3CC7 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This creates a zoomed char sprite from the original char
;; Output: DE will point on the double sized char buffer
Double_sized_char
	3CC8 06 08          LD B,8
	3CCA 21 01 3C       LD HL,Double_size_char_buffer
dsc_loop
	3CCD 1A             LD A,(DE)
	3CCE 77             LD (HL),A
	3CCF 23             INC HL
	3CD0 77             LD (HL),A
	3CD1 23             INC HL
	3CD2 13             INC DE
	3CD3 10 F8          DJNZ dsc_loop
	3CD5 21 04 10       LD HL,&10 * WORD_HIGH_BYTE + &04
	3CD8 11 01 3C       LD DE,Double_size_char_buffer
	3CDB C9             RET

;; -----------------------------------------------------------------------------------------------------------
DIGIT2ASCII				EQU		&30

Print_2Digits
	3CDC D5             PUSH DE
	3CDD 7A             LD A,D
	3CDE CD EC 3C       CALL subprint_2Digits
	3CE1 D1             POP DE
	3CE2 7B             LD A,E
	3CE3 F5             PUSH AF
	3CE4 1F             RRA
	3CE5 1F             RRA
	3CE6 1F             RRA
	3CE7 1F             RRA
	3CE8 E6 0F          AND &0F
	3CEA 18 0B          JR subprint_number
subprint_2Digits
	3CEC F5             PUSH AF
	3CED 1F             RRA
	3CEE 1F             RRA
	3CEF 1F             RRA
	3CF0 1F             RRA
	3CF1 E6 0F          AND &0F
	3CF3 20 02          JR NZ,subprint_number
	3CF5 3E F0          LD A,&F0
subprint_number
	3CF7 CD FD 3C       CALL subprint_num
	3CFA F1             POP AF
	3CFB E6 0F          AND &0F
subprint_num
	3CFD C6 30          ADD A,DIGIT2ASCII
	3CFF C3 15 3C       JP Print_String

;; -----------------------------------------------------------------------------------------------------------
;; Bit 0 set = have updated object extents
;; Bit 1 set = needs redraw
DrawFlags:
	3D02 00             DEFB 0
Collided
	3D03 FF             DEFB &FF

;; -----------------------------------------------------------------------------------------------------------
;; when pushed, the object will "roll" like a ball until it collides with something.
;; can be pushed by playable characters or moving enemies
ObjFnBall:
	3D04 3A 43 2B       LD A,(ObjDir)
	3D07 3C             INC A
	3D08 20 06          JR NZ,ObjFnEnd2
	3D0A FD 7E 0C       LD A,(IY+&0C)
	3D0D 3C             INC A
	3D0E 28 09          JR Z,ObjFnEnd4
ObjFnEnd2
	3D10 CD 05 40       CALL ObjAgain8
	3D13 CD 25 3D       CALL ObjFnSub
	3D16 C3 9F 3F       JP ObjDraw

;; -----------------------------------------------------------------------------------------------------------
ObjFnEnd4
	3D19 FD E5          PUSH IY
	3D1B CD D0 3D       CALL ObjFnPushable
	3D1E FD E1          POP IY
	3D20 FD 36 0B FF    LD (IY+O_IMPACT),&FF
	3D24 C9             RET

;; -----------------------------------------------------------------------------------------------------------
ObjFnSub
	3D25 3A 43 2B       LD A,(ObjDir)
	3D28 FD A6 0C       AND (IY+&0C)
	3D2B CD 16 36       CALL DirCode_from_LRDU
	3D2E FE FF          CP &FF
	3D30 C8             RET Z
	3D31 2A 41 2B       LD HL,(CurrObject)
	3D34 CD 1A 38       CALL MoveCurrent
	3D37 DA 9D 0A       JP c,&0A9D	;; Sound
	3D3A F5             PUSH AF
	3D3B CD 8E 3F       CALL UpdateObjExtents
	3D3E F1             POP AF
	3D3F 2A 41 2B       LD HL,(CurrObject)
	3D42 E5             PUSH HL
	3D43 E5             PUSH HL
	3D44 F5             PUSH AF
	3D45 CD 59 36       CALL UpdatePos
	3D48 F1             POP AF
	3D49 E1             POP HL
	3D4A CD 1A 38       CALL MoveCurrent
	3D4D E1             POP HL
	3D4E D8             RET c
	3D4F C3 59 36       JP UpdatePos

;; -----------------------------------------------------------------------------------------------------------
;; Turn off all object function is touched
ObjFnSwitch
	3D52 FD 7E 0C       LD A,(IY+&0C)
	3D55 F6 C0          OR &C0
	3D57 3C             INC A
	3D58 C8             RET Z
	3D59 CD E0 0A       CALL &0AE0
	3D5C 21 62 3D       LD HL,ObjFn_SwitchOff
	3D5F C3 69 3F       JP objfnsw_2

ObjFn_SwitchOff
	3D62 DD 36 0A 00    LD (IX+O_FUNC),0
	3D66 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Heliplat are used to lift the player upwards.
;; Peculiarity: If comming from ObjFnHeliplat10, the LD A,&10 is done.
;; But if coming from ObjFnHeliplat60 (for instance), the "DEFB 01" at 3D6C and 3D6F
;; will take the "3E xx" as data in a dummy instruction "LD BC,&xx3E" to cancel the "LD A,&xx"
;; hence letting the "LD A,&60" take over.
ObjFnHeliplat90:
	3D67 3E 90          LD		A,&90
	3D69 01				DEFB 	&01						;;LD BC,...
ObjFnHeliplat60:
	3D6A 3E 60       	LD		A,&60
	3D6C 01				DEFB 	&01						;;LD BC,...
ObjFnHeliplat30:
	3D6D 3E 30       	LD		A,&30
	3D6F 01				DEFB 	&01						;;LD BC,...
ObjFnHeliplat10:
	3D70 3E 10       	LD		A,&10
	3D72 FD 77 11       LD		(IY+O_SPECIAL),A
	3D75 FD 36 0A 11    LD		(IY+O_FUNC),&11			;; OBJFN_HELIPLAT3
	3D79 C9 			RET

;; -----------------------------------------------------------------------------------------------------------
;; This makes an elevated object - on which the player stands - gently
;; colapse to the ground (in other words it loses altitude as pressure is
;; applied on it). It does not go back up when pressure is released.
;; The cushions around the room &ABD (all but the ones under the doors)
;; use this feature.
ObjFnColapse:
	3D7A FD CB 0C 6E    BIT 5,(IY+&0C)
	3D7E C0             RET NZ
	3D7F CD 0B 40       CALL ObjAgain9
	3D82 C3 9F 3F       JP ObjDraw

;; -----------------------------------------------------------------------------------------------------------
;; Rollers in the various LRDU directions (bits are active low)
ObjFnRollers1
	3D85 3E FE          LD A,FACING_UP
	3D87 18 0A          JR writeRollerDir
ObjFnRollers2:
	3D89 3E FD          LD A,FACING_DOWN
	3D8B 18 06          JR writeRollerDir
ObjFnRollers3
	3D8D 3E F7          LD A,FACING_LEFT
	3D8F 18 02          JR writeRollerDir
ObjFnRollers4
	3D91 3E FB          LD A,FACING_RIGHT
writeRollerDir
	3D93 FD 77 0B       LD (IY+O_IMPACT),A
	3D96 FD 36 0A 00    LD (IY+O_FUNC),0
	3D9A C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Make an object dissolve upon contact or presence in the room:
;; * ObjFnDissolve: : dissolving grating (eg. room 476).
;;      Note: The &01 at &4D45 will cancel the "LD A,&CF" at 4D66.
;; * ObjFnDissolve2: : dissolving cushion, pad, book and rollers
;;		Note: 2 cushions in the room 526 are set as Dissolve2, but when
;;	 	the switch in the room is turned off, it freezes the Beacon, but
;;	 	also makes the cushions no longer dissolvable.
;; * TestAndFade : dissolving hushpuppies if Head is in the room (no contact needed here, just entering)
ObjFnDissolve:
	3D9B 3E C0          LD		A,&C0
	3D9D 01				DEFB 	&01				;;LD BC,...
ObjFnDissolve2:																;; dissolving cushion, pad, book and rollers
	;; if comming from ObjFnDissolve, the "LD A,&CF" does not exist
	;; as it became a dummy "LD BC,&CF3E"
	3D9E 3E CF       	LD		A,&CF										;; ObjFnDissolve2: A=&CF, ObjFnDissolve: A=&C0
	3DA0 FD B6 0C       OR		(IY+&0C)
	3DA3 3C             INC		A
TestAndFade
	3DA4 C8             RET Z
Fadeify
	3DA5 CD 99 0A       CALL &0A99	;; noise?
	3DA8 FD 7E 0A       LD A,(IY+O_FUNC)
	3DAB E6 80          AND &80
	3DAD F6 12          OR &12 ;; OBJFN_FADE
	3DAF FD 77 0A       LD (IY+O_FUNC),A
	3DB2 FD 36 0F 08    LD (IY+O_ANIM),&08 ;; ANIM_VAPE1_code
ObjFnFade
	3DB6 FD 36 04 80    LD (IY+O_FLAGS),&80
	3DBA CD 8E 3F       CALL UpdateObjExtents
	3DBD CD BA 3F       CALL AnimateMe
	3DC0 FD 7E 0F       LD A,(IY+O_ANIM)
	3DC3 E6 07          AND &07
	3DC5 28 03          JR Z,ObjFnDisappear
	3DC7 C3 9F 3F       JP ObjDraw
ObjFnDisappear
	3DCA 2A 41 2B       LD HL,(CurrObject)
	3DCD C3 CE 36       JP RemoveObject

;; -----------------------------------------------------------------------------------------------------------
;; ObjFnPushable: Pushing item
.ObjFnPushable:		;; can be pushed
	3DD0 CD 05 40       CALL ObjAgain8
	3DD3 3E FF          LD A,&FF
	3DD5 CD C7 3F       CALL TestCollisions
	3DD8 C3 9F 3F       JP ObjDraw

;; -----------------------------------------------------------------------------------------------------------
;; The Different ways an object can move.
;; Will define in HL the addr of the function to be used to move the enemy.
ObjFnLinePatrol:	;; used by the Anvil : Moves formard until an obstacle, then turns around (180° turn), and starts advancing again.
	3DDB 21 10 3F       LD HL,HalfTurn
	3DDE C3 14 3E       JP ObjFnUpdatePatroller
ObjFnSquarePatrol:	;; used by sandwich room &240 : it moves forward clockwise until an obstacle, then makes a 90° turn clockwise and starts advancing again.
	3DE1 21 FE 3E       LD HL,Clockwise
	3DE4 C3 14 3E       JP ObjFnUpdatePatroller

ObjFnVisor1: 		;; ObjFnLinePatrol but ???? TODO ; eg. robot in room &786, it moves back and forth on one lane.
	3DE7 21 10 3F       LD HL,HalfTurn
	3DEA 18 2E          JR TurnOnCollision
ObjFnMonocat:		;; ObjFnSquarePatrol but ???? TODO
	3DEC 21 FE 3E       LD HL,Clockwise
	3DEF 18 29          JR TurnOnCollision
ObjFnAnticlock:		;; ObjFnMonocat but in the other direction
	3DF1 21 05 3F       LD HL,Anticlockwise
	3DF4 18 24          JR TurnOnCollision
ObjFnBee			;; used by bee (eg. room 476), move to any random direction
	3DF6 21 F1 3E       LD HL,DirAny
	3DF9 18 1F          JR TurnOnCollision

ObjFnRandK:			;; Random direction change (any like a Chess King)
	3DFB 21 F1 3E       LD HL,DirAny
	3DFE 18 4E          JR TurnRandomly
ObjFnRandR:			;; Random direction change, axially (like a Chess Rook).
	3E00 21 D5 3E       LD HL,DirAxes
	3E03 18 49          JR TurnRandomly
ObjFnRandB:			;; Random direction change, in diagonal (like a Chess Bishop). ; eg. Beacon room 516
	3E05 21 E2 3E       LD HL,DirDiag
	3E08 18 44          JR TurnRandomly

ObjFnHomeIn:		;; Home in, like a robomouse (attracted by the player if close enough, but can also go in lines, like a rook).
	3E0A 21 17 3F       LD HL,HomeIn
	3E0D 18 2B          JR GoThatWay
ObjFnTowards:		;; goes directly towards
	3E0F 21 2F 3F       LD HL,MoveTowards
	3E12 18 26          JR GoThatWay

;; -----------------------------------------------------------------------------------------------------------
;; Update the Patroller objects (anim)
ObjFnUpdatePatroller:
	3E14 E5             PUSH HL
	3E15 CD B7 3F       CALL FaceAndAnimate
	3E18 18 0B          JR ObjFnWalk

;; -----------------------------------------------------------------------------------------------------------
.TurnOnCollision:
	3E1A E5             PUSH HL
TurnOnColl2
	3E1B CD B7 3F       CALL FaceAndAnimate
	3E1E CD 05 40       CALL ObjAgain8
	3E21 3E FF          LD A,&FF
	3E23 38 03          JR c,ObjFnBounce
ObjFnWalk
	3E25 CD 51 40       CALL DirCode_to_LRDU
ObjFnBounce
	3E28 CD C7 3F       CALL TestCollisions
	3E2B E1             POP HL
	3E2C 3A 03 3D       LD A,(Collided)
	3E2F 3C             INC A
	3E30 CA 9F 3F       JP Z,ObjDraw
	3E33 CD 39 3E       CALL DoTurn
	3E36 C3 9F 3F       JP ObjDraw

;; =-----------------------------------------------------------------------------------------------------------
;; Call the turning function provided earlier in HL.
DoTurn
	3E39 E9             JP (HL)

;; -----------------------------------------------------------------------------------------------------------
;; get the chosen direction, and go that way!
.GoThatWay:
	3E3A E5             PUSH HL
	3E3B CD 05 40       CALL ObjAgain8
	3E3E E1             POP HL
	3E3F CD 39 3E       CALL DoTurn
	3E42 CD B7 3F       CALL FaceAndAnimate
	3E45 CD 51 40       CALL DirCode_to_LRDU
	3E48 CD C7 3F       CALL TestCollisions
	3E4B C3 9F 3F       JP ObjDraw

;; -----------------------------------------------------------------------------------------------------------
;; Turn randomly. If not turning randomly, act like TurnOnCollision.
.TurnRandomly:
	3E4E E5             PUSH HL
	3E4F CD 9B 36       CALL Random_gen
	3E52 7D             LD A,L
	3E53 E6 0F          AND &0F
	3E55 20 C4          JR NZ,TurnOnColl2
	3E57 CD 05 40       CALL ObjAgain8
	3E5A E1             POP HL
	3E5B CD 39 3E       CALL DoTurn
MoveObjAndDraw_bis
	3E5E CD B7 3F       CALL FaceAndAnimate
	3E61 CD 51 40       CALL DirCode_to_LRDU
	3E64 CD C7 3F       CALL TestCollisions
	3E67 C3 9F 3F       JP ObjDraw

;; -----------------------------------------------------------------------------------------------------------
;; This handles the Heliplat ascend and descend
.HeliPadDir:
	3E6A 00             DEFB 0

;; -----------------------------------------------------------------------------------------------------------
;; Running heliplat
ObjFnHeliplat3:
	3E6B CD B7 3F       CALL FaceAndAnimate
	3E6E FD 7E 11       LD A,(IY+O_SPECIAL)
	3E71 47             LD B,A
	3E72 CB 5F          BIT 3,A
	3E74 28 3A          JR Z,ofn_hp3_descent
	3E76 1F             RRA
	3E77 1F             RRA
	3E78 E6 3C          AND &3C
	3E7A 4F             LD C,A
	3E7B 0F             RRCA
	3E7C 81             ADD A,C
	3E7D ED 44          NEG
	3E7F C6 C0          ADD A,GROUND_LEVEL
	3E81 FD BE 07       CP (IY+O_Z)
	3E84 30 16          JR NC,ofn_hp3_limit
	3E86 2A 41 2B       LD HL,(CurrObject)
	3E89 CD 81 22       CALL ChkSatOn
	3E8C FD CB 0B A6    RES 4,(IY+O_IMPACT)
	3E90 30 01          JR NC,hp3_do_ascent
	3E92 C8             RET Z
hp3_do_ascent
	3E93 CD 8E 3F       CALL UpdateObjExtents
	3E96 FD 35 07       DEC (IY+O_Z)
	3E99 C3 9F 3F       JP ObjDraw
ofn_hp3_limit
	3E9C 21 6A 3E       LD HL,HeliPadDir
	3E9F 7E             LD A,(HL)
	3EA0 A7             AND A
	3EA1 20 02          JR NZ,br_4EC1
	3EA3 36 02          LD (HL),2
br_4EC1
	3EA5 35             DEC (HL)
	3EA6 C0             RET NZ
	3EA7 78             LD A,B
	3EA8 EE 08          XOR &08
	3EAA FD 77 11       LD (IY+O_SPECIAL),A
	3EAD E6 08          AND &08
	3EAF C9             RET
ofn_hp3_descent
	3EB0 E6 07          AND &07
	3EB2 87             ADD A,A
	3EB3 4F             LD C,A
	3EB4 87             ADD A,A
	3EB5 81             ADD A,C
	3EB6 ED 44          NEG
	3EB8 C6 BF          ADD A,GROUND_LEVEL - 1
	3EBA FD BE 07       CP (IY+O_Z)
	3EBD 38 DD          JR c,ofn_hp3_limit
	3EBF 2A 41 2B       LD HL,(CurrObject)
	3EC2 CD 4C 21       CALL DoContact2
	3EC5 30 01          JR NC,hp3_do_descent
	3EC7 C8             RET Z
hp3_do_descent
	3EC8 CD 8E 3F       CALL UpdateObjExtents
	3ECB FD CB 0B AE    RES 5,(IY+O_IMPACT)
	3ECF FD 34 07       INC (IY+O_Z)
	3ED2 C3 9F 3F       JP ObjDraw

;; =-----------------------------------------------------------------------------------------------------------
;; Go to a NEW axial direction (different to the current one).
;; Axial direction is the Up-Down (V axis) and Left-Right (U axis) directions.
DirAxes:
	3ED5 CD 9B 36       CALL Random_gen
	3ED8 7D             LD A,L
	3ED9 E6 06          AND &06
	3EDB FD BE 10       CP (IY+O_DIRECTION)
	3EDE 28 F5          JR Z,DirAxes
	3EE0 18 2A          JR MoveDir

;; =-----------------------------------------------------------------------------------------------------------
;; Go to a NEW diagonal direction (different to the current one).
;; Diagonal are the axis North-South and West-East
.DirDiag:
	3EE2 CD 9B 36       CALL Random_gen
	3EE5 7D             LD A,L
	3EE6 E6 06          AND &06
	3EE8 F6 01          OR &01
	3EEA FD BE 10       CP (IY+O_DIRECTION)
	3EED 28 F3          JR Z,DirDiag
	3EEF 18 1B          JR MoveDir

;; =-----------------------------------------------------------------------------------------------------------
;; Turn to any NEW direction.
.DirAny:
	3EF1 CD 9B 36       CALL Random_gen
	3EF4 7D             LD A,L
	3EF5 E6 07          AND &07
	3EF7 FD BE 10       CP (IY+O_DIRECTION)
	3EFA 28 F5          JR Z,DirAny
	3EFC 18 0E          JR MoveDir

;; =-----------------------------------------------------------------------------------------------------------
;; Turn 90 degrees clockwise.
;; 		0 (Down), 1 (South), 2 (Right), 3 (East),  4 (Up),    5 (North), 6 (Left), 7 (West)
;; -2 : 6 (Left), 7 (West),  0 (Down),  1 (South), 2 (Right), 3 (East),  4 (Up),   5 (North)
.Clockwise:
	3EFE FD 7E 10       LD A,(IY+O_DIRECTION)
	3F01 D6 02          SUB 2
	3F03 18 05          JR Mod8MoveDir

;; =-----------------------------------------------------------------------------------------------------------
;; Turn 90 degrees anticlockwise.
;; 		0 (Down),  1 (South), 2 (Right), 3 (East),  4 (Up),   5 (North), 6 (Left), 7 (West)
;; +2 : 2 (Right), 3 (East),  4 (Up), 	 5 (North), 6 (Left), 7 (West),  0 (Down), 1 (South)
.Anticlockwise:
	3F05 FD 7E 10       LD A,(IY+O_DIRECTION)
	3F08 C6 02          ADD A,2
Mod8MoveDir
	3F0A E6 07          AND &07
MoveDir
	3F0C FD 77 10       LD (IY+O_DIRECTION),A
	3F0F C9             RET

;; =-----------------------------------------------------------------------------------------------------------
;; Turn 180 degree (half-turn).
;; 		0 (Down), 1 (South), 2 (Right), 3 (East), 4 (Up), 	5 (North), 6 (Left),  7 (West)
;; +4 : 4 (Up),   5 (North), 6 (Left),  7 (West), 0 (Down), 1 (South), 2 (Right), 3 (East)
HalfTurn
	3F10 FD 7E 10       LD A,(IY+O_DIRECTION)
	3F13 C6 04          ADD A,4
	3F15 18 F3          JR Mod8MoveDir

;; -----------------------------------------------------------------------------------------------------------
;; Find the direction number associated with zeroing the
;; smaller distance, and then working towards the other axis.
.HomeIn:
	3F17 CD 34 3F       CALL CharDistAndDir
	3F1A 7A             LD A,D
	3F1B BB             CP E
	3F1C 06 F3          LD B,&F3
	3F1E 38 03          JR c,hmin_1
	3F20 7B             LD A,E
	3F21 06 FC          LD B,&FC
hmin_1
	3F23 A7             AND A
	3F24 78             LD A,B
	3F25 20 02          JR NZ,hmin_2
	3F27 EE 0F          XOR &0F
hmin_2
	3F29 B1             OR C
MoveToDirMask
	3F2A CD 16 36       CALL DirCode_from_LRDU
	3F2D 18 DD          JR MoveDir

;; -----------------------------------------------------------------------------------------------------------
;; Compare Enemy and character and get the enemy direction LRDU vector in A
;; "Distance" in DE (deltaV,deltaU)
;; MoveTowards : Move enemy towards target
.MoveTowards:
	3F2F CD 34 3F       CALL CharDistAndDir
	3F32 18 F6          JR MoveToDirMask

;; -----------------------------------------------------------------------------------------------------------
;; From an object/Enemy in IY (rather the ref to its variables/object instance)
;; get the direction vector to the current character.
;; Return: A is of type LRDU (Left/Right/Down/Up) active low
;; Return: DE has the distance (deltaV in D, deltaU in E)
CharDistAndDir
	3F34 2A EF 1B       LD HL,(Batman_variables+O_U)
	3F37 0E FF          LD C,&FF
	3F39 7C             LD A,H
	3F3A FD 96 06       SUB (IY+O_V)
	3F3D 57             LD D,A
	3F3E 28 0D          JR Z,VCoordMatch
	3F40 30 04          JR NC,VCoordDiff
	3F42 ED 44          NEG
	3F44 57             LD D,A
	3F45 37             SCF
VCoordDiff
	3F46 F5             PUSH AF
	3F47 CB 11          RL C
	3F49 F1             POP AF
	3F4A 3F             CCF
	3F4B CB 11          RL C
VCoordMatch
	3F4D FD 7E 05       LD A,(IY+O_U)
	3F50 95             SUB L
	3F51 5F             LD E,A
	3F52 28 0F          JR Z,UCoordMatch
	3F54 30 04          JR NC,UCoordDiff
	3F56 ED 44          NEG
	3F58 5F             LD E,A
	3F59 37             SCF
UCoordDiff
	3F5A F5             PUSH AF
	3F5B CB 11          RL C
	3F5D F1             POP AF
	3F5E 3F             CCF
	3F5F CB 11          RL C
	3F61 79             LD A,C
	3F62 C9             RET

UCoordMatch
	3F63 CB 01          RLC C
	3F65 CB 01          RLC C
	3F67 79             LD A,C
	3F68 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; Mark as previously touched...
objfnsw_2
	3F69 22 7B 3F       LD (smc_objfnsw+1),HL
	3F6C 21 7E 2D       LD HL,ObjList_Regular_Near2Far
objfnsw_loop
	3F6F 7E             LD A,(HL)
	3F70 23             INC HL
	3F71 66             LD H,(HL)
	3F72 6F             LD L,A
	3F73 B4             OR H				;; get next object pointer
	3F74 28 0A          JR Z,objfnsw_3		;; if NULL (end) then jump objfnsw_3
	3F76 E5             PUSH HL
	3F77 E5             PUSH HL
	3F78 DD E1          POP IX
smc_objfnsw
	3F7A CD 00 00       CALL &0000			;; call SwitchOff
	3F7D E1             POP HL
	3F7E 18 EF          JR objfnsw_loop

;; End part, mark for redraw and toggle the switch state flag.
objfnsw_3:
	3F80 CD BE 3F       CALL MarkToDraw
	3F83 FD 7E 04       LD A,(IY+O_FLAGS)
	3F86 EE 10          XOR &10
	3F88 FD 77 04       LD (IY+O_FLAGS),A
	3F8B C3 9F 3F       JP ObjDraw

;; -----------------------------------------------------------------------------------------------------------
;; If bit 0 of DrawFlags is not set, set it and update the object extents.
UpdateObjExtents
	3F8E 3A 02 3D       LD A,(DrawFlags)
	3F91 CB 47          BIT 0,A
	3F93 C0             RET NZ
	3F94 F6 01          OR &01
	3F96 32 02 3D       LD (DrawFlags),A
	3F99 2A 41 2B       LD HL,(CurrObject)
	3F9C C3 D1 14       JP StoreObjExtents

;; -----------------------------------------------------------------------------------------------------------
;; Clear &0C and if any of DrawFlags are set, draw the thing.
ObjDraw
	3F9F FD 36 0C FF    LD (IY+&0C),&FF
	3FA3 3A 02 3D       LD A,(DrawFlags)
	3FA6 A7             AND A
	3FA7 C8             RET Z
	3FA8 CD 8E 3F       CALL UpdateObjExtents
	3FAB 2A 41 2B       LD HL,(CurrObject)
	3FAE CD AF 2E       CALL Relink
	3FB1 2A 41 2B       LD HL,(CurrObject)
	3FB4 C3 19 15       JP UnionAndDraw

;; -----------------------------------------------------------------------------------------------------------
;; From how the object in IY moves, update the anim sprite (forward/backward)
;; and animate + MarkToDraw if it's an animation.
.FaceAndAnimate:
	3FB7 CD 65 40       CALL SetFacingDirEx
AnimateMe
	3FBA CD A5 2B       CALL AnimateObj
	3FBD D0             RET NC
MarkToDraw
	3FBE 3A 02 3D       LD A,(DrawFlags)
	3FC1 F6 02          OR &02
	3FC3 32 02 3D       LD (DrawFlags),A
	3FC6 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; collision check?
;; input A = ??; IY = ??
TestCollisions:
	3FC7 FD A6 0C       AND (IY+&0C)
	3FCA FE FF          CP &FF
	3FCC 32 03 3D       LD (Collided),A
	3FCF C8             RET Z
	3FD0 CD 16 36       CALL DirCode_from_LRDU
	3FD3 FE FF          CP &FF
	3FD5 32 03 3D       LD (Collided),A
	3FD8 C8             RET Z
	3FD9 F5             PUSH AF
	3FDA 32 03 3D       LD (Collided),A
	3FDD 2A 41 2B       LD HL,(CurrObject)
	3FE0 CD 1A 38       CALL MoveCurrent
	3FE3 C1             POP BC
	3FE4 3F             CCF
	3FE5 D2 FD 3F       JP NC,br_501F
	3FE8 F5             PUSH AF
	3FE9 B8             CP B
	3FEA 20 05          JR NZ,br_5016
	3FEC 3E FF          LD A,&FF
	3FEE 32 03 3D       LD (Collided),A
br_5016
	3FF1 CD 8E 3F       CALL UpdateObjExtents
	3FF4 F1             POP AF
	3FF5 2A 41 2B       LD HL,(CurrObject)
	3FF8 CD 59 36       CALL UpdatePos
	3FFB 37             SCF
	3FFC C9             RET

br_501F
	3FFD 3A 43 2B       LD A,(ObjDir)
	4000 3C             INC A
	4001 C8             RET Z
	4002 C3 9D 0A       JP &0A9D ;; sound SetSound ??

;; -----------------------------------------------------------------------------------------------------------
;; check something and return Carry or NotCarry.
;; also deals with object falling or going up.
;;
;; For exemple, this will turn ObjFnVisor1 into ObjFnLinePatrol (or ObjFnMonocat into ObjFnSquarePatrol)
;; when the result is NC (will reconvert DirCode_to_LRDU).
;; Else the ObjFnVisor1 (or ObjFnMonocat) won't get the new dirCode.
ObjAgain8:
	4005 FD CB 0C 66    BIT 4,(IY+&0C)
	4009 28 30          JR Z,ObjAgain10
ObjAgain9
	400B 2A 41 2B       LD HL,(CurrObject)
	400E CD 4C 21       CALL DoContact2
	4011 30 16          JR NC,OA9c
	4013 3F             CCF
	4014 20 07          JR NZ,OA9b
	4016 FD CB 0C 66    BIT 4,(IY+&0C)
	401A C0             RET NZ
	401B 18 1E          JR ObjAgain10

OA9b
	401D FD CB 0C 66    BIT 4,(IY+&0C)
	4021 37             SCF
	4022 20 05          JR NZ,OA9c
	4024 FD CB 0B A6    RES 4,(IY+O_IMPACT)
	4028 C9             RET
OA9c
	4029 F5             PUSH AF
	402A CD 8E 3F       CALL UpdateObjExtents
	402D FD CB 0B AE    RES 5,(IY+O_IMPACT)
	4031 FD 34 07       INC (IY+O_Z)
	4034 F1             POP AF
	4035 D8             RET c
	4036 FD 34 07       INC (IY+O_Z)
	4039 37             SCF
	403A C9             RET

ObjAgain10
	403B 2A 41 2B       LD HL,(CurrObject)
	403E CD 81 22       CALL ChkSatOn
	4041 FD CB 0B A6    RES 4,(IY+O_IMPACT)
	4045 30 02          JR NC,br_5072
	4047 3F             CCF
	4048 C8             RET Z
br_5072
	4049 CD 8E 3F       CALL UpdateObjExtents
	404C FD 35 07       DEC (IY+O_Z)
	404F 37             SCF
	4050 C9             RET

;; =-----------------------------------------------------------------------------------------------------------
;; From direction code in O_DIRECTION (0 to 7 or FF), returns               Up   east
;; the coresponding LRDU (Left/Right/Down/Up) value (active low)   north __________> U              Up
;;             															|05 04 03         	     F6 FE FA
;;                                                                 Left |06 FF 02 Right     Left F7    FB Right
;; This is pretty much the reverse of DirCode_from_LRDU					|07 00 01         	     F5 FD F9
;; Note : "Up/Left" is the far corner, "DownRight"                 west |  Down  south     	       Down
;;        the near corner                                             V Y
DirCode_to_LRDU:
	4051 FD 7E 10       LD A,(IY+O_DIRECTION)
	4054 C6 5D          ADD A,DirCode2LRDU_table and WORD_LOW_BYTE ;; 405D
	4056 6F             LD L,A
	4057 CE 40          ADC A,DirCode2LRDU_table / WORD_HIGH_BYTE ;; 405D
	4059 95             SUB L
	405A 67             LD H,A
	405B 7E             LD A,(HL)
	405C C9             RET

DirCode2LRDU_table
	405D FD F9 FB FA	DEFB 	FACING_DOWN, FACING_NEAR, FACING_RIGHT, FACING_EAST
	4061 FE F6 F7 F5 	DEFB	FACING_UP, FACING_FAR, FACING_LEFT, FACING_WEST

;; -----------------------------------------------------------------------------------------------------------
;; This will keep or flip the anim sprite to the forward/backward sprite
;; as required by how the object moves.
;; IY points on the object's object (variables)
.SetFacingDirEx:
	4065 FD 4E 10       LD C,(IY+O_DIRECTION)
	4068 CB 49          BIT 1,C
	406A FD CB 04 A6    RES 4,(IY+O_FLAGS)
	406E 20 04          JR NZ,SetFacingDir
	4070 FD CB 04 E6    SET 4,(IY+O_FLAGS)
SetFacingDir
	4074 FD 7E 0F       LD A,(IY+O_ANIM)
	4077 A7             AND A
	4078 C8             RET Z
	4079 CB 51          BIT 2,C
	407B 4F             LD C,A
	407C 28 07          JR Z,sfd_tw
	407E CB 59          BIT 3,C
	4080 C0             RET NZ
	4081 3E 08          LD A,&08 ;; ANIM_VAPE1_code
	4083 18 04          JR sfd_1
sfd_tw
	4085 CB 59          BIT 3,C
	4087 C8             RET Z
	4088 AF             XOR A
sfd_1
	4089 A9             XOR C
	408A E6 0F          AND &0F
	408C A9             XOR C
	408D FD 77 0F       LD (IY+O_ANIM),A
	4090 C9             RET

;; -----------------------------------------------------------------------------------------------------------
;; This is most likely a left over copy of some code from 4011
;;	4091 30 16          JR NC,40A9
;;	4093 3F             CCF
;;	4094 20 07          JR NZ,409D
;;	4096 FD CB 0C 66    BIT 4,(IY+0C)
;;	409A C0             RET NZ
;;	409B 18 1E          JR 40BB
;;
;;	409D FD CB 0C 66    BIT 4,(IY+0C)
;;	40A1 37             SCF
;;	40A2 20 05          JR NZ,40A9
;;	40A4 FD CB 0B A6    RES 4,(IY+0B)
;;	40A8 C9             RET
;;
;;	40A9 F5             PUSH AF
;;	40AA CD 8E 3F       CALL 3F8E
;;	40AD FD CB 0B AE    RES 5,(IY+0B)
;;	40B1 FD 34 07       INC (IY+07)
;;	40B4 F1             POP AF
;;	40B5 D8             RET c
;;	40B6 FD 34 07       INC (IY+07)
;;	40B9 37             SCF
;;	40BA C9             RET
;;
;;	40BB 2A 41 2B       LD HL,(2B41)
;;	40BE CD 81 22       CALL 2281
;;	40C1 FD CB 0B A6    RES 4,(IY+0B)
;;	40C5 30 02          JR NC,40C9
;;	40C7 3F             CCF
;;	40C8 C8             RET Z
;;	40C9 CD 8E 3F       CALL 3F8E
;;	40CC FD 35 07       DEC (IY+07)
;;	40CF 37             SCF
;;	40D0 C9             RET
;;
;;	40D1 FD 7E 10       LD A,(IY+10)
;;	40D4 C6 5D          ADD A,5D
;;	40D6 6F             LD L,A
;;	40D7 CE 40          ADC A,40
;;	40D9 95             SUB L
;;	40DA 67             LD H,A
;;	40DB 7E             LD A,(HL)
;;	40DC C9             RET
;;
;;	40DD FD F9          LD SP,IY
;;	40DF FB             EI
;;	40E0 FA FE F6       JP M,F6FE
;;	40E3 F7             RST 30
;;	40E4 F5             PUSH AF
;;	40E5 FD 4E 10       LD C,(IY+10)
;;	40E8 CB 49          BIT 1,C
;;	40EA FD CB 04 A6    RES 4,(IY+04)
;;	40EE 20 04          JR NZ,40F4
;;	40F0 FD CB 04 E6    SET 4,(IY+04)
;;	40F4 FD 7E 0F       LD A,(IY+0F)
;;	40F7 A7             AND A
;;	40F8 C8             RET Z
;;	40F9 CB 51          BIT 2,C
;;	40FB 4F             LD C,A
;;	40FC 28 07          JR Z,4105
;;	40FE CB 59          BIT 3,C
;;	4100 F8             RET M
;;	4101 08             EX AF,AF'
;;	4102 8F             ADC A,A
;;	4103 F0             RET P
;;	4104 08             EX AF,AF'
;;	4105 8F             ADC A,A
;;	4106 E0             RET PE
;;	4107 00             NOP
;;	4108 07             RLCA
;;	4109 E0             RET PE
;;	410A 00             NOP
;;	410B 01 F0 00       LD BC,00F0
;;	410E 06 F8          LD B,F8
;;	4110 E0             RET PE
;;	4111 06 FC          LD B,FC
;;	4113 C0             RET NZ
;;	4114 2D             DEC L
;;	4115 FF             RST 38
;;	4116 00             NOP
;;	4117 73             LD (HL),E
;;	4118 FF             RST 38
;;	4119 00             NOP
;;	411A 3F             CCF
;;	411B FE 00          CP 00
;;	411D 7F             LD A,A
;;	411E FC 00 FF       CALL M,FF00
;;	4121 FE 03          CP 03
;;	4123 FF             RST 38
;;	4124 FF             RST 38
;;	4125 01 FF FF       LD BC,FFFF
;;	4128 80             ADD A,B
;;	4129 FF             RST 38
;;	412A FF             RST 38
;;	412B C0             RET NZ
;;	412C 7F             LD A,A
;;	412D FF             RST 38
;;	412E E0             RET PE
;;	412F 3F             CCF
;;	4130 FF             RST 38
;;	4131 F0             RET P
;;	4132 3F             CCF
;;	4133 FF             RST 38
;;	4134 F9             LD SP,HL
;;	4135 7F             LD A,A
;;	4136 00             NOP
;;	4137 00             NOP
;;	4138 00             NOP
;;	4139 01 CF 80       LD BC,80CF
;;	413C 03             INC BC
;;	413D F3             DI
;;	413E E0             RET PE
;;	413F 07             RLCA
;;	4140 F9             LD SP,HL
;;	4141 F0             RET P
;;	4142 0F             RRCA
;;	4143 EE F8          XOR F8
;;	4145 0F             RRCA
;;	4146 E1             POP HL
;;	4147 A0             AND B
;;	4148 0F             RRCA
;;	4149 F7             RST 30
;;	414A B0             OR B
;;	414B 07             RLCA
;;	414C 9B             SBC A,E
;;	414D B0             OR B
;;	414E 0B             DEC BC
;;	414F C7             RST 00
;;	4150 78             LD A,B
;;	4151 0D             DEC C
;;	4152 BF             CP A
;;	4153 C0             RET NZ
;;	4154 07             RLCA
;;	4155 BF             CP A
;;	4156 60             LD H,B
;;	4157 05             DEC B
;;	4158 5F             LD E,A
;;	4159 00             NOP
;;	415A 01 7B C0       LD BC,C07B
;;	415D 03             INC BC
;;	415E FF             RST 38
;;	415F E0             RET PE
;;	4160 03             INC BC
;;	4161 9F             SBC A,A
;;	4162 A0             AND B
;;	4163 03             INC BC
;;	4164 BF             CP A
;;	4165 A0             AND B
;;	4166 07             RLCA
;;	4167 BF             CP A
;;	4168 A0             AND B
;;	4169 17             RLA
;;	416A 7F             LD A,A
;;	416B A0             AND B
;;	416C 36 FF          LD (HL),FF
;;	416E 40             LD B,B
;;	416F 19             ADD HL,DE
;;	4170 FF             RST 38
;;	4171 80             ADD A,B
;;	4172 03             INC BC
;;	4173 FB             EI
;;	4174 80             ADD A,B
;;	4175 03             INC BC
;;	4176 E7             RST 20
;;	4177 03             INC BC
;;	4178 10 6B          DJNZ 41E5
;;	417A 80             ADD A,B
;;	417B 41             LD B,C
;;	417C FF             RST 38
;;	417D FF             RST 38
;;	417E FF             RST 38
;;	417F FF             RST 38

		org &4180

;; -----------------------------------------------------------------------------------------------------------
;; These macros (MacroID &C0 to &DB) are used when processing the Room_list1 and 2 data to
;; build a room. They define groups of objects that can be imported as a block.
;; See algo in Room_list1 below.
Room_Macro_data
	4180 DEFB &08, &C0, &0C, &D2, &79, &34, &97, &F1, &FE
	4189 DEFB &0E, &C1, &1C, &C2, &73, &3A, &9D, &CF, &27, &B3, &E9, &FC, &FF, &8F, &F0
	4198 DEFB &08, &C2, &21, &D2, &79, &34, &97, &F1, &FE
	41A1 DEFB &0D, &C3, &14, &C6, &75, &3B, &9E, &4F, &67, &D3, &F9, &FF, &1F, &E0
	41AF DEFB &0B, &C4, &16, &D3, &79, &7C, &9E, &3F, &17, &FC, &7F, &80
	41BB DEFB &19, &C5, &0A, &C7, &6D, &B6, &38, &9D, &F8, &25, &C6, &F3, &BA, &DE, &EF, &B7, &D7, &D3, &F1, &F9, &72, &79, &5D, &1F, &F8, &FF
	41D5 DEFB &0C, &C6, &C5, &03, &92, &E9, &3B, &9E, &3E, &DF, &FC, &7F, &80
	41E2 DEFB &08, &C7, &05, &D2, &79, &34, &97, &F1, &FE
	41EB DEFB &14, &C8, &C7, &A7, &E3, &DD, &F1, &D1, &F8, &EB, &73, &7E, &6C, &2A, &7E, &0D, &BE, &B3, &29, &F8, &FF
	4200 DEFB &09, &C9, &0F, &C2, &75, &3C, &9F, &4F, &F8, &FF
	420A DEFB &0E, &CA, &C0, &0B, &E0, &0D, &C8, &FC, &7E, &3D, &2F, &97, &7E, &3F, &C0
	4219 DEFB &0B, &CB, &CA, &3F, &E5, &6F, &F3, &05, &F9, &80, &FF, &F0
	4225 DEFB &09, &CC, &23, &D2, &79, &33, &9D, &CD, &F8, &FF
	422F DEFB &12, &CD, &1E, &C6, &F5, &7A, &DE, &EF, &6F, &D7, &D3, &EA, &F9, &72, &BA, &5D, &1F, &F8, &FF
	4242 DEFB &00

;; -----------------------------------------------------------------------------------------------------------
;; Left over garbage more likely
;;	4243 06 00          LD B,00
;;	4245 7E             LD A,(HL)
;;	4246 FE 1A          CP 1A
;;	4248 28 07          JR Z,4251
;;	424A ED A0          LDI
;;	424C E2 FC 12       JP PE,12FC
;;	424F 18

;; -----------------------------------------------------------------------------------------------------------
;; Room_list1 + Room_list2 = 230 + 71 rooms = 301 rooms
;; 		Note that the victory room is in fact "composed" of 2 rooms : &8D30 and &8E30.
;;      The 8D3 has no far wall, hence we load and see 8E3, therefore counts as 2 even
;;		though we cannot enter 8E3.
;; Format:
;; <length> <high_id> <low_id in [7:4]; data in [3:0]> <data n bytes>
;; until length = 0. (Note that the room ID is in Big-Endian format)
;;
;; The data is shifted by one nibble in the roomID low byte.
;; For exemple, looking at Head's first room data at address 54C7:
;; 		54C7 10 8A 43 F8 01 02 01 3E E0 58 62 33 1A 8D FF 1F E0
;; Length = &10 (16 bytes of data not including length byte)
;; RoomID = &8A4  (1.5 bytes: "8A 4X" with low nibble ignored because it is data)
;; So the data are:  X3 F8 01 02 01 3E E0 58 62 33 1A 8D FF 1F E0
;;         0011_1111_1000_0000_0001_0000_0010_0000_0001_0011_1110_1110...
;;
;; The data is bit packed: 001_111_111_000_000_000_010_000_001_00000000__10_0_111_110_111_...
;; First 3 bits = Room Dimensions (see RoomDimensions table at addr 1ECE)
;; 			here "001" = "MinU=8, MinV=16, MaxU=72, MaxV=64"
;; Next 3 bits is Color Scheme (see array_Color_Schemes at addr 0554)
;;			here "111" = 7 (Black, Red, Blue, Pastel_yellow)
;; Next 3 bits is WorldId (see WorldId at 1EBF), to choose the walls sprites
;;			here "111" = 7 (Prison)
;; Next 3 bits is Door sprite Id (see ToDoorId at 045D) can be 0 to 3
;;   although ToDoorId will convert it to 0 to 2 to use one of the 3 types
;;   of door sprites. Here "000" = 0 : Doorway type 0.
;; Next 4x3 bits are the Walls&Doors data for FarLeft, FarRight, NearRight and  NearLeft sides
;; 			here "000 000 010 000" means Wall/NoDoor, Wall/NoDoor, Wall+Door at ground level, Wall/NoDoor
;; Next 3 bits defines the Floor tile to use.
;;			here "001" = 1 : uses floor_tile_pattern1
;; Then it will loop over the objects in the room or the Macros to use.
;; 	 * 8 bits = Object ID (as defined in the ObjDefns table at 38C9)
;;                 or (if value >= &C0) Macro ID in the Room_Macro_data table at 50D0).
;;				Here "00000000" = object ID 0 = ANIM_TELEPORT (the Teleport_data at addr 3490 says that
;;				room "8A4" goes to room "715")
;;		if Object:
;;			* 2 bits : controls how many objects of current type will be inserted ("?0" = 1; "?1" = several)
;;              and how orientation flag will be applied to the object(s) ("1?"=global, "0?"=per object);
;;				So we can have:
;;					only 1b more fetched to be used as the global orientation flag (no other bit inserted
;; 						between coordinates if several objects to get);
;;					or 1b orientation flag fetched before each set of coordinates.
;;						Here 2b flag = "10" : 1 object of current type ANIM_TELEPORT and 1b more to fetch.
;;          Loop (1 time or until coordinates = "7, 7, 0" (which means "end") as defined in the 2bit flag):
;;				1b : NoFlip/Flip bit. Global (only first loop) or per-object flag (every loop)
;;					Here 1b flag = "0" (NO Flip; if it is "1" then flip the sprite)
;;				3x3 bits: UVZ coordinates;
;;					Here "111 110 111" = U=7, V=6, Z=7 (ground level). Because only 1 object needed to be
;;						fetched (2b flag "?0"), it goes back to fetching next object/macro Id, which here is
;;                      SPR_GRATING, flag "11" (several/global), global orientation flag = "0" (No Flip)
;;                      and 4 coords fetched 0;6;1 0;6;3 0;6;5 0;6;7 (then the ending code 7;7;0).
;;						That finishes the data for that room.
;;						Note that the Special object "SPR_BUNNY (lives)" at 0;6;0 is added in another routine
;;						and is not part of the room data.
;;		if Macro:
;;			* 3x3 bits for origin offset coordinate added to all objects in the macro;
;;				Then it loops to fetching 8b object id or Macro id until the code is "FF" to leave
;;				the macro and go back where we were in the room data.
		org &4250
Room_list: ;; 151 rooms
	4250 DEFB &0D, &05, &1E, &0B, &40, &00, &03, &24, &F9, &A0, &73, &98, &4F, &FF
	425E DEFB &06, &06, &1D, &CB, &41, &01, &FE
	4265 DEFB &08, &07, &15, &8B, &01, &8F, &82, &37, &FF
	426E DEFB &17, &07, &25, &4B, &00, &0E, &01, &02, &C5, &78, &4E, &2F, &FC, &0D, &E0, &BB, &56, &A7, &D1, &0F, &BB, &FF, &1F, &E0
	4286 DEFB &16, &94, &23, &80, &10, &0F, &82, &17, &2A, &9E, &71, &CD, &EF, &EF, &FE, &08, &FA, &DA, &6D, &B6, &FC, &7F, &80
	429D DEFB &11, &07, &35, &0B, &08, &00, &25, &23, &E0, &13, &A8, &37, &9D, &3D, &5B, &67, &E3, &FC
	42AF DEFB &06, &10, &3C, &24, &20, &8B, &FE
	42B6 DEFB &06, &11, &3C, &24, &40, &8B, &FE
	42BD DEFB &24, &12, &31, &E6, &01, &00, &47, &3A, &A0, &73, &CC, &1D, &B8, &E0, &7F, &C1, &1E, &EA, &E5, &F2, &B9, &6F, &C0, &56, &EA, &6F, &BF, &04, &98, &7D, &E7, &DF, &8F, &DF, &FF, &8F, &F0
	42E2 DEFB &08, &17, &30, &8B, &40, &21, &9A, &07, &FF
	42EB DEFB &0B, &19, &3E, &4B, &92, &01, &9A, &07, &0B, &92, &7F, &F0
	42F7 DEFB &06, &1A, &3C, &24, &41, &0B, &FE
	42FE DEFB &0D, &1B, &30, &64, &41, &0B, &8C, &07, &33, &DE, &71, &FF, &E3, &FC
	430C DEFB &13, &1C, &30, &E4, &41, &0A, &85, &3C, &F9, &48, &72, &6D, &27, &5F, &21, &97, &E8, &7F, &C7, &F8
	4320 DEFB &12, &1D, &3D, &64, &41, &00, &63, &1C, &E5, &31, &BE, &4F, &99, &F3, &79, &7C, &7F, &F1, &FE
	4333 DEFB &0B, &1E, &3F, &24, &6D, &8A, &1D, &B1, &E4, &FF, &C7, &F8
	433F DEFB &09, &1F, &3C, &24, &21, &0A, &41, &1A, &FF, &E0
	4349 DEFB &06, &29, &37, &8B, &08, &21, &FE
	4350 DEFB &10, &2D, &3F, &F9, &B4, &0A, &67, &89, &ED, &FF, &C0, &1E, &2B, &A3, &FF, &1F, &E0
	4361 DEFB &06, &2E, &3C, &A4, &41, &4B, &FE
	4368 DEFB &06, &32, &3C, &92, &28, &03, &FE
	436F DEFB &10, &33, &3C, &92, &40, &83, &85, &FF, &21, &91, &F0, &BD, &1E, &8E, &FE, &3F, &C0
	4380 DEFB &15, &34, &39, &52, &23, &0D, &90, &07, &2A, &8E, &F1, &CC, &C4, &66, &B5, &9B, &EE, &77, &BB, &FF, &F1, &FE
	4396 DEFB &18, &35, &39, &52, &E0, &8D, &90, &07, &2A, &CE, &E7, &AC, &F1, &F9, &F8, &1C, &CE, &76, &3B, &3D, &BE, &D7, &FC, &7F, &80
	43AF DEFB &3B, &36, &31, &12, &E1, &01, &8F, &07, &C7, &8F, &92, &40, &C1, &DC, &00, &1F, &40, &78, &1E, &0B, &F1, &FF, &04, &98, &A2, &18, &10, &7E, &04, &F4, &F0, &78, &7C, &5E, &3F, &3F, &02
	43D4 DEFB	   &B8, &38, &2C, &1A, &09, &3F, &03, &78, &A4, &54, &29, &86, &49, &A5, &72, &B1, &54, &22, &8E, &67, &FE, &3F, &C0
	43EB DEFB &0C, &37, &32, &12, &D9, &02, &05, &A4, &F6, &75, &3F, &E3, &FC
	43F8 DEFB &06, &38, &3C, &FC, &41, &0B, &FE
	43FF DEFB &06, &39, &3F, &7C, &09, &2B, &FE
	4406 DEFB &06, &3D, &37, &39, &04, &2B, &FE
	440D DEFB &0F, &41, &34, &D2, &84, &0D, &90, &07, &C1, &03, &8E, &67, &7C, &BF, &F1, &FE
	441D DEFB &0D, &42, &3F, &D2, &25, &23, &8A, &07, &31, &4A, &FA, &5D, &F8, &FF
	442B DEFB &0D, &43, &3F, &D2, &08, &83, &8C, &07, &32, &F9, &6D, &77, &E3, &FC
	4439 DEFB &06, &47, &36, &FC, &0C, &3B, &FE
	4440 DEFB &15, &49, &31, &3C, &90, &4C, &25, &80, &F0, &79, &3F, &E0, &73, &3F, &E7, &E2, &70, &FF, &9F, &BF, &F8, &FF
	4456 DEFB &06, &4A, &36, &9B, &09, &09, &FE
	445D DEFB &09, &4D, &37, &39, &08, &1A, &41, &33, &FF, &E0
	4467 DEFB &13, &51, &34, &D2, &04, &1C, &43, &2D, &99, &00, &7C, &10, &39, &6E, &96, &BB, &95, &FF, &8F, &F0
	447B DEFB &0D, &52, &3F, &D2, &08, &13, &8C, &07, &32, &CB, &6B, &B7, &E3, &FC
	4489 DEFB &06, &53, &36, &BC, &48, &27, &FE
	4490 DEFB &13, &54, &31, &C9, &01, &8E, &55, &02, &67, &30, &0F, &86, &27, &1C, &DF, &F0, &D8, &2F, &F1, &FE
	44A4 DEFB &0D, &55, &3E, &7C, &2C, &0B, &8C, &07, &31, &56, &FA, &BD, &F8, &FF
	44B2 DEFB &08, &56, &3E, &7C, &60, &8B, &8A, &07, &FF
	44BB DEFB &0B, &57, &3E, &7C, &01, &2A, &67, &12, &F8, &C0, &7F, &F0
	44C7 DEFB &0B, &59, &3F, &F6, &00, &3E, &39, &8C, &E5, &FF, &C7, &F8
	44D3 DEFB &12, &5A, &35, &DE, &FC, &20, &55, &B5, &D6, &EF, &C0, &E6, &76, &4B, &7C, &DE, &EF, &C7, &F8
	44E6 DEFB &10, &5B, &3C, &1E, &41, &01, &80, &3F, &C0, &07, &94, &E6, &F3, &99, &DD, &F8, &FF
	44F7 DEFB &0B, &60, &3E, &12, &C0, &08, &01, &25, &E1, &13, &1F, &FE
	4503 DEFB &10, &61, &34, &D2, &11, &9C, &5B, &1A, &E4, &31, &BF, &90, &07, &C1, &03, &FF, &80
	4514 DEFB &0B, &62, &3E, &3C, &40, &26, &61, &24, &F9, &A0, &7F, &F0
	4520 DEFB &0B, &63, &3E, &7C, &01, &26, &61, &24, &F9, &A0, &7F, &F0
	452C DEFB &15, &65, &35, &BC, &08, &2A, &5F, &2A, &E5, &D2, &4E, &77, &14, &E4, &B8, &DE, &57, &D7, &E5, &FF, &1F, &E0
	4542 DEFB &17, &6A, &33, &5E, &08, &20, &15, &15, &E8, &78, &4E, &1F, &FC, &0F, &61, &7B, &5F, &DF, &9F, &A7, &C9, &FF, &1F, &E0
	455A DEFB &1C, &71, &31, &12, &90, &48, &79, &28, &E5, &D9, &CE, &07, &FC, &12, &62, &76, &DB, &2C, &46, &DF, &75, &96, &C4, &7D, &FF, &5D, &6F, &F8, &FF
	4577 DEFB &06, &72, &3E, &12, &49, &03, &FE
	457E DEFB &09, &73, &3A, &BC, &21, &00, &41, &14, &FF, &E0
	4588 DEFB &09, &74, &3A, &BC, &40, &80, &41, &23, &FF, &E0
	4592 DEFB &09, &75, &3F, &7C, &11, &20, &23, &2C, &FF, &E0
	459C DEFB &0C, &78, &3B, &9B, &10, &0E, &3F, &AA, &F5, &FB, &3F, &E3, &FC
	45A9 DEFB &15, &7A, &32, &1B, &08, &28, &63, &99, &EF, &7F, &C0, &4E, &73, &BB, &FF, &01, &5B, &4E, &5F, &FC, &7F, &80
	45BF DEFB &22, &81, &35, &D6, &C0, &20, &09, &BD, &FA, &FF, &C1, &FE, &73, &B7, &BF, &04, &DA, &5F, &17, &FC, &15, &E3, &39, &7D, &5E, &A7, &4F, &A5, &D4, &C9, &E9, &3C, &7F, &F1, &FE
	45E2 DEFB &06, &82, &35, &52, &03, &A3, &FE
	45E9 DEFB &06, &85, &37, &3C, &08, &21, &FE
	45F0 DEFB &22, &88, &32, &1B, &08, &24, &0F, &3E, &E6, &76, &6E, &6B, &29, &E1, &FB, &9E, &8F, &FC, &21, &EC, &FE, &9F, &5F, &B7, &FC, &04, &EB, &BD, &BE, &CF, &5F, &AB, &FE, &3F, &C0
	4613 DEFB &30, &89, &31, &9B, &08, &00, &3F, &34, &E7, &16, &F6, &11, &38, &B8, &0D, &F0, &CD, &C7, &EB, &FE, &05, &77, &1B, &9D, &D6, &FC, &0F, &68, &FD, &F3, &79, &FC, &FA, &7B, &3C, &73, &B1, &39, &9E, &7E, &2F, &37, &9D, &D4, &EF, &F7, &BF, &E3, &FC
	4644 DEFB &09, &8A, &3E, &5B, &48, &28, &41, &09, &FF, &E0
	464E DEFB &0C, &8B, &39, &5B, &01, &08, &41, &A6, &F3, &62, &7F, &E3, &FC
	465B DEFB &1E, &94, &33, &80, &08, &04, &73, &06, &E6, &52, &4E, &0B, &AC, &D6, &7A, &BD, &5B, &F0, &3F, &A6, &D2, &E8, &77, &E0, &7B, &4D, &E5, &F0, &FF, &C7, &F8
	467A DEFB &16, &95, &3F, &80, &08, &24, &61, &23, &E4, &DA, &1F, &17, &97, &CD, &E4, &FF, &82, &9E, &DE, &AF, &7E, &3F, &C0
	4691 DEFB &06, &97, &3B, &5B, &48, &05, &FE
	4698 DEFB &06, &99, &3C, &5B, &41, &25, &FE
	469F DEFB &29, &9A, &3B, &9B, &01, &20, &09, &2D, &E6, &B6, &F6, &29, &1F, &C2, &D1, &7E, &13, &9F, &B3, &6F, &C0, &9E, &5B, &BD, &FF, &03, &D9, &2F, &7C, &9B, &D5, &EC, &F4, &77, &3B, &7D, &9F, &3F, &BF, &FE, &3F, &C0
	46C9 DEFB &0B, &A3, &3E, &00, &28, &04, &53, &F3, &FA, &7F, &C7, &F8
	46D5 DEFB &0E, &A4, &3E, &00, &40, &F4, &3B, &9D, &EE, &66, &EA, &70, &B7, &F8, &FF
	46E4 DEFB &0D, &A5, &3F, &00, &43, &A4, &3B, &93, &ED, &E6, &AB, &33, &F1, &FE
	46F2 DEFB &21, &A6, &30, &C0, &E1, &80, &83, &07, &E8, &53, &FE, &77, &7F, &84, &DB, &4E, &96, &BB, &71, &A4, &C9, &7E, &38, &7E, &EF, &27, &FC, &16, &E5, &AA, &B9, &4F, &F8, &FF
	4714 DEFB &06, &A7, &3E, &80, &01, &23, &FE
	471B DEFB &30, &B3, &33, &C0, &00, &20, &77, &39, &23, &33, &1A, &11, &24, &E8, &13, &BE, &31, &B9, &FC, &BF, &C1, &56, &5B, &1D, &FF, &02, &FB, &2B, &35, &7A, &ED, &6E, &BF, &81, &AD, &D8, &FA, &F4, &BD, &BE, &5E, &AF, &E0, &9B, &4C, &F1, &FF, &8F, &F0
	474C DEFB &06, &45, &46, &6D, &48, &0B, &FE
	4753 DEFB &09, &46, &4C, &AD, &C2, &0A, &07, &24, &FF, &E0
	475D DEFB &1A, &47, &49, &AD, &C2, &84, &75, &1B, &A5, &DA, &4E, &97, &FC, &15, &66, &6B, &15, &DA, &E5, &FC, &0E, &68, &2B, &F6, &7B, &F8, &FF
	4778 DEFB &0B, &48, &45, &2D, &49, &0A, &01, &3A, &F8, &40, &7F, &F0
	4784 DEFB &23, &54, &41, &C9, &C0, &00, &0D, &2C, &F8, &11, &71, &78, &0C, &C3, &12, &62, &41, &01, &F6, &9E, &DF, &F8, &39, &DF, &F0, &3F, &E0, &97, &03, &C2, &E4, &F2, &3A, &1F, &F1, &FE
	47A8 DEFB &06, &55, &44, &AD, &01, &2B, &FE
	47AF DEFB &11, &57, &4F, &6D, &B4, &0A, &41, &B3, &FA, &7D, &37, &E0, &0F, &37, &E9, &FF, &8F, &F0
	47C1 DEFB &0B, &58, &41, &AD, &01, &2A, &15, &24, &C3, &72, &4F, &FE
	47CD DEFB &18, &59, &4E, &36, &10, &0E, &4D, &0E, &64, &9A, &CF, &5F, &D7, &DB, &EA, &F9, &7F, &C0, &E6, &3B, &E9, &F3, &FF, &8F, &F0
	47E6 DEFB &06, &67, &4E, &6D, &48, &3B, &FE
	47ED DEFB &06, &68, &4C, &ED, &41, &0B, &FE
	47F4 DEFB &0B, &69, &4F, &AD, &09, &3A, &69, &1C, &98, &1C, &7F, &F0
	4800 DEFB &16, &77, &44, &2D, &1C, &6D, &82, &34, &C0, &3B, &E0, &6D, &C7, &30, &70, &49, &F8, &18, &DD, &CF, &27, &E3, &FC
	4817 DEFB &09, &79, &47, &ED, &08, &2A, &71, &2C, &FF, &E0
	4821 DEFB &0D, &87, &4F, &2D, &48, &2B, &8C, &07, &38, &69, &75, &BD, &F8, &FF
	482F DEFB &08, &89, &4F, &6D, &49, &3B, &8A, &07, &FF
	4838 DEFB &10, &8A, &4D, &ED, &09, &01, &98, &10, &CC, &E8, &11, &E5, &8B, &C6, &63, &F8, &FF	;; &8A4 Batman 1st room
	4849 DEFB &06, &97, &46, &ED, &08, &2B, &FE
	4850 DEFB &12, &99, &44, &ED, &08, &2A, &4B, &9D, &F2, &F6, &BC, &5F, &F0, &63, &95, &F5, &7F, &C7, &F8
	4863 DEFB &11, &9A, &45, &AD, &08, &3A, &39, &93, &F2, &7C, &FF, &E0, &BF, &37, &EB, &FF, &8F, &F0
	4875 DEFB &25, &A7, &43, &C9, &A0, &4D, &89, &06, &C3, &0B, &18, &DE, &70, &D4, &AB, &95, &46, &BE, &08, &BC, &57, &7B, &BC, &DF, &81, &CC, &57, &EB, &FE, &03, &37, &9C, &6F, &F7, &0B, &FE, &3F, &C0
	489B DEFB &0C, &A8, &49, &2D, &61, &0A, &5F, &A4, &EA, &7D, &3F, &E3, &FC
	48A8 DEFB &17, &A9, &41, &C9, &41, &20, &63, &2D, &E3, &7A, &EF, &4F, &F7, &EB, &FD, &DA, &EE, &BF, &5B, &2F, &96, &FC, &7F, &80
	48C0 DEFB &0E, &AA, &4F, &6D, &01, &2A, &67, &12, &E0, &79, &BF, &5F, &FC, &7F, &80
	48CF DEFB &0B, &59, &5E, &76, &00, &0E, &2F, &89, &E7, &7F, &C7, &F8
	48DB DEFB &0E, &5E, &5E, &36, &10, &0F, &89, &47, &2D, &D2, &7B, &3E, &9F, &F1, &FE
	48EA DEFB &11, &6C, &5F, &5B, &E0, &6E, &37, &A6, &8B, &47, &A1, &70, &C8, &6C, &3A, &7E, &3F, &C0
	48FC DEFB &20, &6E, &51, &36, &03, &A2, &01, &25, &E7, &13, &8E, &4D, &A7, &73, &3F, &C0, &E6, &EC, &CD, &E6, &D2, &68, &FD, &7B, &B9, &9D, &FC, &0C, &E9, &AC, &B7, &F1, &FE
	491D DEFB &18, &78, &5B, &2D, &40, &0A, &01, &14, &E1, &72, &B6, &0D, &2B, &E0, &32, &A6, &3B, &AE, &F6, &EB, &2D, &52, &B9, &F8, &FF
	4936 DEFB &0B, &79, &5E, &AD, &01, &8E, &3F, &A1, &EC, &FF, &C7, &F8
	4942 DEFB &0B, &59, &6F, &36, &80, &0C, &5B, &9E, &F3, &7F, &C7, &F8
	494E DEFB &17, &5A, &61, &B6, &41, &0B, &92, &07, &C9, &3B, &E4, &95, &CC, &F3, &BC, &1F, &F8, &0F, &C0, &74, &3E, &1F, &F1, &FE
	4966 DEFB &0B, &5C, &6F, &76, &25, &04, &67, &24, &F9, &A0, &7F, &F0
	4972 DEFB &08, &5D, &6F, &76, &48, &85, &9A, &07, &FF
	497B DEFB &16, &5E, &6E, &36, &05, &04, &5B, &2E, &C0, &10, &E0, &3B, &AE, &47, &15, &96, &C8, &EE, &F6, &DB, &7E, &3F, &C0
	4992 DEFB &08, &6C, &6F, &76, &48, &15, &9A, &07, &FF
	499B DEFB &0B, &6D, &6F, &B6, &49, &24, &67, &24, &F9, &A0, &7F, &F0
	49A7 DEFB &12, &6E, &6E, &36, &01, &14, &25, &36, &63, &B8, &E4, &F2, &DA, &1D, &9E, &B7, &4F, &C7, &F8
	49BA DEFB &0B, &7B, &6E, &2E, &80, &0E, &3F, &9E, &F3, &7F, &C7, &F8
	49C6 DEFB &06, &7C, &6C, &76, &21, &23, &FE
	49CD DEFB &09, &7D, &6C, &76, &80, &A2, &01, &21, &FF, &E0
	49D7 DEFB &0C, &6A, &84, &6B, &08, &00, &1D, &A4, &ED, &F7, &3F, &E3, &FC
	49E4 DEFB &09, &7A, &8F, &2D, &49, &26, &41, &23, &FF, &E0
	49EE DEFB &0C, &05, &0E, &0B, &00, &3E, &3F, &8B, &E5, &72, &7F, &E3, &FC
	49FB DEFB &08, &F5, &02, &CB, &08, &21, &90, &07, &FF
	4A04 DEFB &09, &7B, &8E, &ED, &01, &06, &21, &26, &FF, &E0
	4A0E DEFB &09, &7B, &7E, &6D, &00, &0E, &21, &26, &FF, &E0
	4A18 DEFB &09, &79, &8F, &6D, &40, &26, &21, &21, &FF, &E0
	4A22 DEFB &09, &79, &7F, &ED, &00, &0E, &21, &21, &FF, &E0
	4A2C DEFB &09, &79, &6E, &2D, &00, &0E, &21, &21, &FF, &E0
	4A36 DEFB &09, &78, &4A, &ED, &00, &0E, &21, &2A, &FF, &E0
	4A40 DEFB &09, &5C, &43, &9E, &00, &0E, &21, &01, &FF, &E0
	4A4A DEFB &20, &2F, &33, &A4, &01, &01, &8F, &2F, &C7, &96, &0E, &CF, &68, &B4, &1A, &E1, &85, &42, &F4, &9E, &4D, &25, &F6, &7A, &FD, &5F, &82, &BD, &E6, &EF, &FE, &3F, &C0
	4A6B DEFB &21, &5D, &31, &DE, &01, &20, &13, &23, &A0, &D8, &2E, &7F, &5F, &FE, &06, &F6, &7A, &BC, &DE, &8F, &7E, &07, &76, &5F, &4F, &57, &B3, &B9, &E4, &ED, &78, &BF, &E3, &FC
	4A8D DEFB &1A, &49, &41, &CE, &01, &8C, &47, &56, &E1, &51, &9D, &82, &2F, &C1, &13, &95, &E5, &FA, &FB, &F0, &41, &89, &C1, &F1, &7F, &E3, &FC
	4AA8 DEFB &08, &6D, &52, &F3, &C1, &01, &82, &15, &FF
	4AB1 DEFB &1F, &5B, &68, &F6, &41, &04, &65, &66, &E1, &B8, &FF, &AC, &FC, &0E, &ED, &6E, &37, &F0, &57, &A8, &F8, &6D, &2F, &E0, &9F, &2D, &EE, &F7, &F3, &BF, &E3, &FC
	4AD1 DEFB &14, &A4, &21, &C0, &00, &26, &61, &23, &F9, &60, &72, &3E, &B6, &5F, &21, &90, &EB, &75, &FF, &E3, &FC
	4AE6 DEFB &0C, &8A, &85, &EB, &00, &20, &1D, &A4, &ED, &F7, &3F, &E3, &FC
	4AF3 DEFB &12, &98, &32, &9B, &E3, &F4, &1D, &B2, &E5, &7F, &C0, &26, &6F, &B7, &9B, &AD, &CF, &C7, &F8
	4B06 DEFB &1F, &18, &39, &4B, &41, &01, &98, &BD, &CC, &DE, &84, &C4, &BE, &12, &7C, &4A, &2D, &F3, &17, &F9, &9B, &F0, &DD, &87, &DE, &7E, &0C, &B9, &5F, &2F, &F8, &FF
	4B26 DEFB &0D, &5C, &53, &DE, &08, &02, &41, &03, &E6, &D5, &BF, &97, &87, &FF
	4B34 DEFB &2A, &E5, &01, &CB, &18, &00, &03, &3D, &87, &B3, &AA, &77, &3B, &B9, &8F, &3C, &C6, &59, &A7, &AE, &59, &3F, &03, &BA, &CB, &5D, &CE, &E9, &7D, &BE, &5F, &C0, &76, &03, &8F, &FF, &00, &B8, &CE, &5F, &FC, &7F, &80 ;; &E50 = Victory room
	4B5F DEFB &0B, &88, &4A, &2D, &81, &0A, &5D, &9C, &F1, &FF, &C7, &F8
	4B6B DEFB &0E, &7E, &6A, &B6, &01, &02, &49, &27, &C7, &75, &7E, &39, &17, &DF, &E0
	4B7A DEFB &13, &69, &85, &6D, &10, &4C, &59, &1B, &E7, &76, &3E, &3B, &AB, &F9, &FE, &F8, &78, &4D, &F8, &FF
	4B8E DEFB &16, &57, &89, &ED, &40, &00, &77, &4F, &60, &72, &4E, &57, &89, &E6, &32, &E1, &54, &9C, &BB, &5D, &7E, &3F, &C0
	4BA5 DEFB &06, &59, &8E, &2D, &09, &01, &FE
	4BAC DEFB &11, &58, &8A, &ED, &41, &01, &98, &57, &CC, &3B, &E6, &71, &CC, &73, &BE, &4F, &F8, &FF
	4BBE DEFB &08, &5C, &22, &9E, &00, &0F, &82, &2F, &FF
	4BC7 DEFB &13, &5C, &32, &9E, &DB, &0E, &21, &01, &E5, &B1, &EA, &43, &99, &AD, &56, &EB, &95, &DB, &F8, &FF
	4BDB DEFB &06, &6C, &37, &1E, &08, &21, &FE
	4BE2 DEFB &0B, &8C, &35, &DE, &00, &20, &69, &74, &98, &08, &7F, &F0
	4BEE DEFB &0D, &7C, &33, &5E, &1C, &7C, &0F, &24, &C1, &D2, &4F, &82, &05, &FF
	4BFC DEFB &00

;; -----------------------------------------------------------------------------------------------------------
;; Left over garbage most likely
;;	4BFD 1A             LD A,(DE)
;;	4BFE ED B1          CPIR

	org &4c00

BlitBuff:
	4C00 				DEFS	256, 0
ViewBuff
	4D00 	            DEFS	256, 0
DestBuff
	4E00 				DEFS	256, 0
RevTable
	4F00 				DEFS	256, 0
BackgrdBuff
	5000				DEFS 	64

SaveRestore_Block4
ObjectsBuffer
	5040				DEFS 	&3F0
TODO_6E30
	5430				DEFS 	&190 			;; ???

BlitRot_Buffer
KeyScanningBuffer
	55C0				DEFS 	10				;; Buffer (key scanning)
	55CA				DEFS 	&10E

;; -----------------------------------------------------------------------------------------------------------CPC
;; Moved Data from 4C00-AC8F to 56D8-B767
	org &4C00 ;; &4C00 at build but is moved to 56D8 duing the init stuff

PanelFlips
	56D8				DEFS 8, 0
SpriteFlips_buffer
	56E0				DEFS 16, 0

;; -----------------------------------------------------------------------------------------------------------
img_wall_deco:
img_wall_0:
	;; 4 bytes * 56 : interlaced : wall1 + maskwall1 + wall2 + maskwall2 (each are 1byte wide*56)
	56F0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &01
	5700 DEFB &00, &00, &00, &03, &00, &07, &00, &E2, &00, &1C, &00, &16, &03, &30, &E0, &0E
	5710 DEFB &0F, &60, &F0, &06, &1C, &C0, &38, &02, &3B, &80, &9C, &00, &71, &00, &0E, &00
	5720 DEFB &70, &00, &E6, &00, &E0, &00, &86, &00, &E0, &00, &72, &00, &CE, &00, &42, &08
	5730 DEFB &CF, &00, &02, &30, &DC, &00, &0A, &C0, &90, &03, &2A, &00, &80, &0C, &42, &00
	5740 DEFB &82, &30, &EA, &00, &8E, &00, &EA, &00, &B7, &00, &6A, &00, &BA, &00, &AA, &00
	5750 DEFB &BC, &00, &D2, &00, &91, &00, &DA, &00, &AD, &00, &DA, &00, &9E, &00, &BA, &00
	5760 DEFB &9C, &00, &0A, &00, &A4, &00, &CA, &C0, &B1, &01, &E2, &E0, &A1, &01, &EA, &E8
	5770 DEFB &AD, &0D, &AC, &AC, &8E, &0E, &1C, &1C, &9E, &1E, &0C, &CC, &8C, &0D, &02, &60
	5780 DEFB &A0, &01, &0C, &2C, &8C, &0C, &0E, &CE, &9E, &1E, &1C, &1C, &8E, &0E, &EA, &E8
	5790 DEFB &85, &05, &E2, &E0, &A0, &00, &E2, &E0, &90, &00, &4A, &40, &BA, &00, &0A, &00
	57A0 DEFB &B3, &00, &6A, &00, &B6, &00, &C2, &00, &86, &00, &06, &30, &A8, &00, &06, &D0
	57B0 DEFB &A0, &03, &0C, &40, &80, &0D, &30, &00, &80, &34, &C0, &00, &83, &10, &00, &00
	57C0 DEFB &CC, &00, &00, &00, &F0, &00, &00, &00, &C0, &00, &00, &00, &00, &00, &00, &00
	;; displaying the images and masks as "wall1+wall2 mask1+mask2"
	;; so it is easier to see, we have the following results:
	;;
	;;	................ ................
	;;	................ ................
	;;	................ ...............@
	;;	................ ...............@
	;;	................ ..............@@
	;;	................ .....@@@@@@...@.
	;;	................ ...@@@.....@.@@.
	;;	......@@@@@..... ..@@........@@@.
	;;	....@@@@@@@@.... .@@..........@@.
	;;	...@@@....@@@... @@............@.
	;;	..@@@.@@@..@@@.. @...............
	;;	.@@@...@....@@@. ................
	;;	.@@@....@@@..@@. ................
	;;	@@@.....@....@@. ................
	;;	@@@......@@@..@. ................
	;;	@@..@@@..@....@. ............@...
	;;	@@..@@@@......@. ..........@@....
	;;	@@.@@@......@.@. ........@@......
	;;	@..@......@.@.@. ......@@........
	;;	@........@....@. ....@@..........
	;;	@.....@.@@@.@.@. ..@@............
	;;	@...@@@.@@@.@.@. ................
	;;	@.@@.@@@.@@.@.@. ................
	;;	@.@@@.@.@.@.@.@. ................
	;;	@.@@@@..@@.@..@. ................
	;;	@..@...@@@.@@.@. ................
	;;	@.@.@@.@@@.@@.@. ................
	;;	@..@@@@.@.@@@.@. ................
	;;	@..@@@......@.@. ................
	;;	@.@..@..@@..@.@. ........@@......
	;;	@.@@...@@@@...@. .......@@@@.....
	;;	@.@....@@@@.@.@. .......@@@@.@...
	;;	@.@.@@.@@.@.@@.. ....@@.@@.@.@@..
	;;	@...@@@....@@@.. ....@@@....@@@..
	;;	@..@@@@.....@@.. ...@@@@.@@..@@..
	;;	@...@@........@. ....@@.@.@@.....
	;;	@.@.........@@.. .......@..@.@@..
	;;	@...@@......@@@. ....@@..@@..@@@.
	;;	@..@@@@....@@@.. ...@@@@....@@@..
	;;	@...@@@.@@@.@.@. ....@@@.@@@.@...
	;;	@....@.@@@@...@. .....@.@@@@.....
	;;	@.@.....@@@...@. ........@@@.....
	;;	@..@.....@..@.@. .........@......
	;;	@.@@@.@.....@.@. ................
	;;	@.@@..@@.@@.@.@. ................
	;;	@.@@.@@.@@....@. ................
	;;	@....@@......@@. ..........@@....
	;;	@.@.@........@@. ........@@.@....
	;;	@.@.........@@.. ......@@.@......
	;;	@.........@@.... ....@@.@........
	;;	@.......@@...... ..@@.@..........
	;;	@.....@@........ ...@............
	;;	@@..@@.......... ................
	;;	@@@@............ ................
	;;	@@.............. ................
	;;	................ ................

img_wall_1:
	57D0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &01
	57E0 DEFB &00, &00, &00, &03, &00, &07, &00, &E2, &00, &1C, &00, &16, &03, &30, &E0, &0E
	57F0 DEFB &0F, &60, &F0, &06, &1E, &C0, &18, &02, &39, &80, &CC, &00, &70, &00, &86, &00
	5800 DEFB &70, &00, &76, &00, &E5, &07, &42, &00, &E8, &0D, &32, &00, &C1, &03, &82, &88
	5810 DEFB &C4, &0C, &02, &18, &C2, &16, &A2, &E0, &D5, &1D, &1A, &B8, &C1, &01, &B2, &F0
	5820 DEFB &96, &1E, &02, &00, &A3, &37, &52, &70, &D6, &1E, &8C, &DC, &C0, &00, &58, &78
	5830 DEFB &94, &1C, &02, &00, &A3, &37, &A8, &B8, &96, &1E, &46, &6E, &20, &20, &2C, &3C
	5840 DEFB &47, &6F, &42, &40, &AC, &3C, &C4, &EC, &80, &00, &6A, &78, &AA, &00, &02, &00
	5850 DEFB &BA, &00, &B2, &00, &96, &00, &A2, &00, &9A, &00, &B2, &00, &95, &00, &B2, &00
	5860 DEFB &95, &00, &A2, &00, &95, &00, &62, &00, &97, &00, &D2, &00, &95, &00, &52, &00
	5870 DEFB &AD, &00, &72, &00, &B5, &00, &52, &00, &95, &00, &F2, &00, &B7, &00, &6A, &00
	5880 DEFB &AD, &00, &7A, &00, &AD, &00, &EC, &00, &AD, &00, &A6, &00, &AE, &00, &E2, &00
	5890 DEFB &B6, &00, &78, &00, &97, &00, &0C, &00, &BB, &00, &C0, &00, &78, &00, &C0, &00
	58A0 DEFB &59, &00, &80, &00, &D8, &00, &00, &00, &30, &00, &00, &00, &C0, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ ...............@
	;;	................ ...............@
	;;	................ ..............@@
	;;	................ .....@@@@@@...@.
	;;	................ ...@@@.....@.@@.
	;;	......@@@@@..... ..@@........@@@.
	;;	....@@@@@@@@.... .@@..........@@.
	;;	...@@@@....@@... @@............@.
	;;	..@@@..@@@..@@.. @...............
	;;	.@@@....@....@@. ................
	;;	.@@@.....@@@.@@. ................
	;;	@@@..@.@.@....@. .....@@@........
	;;	@@@.@.....@@..@. ....@@.@........
	;;	@@.....@@.....@. ......@@@...@...
	;;	@@...@........@. ....@@.....@@...
	;;	@@....@.@.@...@. ...@.@@.@@@.....
	;;	@@.@.@.@...@@.@. ...@@@.@@.@@@...
	;;	@@.....@@.@@..@. .......@@@@@....
	;;	@..@.@@.......@. ...@@@@.........
	;;	@.@...@@.@.@..@. ..@@.@@@.@@@....
	;;	@@.@.@@.@...@@.. ...@@@@.@@.@@@..
	;;	@@.......@.@@... .........@@@@...
	;;	@..@.@........@. ...@@@..........
	;;	@.@...@@@.@.@... ..@@.@@@@.@@@...
	;;	@..@.@@..@...@@. ...@@@@..@@.@@@.
	;;	..@.......@.@@.. ..@.......@@@@..
	;;	.@...@@@.@....@. .@@.@@@@.@......
	;;	@.@.@@..@@...@.. ..@@@@..@@@.@@..
	;;	@........@@.@.@. .........@@@@...
	;;	@.@.@.@.......@. ................
	;;	@.@@@.@.@.@@..@. ................
	;;	@..@.@@.@.@...@. ................
	;;	@..@@.@.@.@@..@. ................
	;;	@..@.@.@@.@@..@. ................
	;;	@..@.@.@@.@...@. ................
	;;	@..@.@.@.@@...@. ................
	;;	@..@.@@@@@.@..@. ................
	;;	@..@.@.@.@.@..@. ................
	;;	@.@.@@.@.@@@..@. ................
	;;	@.@@.@.@.@.@..@. ................
	;;	@..@.@.@@@@@..@. ................
	;;	@.@@.@@@.@@.@.@. ................
	;;	@.@.@@.@.@@@@.@. ................
	;;	@.@.@@.@@@@.@@.. ................
	;;	@.@.@@.@@.@..@@. ................
	;;	@.@.@@@.@@@...@. ................
	;;	@.@@.@@..@@@@... ................
	;;	@..@.@@@....@@.. ................
	;;	@.@@@.@@@@...... ................
	;;	.@@@@...@@...... ................
	;;	.@.@@..@@....... ................
	;;	@@.@@........... ................
	;;	..@@............ ................
	;;	@@.............. ................

img_wall_2:
	58B0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &01
	58C0 DEFB &00, &00, &00, &03, &00, &07, &00, &E2, &00, &1C, &00, &16, &03, &30, &E0, &0E
	58D0 DEFB &0F, &60, &F0, &06, &1C, &C0, &18, &02, &38, &80, &0C, &00, &73, &03, &C6, &C0
	58E0 DEFB &64, &04, &26, &20, &E8, &08, &12, &10, &C8, &0B, &12, &10, &D0, &10, &0A, &08
	58F0 DEFB &D0, &12, &0A, &08, &90, &10, &0A, &08, &90, &10, &0A, &08, &88, &08, &12, &10
	5900 DEFB &88, &08, &12, &10, &84, &04, &22, &20, &83, &03, &C2, &C0, &80, &00, &02, &00
	5910 DEFB &80, &00, &02, &00, &80, &00, &02, &00, &80, &00, &02, &00, &80, &00, &02, &00
	5920 DEFB &80, &00, &02, &00, &80, &00, &02, &00, &80, &00, &02, &00, &80, &00, &02, &00
	5930 DEFB &87, &00, &C2, &00, &9F, &07, &F2, &C0, &9F, &0F, &F2, &E0, &BF, &1F, &3A, &30
	5940 DEFB &BF, &1F, &3A, &30, &B1, &1F, &FA, &F0, &A0, &11, &EA, &F0, &A0, &00, &0A, &E0
	5950 DEFB &A6, &06, &0A, &00, &A6, &06, &2A, &20, &90, &00, &4A, &40, &90, &00, &12, &00
	5960 DEFB &8C, &00, &22, &00, &83, &00, &C2, &00, &80, &00, &02, &00, &80, &00, &02, &00
	5970 DEFB &80, &00, &0C, &00, &80, &00, &30, &00, &80, &00, &C0, &00, &83, &00, &00, &00
	5980 DEFB &8C, &00, &00, &00, &B0, &00, &00, &00, &C0, &00, &00, &00, &00, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ ...............@
	;;	................ ...............@
	;;	................ ..............@@
	;;	................ .....@@@@@@...@.
	;;	................ ...@@@.....@.@@.
	;;	......@@@@@..... ..@@........@@@.
	;;	....@@@@@@@@.... .@@..........@@.
	;;	...@@@.....@@... @@............@.
	;;	..@@@.......@@.. @...............
	;;	.@@@..@@@@...@@. ......@@@@......
	;;	.@@..@....@..@@. .....@....@.....
	;;	@@@.@......@..@. ....@......@....
	;;	@@..@......@..@. ....@.@@...@....
	;;	@@.@........@.@. ...@........@...
	;;	@@.@........@.@. ...@..@.....@...
	;;	@..@........@.@. ...@........@...
	;;	@..@........@.@. ...@........@...
	;;	@...@......@..@. ....@......@....
	;;	@...@......@..@. ....@......@....
	;;	@....@....@...@. .....@....@.....
	;;	@.....@@@@....@. ......@@@@......
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@....@@@@@....@. ................
	;;	@..@@@@@@@@@..@. .....@@@@@......
	;;	@..@@@@@@@@@..@. ....@@@@@@@.....
	;;	@.@@@@@@..@@@.@. ...@@@@@..@@....
	;;	@.@@@@@@..@@@.@. ...@@@@@..@@....
	;;	@.@@...@@@@@@.@. ...@@@@@@@@@....
	;;	@.@.....@@@.@.@. ...@...@@@@@....
	;;	@.@.........@.@. ........@@@.....
	;;	@.@..@@.....@.@. .....@@.........
	;;	@.@..@@...@.@.@. .....@@...@.....
	;;	@..@.....@..@.@. .........@......
	;;	@..@.......@..@. ................
	;;	@...@@....@...@. ................
	;;	@.....@@@@....@. ................
	;;	@.............@. ................
	;;	@.............@. ................
	;;	@...........@@.. ................
	;;	@.........@@.... ................
	;;	@.......@@...... ................
	;;	@.....@@........ ................
	;;	@...@@.......... ................
	;;	@.@@............ ................
	;;	@@.............. ................
	;;	................ ................

img_wall_3:
	5990 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &01
	59A0 DEFB &00, &00, &00, &03, &00, &07, &00, &E2, &00, &1C, &00, &16, &03, &30, &E0, &0E
	59B0 DEFB &0F, &60, &F0, &06, &1C, &C0, &38, &02, &3B, &80, &9C, &00, &71, &00, &0E, &00
	59C0 DEFB &70, &00, &E6, &00, &E0, &00, &86, &00, &E0, &00, &72, &00, &CE, &00, &42, &00
	59D0 DEFB &CF, &00, &02, &00, &D8, &00, &F2, &F0, &91, &01, &0C, &0C, &B2, &02, &04, &24
	59E0 DEFB &B2, &02, &06, &16, &A3, &03, &06, &06, &A1, &01, &DC, &DC, &A2, &00, &72, &70
	59F0 DEFB &A3, &00, &8C, &00, &A5, &00, &72, &00, &A4, &02, &06, &00, &A8, &03, &5C, &40
	5A00 DEFB &A8, &00, &52, &40, &A8, &04, &06, &00, &90, &02, &BC, &80, &90, &00, &AA, &80
	5A10 DEFB &A0, &08, &04, &00, &A1, &05, &3C, &00, &A1, &01, &7A, &00, &40, &18, &04, &00
	5A20 DEFB &41, &05, &7C, &00, &41, &01, &52, &00, &80, &30, &0A, &00, &82, &0A, &FA, &00
	5A30 DEFB &42, &02, &B2, &00, &80, &30, &0A, &00, &82, &02, &FA, &00, &42, &02, &B2, &00
	5A40 DEFB &80, &30, &0A, &00, &82, &02, &FA, &00, &42, &02, &A8, &00, &80, &30, &18, &00
	5A50 DEFB &82, &02, &F0, &00, &42, &02, &A8, &00, &80, &30, &18, &00, &82, &02, &F0, &00
	5A60 DEFB &60, &08, &60, &00, &BF, &00, &80, &00, &C0, &00, &00, &00, &00, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ ...............@
	;;	................ ...............@
	;;	................ ..............@@
	;;	................ .....@@@@@@...@.
	;;	................ ...@@@.....@.@@.
	;;	......@@@@@..... ..@@........@@@.
	;;	....@@@@@@@@.... .@@..........@@.
	;;	...@@@....@@@... @@............@.
	;;	..@@@.@@@..@@@.. @...............
	;;	.@@@...@....@@@. ................
	;;	.@@@....@@@..@@. ................
	;;	@@@.....@....@@. ................
	;;	@@@......@@@..@. ................
	;;	@@..@@@..@....@. ................
	;;	@@..@@@@......@. ................
	;;	@@.@@...@@@@..@. ........@@@@....
	;;	@..@...@....@@.. .......@....@@..
	;;	@.@@..@......@.. ......@...@..@..
	;;	@.@@..@......@@. ......@....@.@@.
	;;	@.@...@@.....@@. ......@@.....@@.
	;;	@.@....@@@.@@@.. .......@@@.@@@..
	;;	@.@...@..@@@..@. .........@@@....
	;;	@.@...@@@...@@.. ................
	;;	@.@..@.@.@@@..@. ................
	;;	@.@..@.......@@. ......@.........
	;;	@.@.@....@.@@@.. ......@@.@......
	;;	@.@.@....@.@..@. .........@......
	;;	@.@.@........@@. .....@..........
	;;	@..@....@.@@@@.. ......@.@.......
	;;	@..@....@.@.@.@. ........@.......
	;;	@.@..........@.. ....@...........
	;;	@.@....@..@@@@.. .....@.@........
	;;	@.@....@.@@@@.@. .......@........
	;;	.@...........@.. ...@@...........
	;;	.@.....@.@@@@@.. .....@.@........
	;;	.@.....@.@.@..@. .......@........
	;;	@...........@.@. ..@@............
	;;	@.....@.@@@@@.@. ....@.@.........
	;;	.@....@.@.@@..@. ......@.........
	;;	@...........@.@. ..@@............
	;;	@.....@.@@@@@.@. ......@.........
	;;	.@....@.@.@@..@. ......@.........
	;;	@...........@.@. ..@@............
	;;	@.....@.@@@@@.@. ......@.........
	;;	.@....@.@.@.@... ......@.........
	;;	@..........@@... ..@@............
	;;	@.....@.@@@@.... ......@.........
	;;	.@....@.@.@.@... ......@.........
	;;	@..........@@... ..@@............
	;;	@.....@.@@@@.... ......@.........
	;;	.@@......@@..... ....@...........
	;;	@.@@@@@@@....... ................
	;;	@@.............. ................
	;;	................ ................

img_wall_4:
	5A70 DEFB &00, &00, &01, &00, &00, &00, &1D, &00, &00, &00, &7E, &00, &01, &00, &E2, &00
	5A80 DEFB &07, &00, &8C, &0C, &1E, &00, &66, &06, &79, &00, &9C, &1C, &E6, &00, &72, &70
	5A90 DEFB &99, &01, &C4, &C0, &67, &07, &12, &00, &9C, &1C, &4C, &00, &B1, &30, &32, &00
	5AA0 DEFB &B4, &30, &CC, &00, &B3, &30, &32, &00, &B4, &30, &C8, &08, &B3, &30, &2A, &28
	5AB0 DEFB &B4, &30, &B8, &38, &B3, &30, &22, &20, &B4, &30, &80, &18, &B3, &30, &02, &20
	5AC0 DEFB &B4, &30, &80, &38, &B3, &30, &02, &08, &B4, &30, &80, &30, &B3, &30, &0A, &08
	5AD0 DEFB &B4, &30, &B8, &38, &B3, &30, &12, &10, &B4, &30, &CC, &00, &B3, &30, &32, &00
	5AE0 DEFB &B4, &30, &C4, &00, &B3, &30, &02, &18, &B4, &30, &00, &68, &B0, &31, &02, &A8
	5AF0 DEFB &B0, &36, &00, &A8, &B0, &32, &02, &A8, &B0, &32, &00, &A8, &B0, &32, &02, &A8
	5B00 DEFB &B0, &32, &04, &A0, &B0, &32, &12, &80, &B0, &36, &4C, &00, &B1, &30, &32, &00
	5B10 DEFB &B4, &30, &CC, &0C, &B3, &30, &26, &06, &B4, &30, &9C, &1C, &B2, &30, &72, &70
	5B20 DEFB &B1, &31, &C4, &C0, &B7, &37, &12, &00, &BC, &3C, &4C, &00, &89, &08, &33, &00
	5B30 DEFB &C4, &00, &CE, &00, &B3, &00, &38, &00, &CC, &00, &E0, &00, &B3, &00, &80, &00
	5B40 DEFB &CE, &00, &00, &00, &38, &00, &00, &00, &E0, &00, &00, &00, &00, &00, &00, &00
	;;	...............@ ................
	;;	...........@@@.@ ................
	;;	.........@@@@@@. ................
	;;	.......@@@@...@. ................
	;;	.....@@@@...@@.. ............@@..
	;;	...@@@@..@@..@@. .............@@.
	;;	.@@@@..@@..@@@.. ...........@@@..
	;;	@@@..@@..@@@..@. .........@@@....
	;;	@..@@..@@@...@.. .......@@@......
	;;	.@@..@@@...@..@. .....@@@........
	;;	@..@@@...@..@@.. ...@@@..........
	;;	@.@@...@..@@..@. ..@@............
	;;	@.@@.@..@@..@@.. ..@@............
	;;	@.@@..@@..@@..@. ..@@............
	;;	@.@@.@..@@..@... ..@@........@...
	;;	@.@@..@@..@.@.@. ..@@......@.@...
	;;	@.@@.@..@.@@@... ..@@......@@@...
	;;	@.@@..@@..@...@. ..@@......@.....
	;;	@.@@.@..@....... ..@@.......@@...
	;;	@.@@..@@......@. ..@@......@.....
	;;	@.@@.@..@....... ..@@......@@@...
	;;	@.@@..@@......@. ..@@........@...
	;;	@.@@.@..@....... ..@@......@@....
	;;	@.@@..@@....@.@. ..@@........@...
	;;	@.@@.@..@.@@@... ..@@......@@@...
	;;	@.@@..@@...@..@. ..@@.......@....
	;;	@.@@.@..@@..@@.. ..@@............
	;;	@.@@..@@..@@..@. ..@@............
	;;	@.@@.@..@@...@.. ..@@............
	;;	@.@@..@@......@. ..@@.......@@...
	;;	@.@@.@.......... ..@@.....@@.@...
	;;	@.@@..........@. ..@@...@@.@.@...
	;;	@.@@............ ..@@.@@.@.@.@...
	;;	@.@@..........@. ..@@..@.@.@.@...
	;;	@.@@............ ..@@..@.@.@.@...
	;;	@.@@..........@. ..@@..@.@.@.@...
	;;	@.@@.........@.. ..@@..@.@.@.....
	;;	@.@@.......@..@. ..@@..@.@.......
	;;	@.@@.....@..@@.. ..@@.@@.........
	;;	@.@@...@..@@..@. ..@@............
	;;	@.@@.@..@@..@@.. ..@@........@@..
	;;	@.@@..@@..@..@@. ..@@.........@@.
	;;	@.@@.@..@..@@@.. ..@@.......@@@..
	;;	@.@@..@..@@@..@. ..@@.....@@@....
	;;	@.@@...@@@...@.. ..@@...@@@......
	;;	@.@@.@@@...@..@. ..@@.@@@........
	;;	@.@@@@...@..@@.. ..@@@@..........
	;;	@...@..@..@@..@@ ....@...........
	;;	@@...@..@@..@@@. ................
	;;	@.@@..@@..@@@... ................
	;;	@@..@@..@@@..... ................
	;;	@.@@..@@@....... ................
	;;	@@..@@@......... ................
	;;	..@@@........... ................
	;;	@@@............. ................
	;;	................ ................

img_wall_5:
	5B50 DEFB &00, &00, &01, &00, &00, &00, &1D, &00, &00, &00, &7E, &00, &01, &00, &E2, &00
	5B60 DEFB &07, &00, &8C, &0C, &1E, &00, &66, &06, &79, &00, &9C, &1C, &E6, &00, &7A, &78
	5B70 DEFB &99, &01, &E4, &E0, &67, &67, &92, &80, &7E, &7E, &4C, &00, &39, &38, &32, &00
	5B80 DEFB &84, &00, &CC, &00, &B3, &00, &32, &00, &CC, &00, &C4, &00, &B3, &00, &02, &10
	5B90 DEFB &CC, &00, &44, &40, &91, &10, &12, &00, &38, &38, &04, &40, &15, &55, &12, &10
	5BA0 DEFB &0C, &2C, &44, &00, &0C, &4D, &02, &10, &08, &28, &44, &40, &0D, &4C, &12, &00
	5BB0 DEFB &08, &28, &04, &44, &0D, &4D, &02, &1C, &08, &28, &00, &74, &0C, &4D, &02, &D4
	5BC0 DEFB &0C, &2D, &00, &54, &0C, &4D, &02, &54, &0C, &2D, &00, &54, &0C, &4D, &02, &54
	5BD0 DEFB &08, &29, &00, &54, &82, &01, &02, &54, &A4, &21, &00, &54, &B2, &31, &02, &54
	5BE0 DEFB &B4, &31, &00, &5C, &B2, &31, &02, &70, &B4, &31, &0C, &C0, &B3, &31, &32, &00
	5BF0 DEFB &B4, &30, &CC, &0C, &B3, &30, &26, &06, &B4, &30, &9C, &1C, &B2, &30, &72, &70
	5C00 DEFB &B1, &31, &C4, &C0, &B7, &37, &12, &00, &BC, &3C, &4C, &00, &89, &08, &33, &00
	5C10 DEFB &C4, &00, &CE, &00, &B3, &00, &38, &00, &CC, &00, &E0, &00, &B3, &00, &80, &00
	5C20 DEFB &CE, &00, &00, &00, &38, &00, &00, &00, &E0, &00, &00, &00, &00, &00, &00, &00
	;;	...............@ ................
	;;	...........@@@.@ ................
	;;	.........@@@@@@. ................
	;;	.......@@@@...@. ................
	;;	.....@@@@...@@.. ............@@..
	;;	...@@@@..@@..@@. .............@@.
	;;	.@@@@..@@..@@@.. ...........@@@..
	;;	@@@..@@..@@@@.@. .........@@@@...
	;;	@..@@..@@@@..@.. .......@@@@.....
	;;	.@@..@@@@..@..@. .@@..@@@@.......
	;;	.@@@@@@..@..@@.. .@@@@@@.........
	;;	..@@@..@..@@..@. ..@@@...........
	;;	@....@..@@..@@.. ................
	;;	@.@@..@@..@@..@. ................
	;;	@@..@@..@@...@.. ................
	;;	@.@@..@@......@. ...........@....
	;;	@@..@@...@...@.. .........@......
	;;	@..@...@...@..@. ...@............
	;;	..@@@........@.. ..@@@....@......
	;;	...@.@.@...@..@. .@.@.@.@...@....
	;;	....@@...@...@.. ..@.@@..........
	;;	....@@........@. .@..@@.@...@....
	;;	....@....@...@.. ..@.@....@......
	;;	....@@.@...@..@. .@..@@..........
	;;	....@........@.. ..@.@....@...@..
	;;	....@@.@......@. .@..@@.@...@@@..
	;;	....@........... ..@.@....@@@.@..
	;;	....@@........@. .@..@@.@@@.@.@..
	;;	....@@.......... ..@.@@.@.@.@.@..
	;;	....@@........@. .@..@@.@.@.@.@..
	;;	....@@.......... ..@.@@.@.@.@.@..
	;;	....@@........@. .@..@@.@.@.@.@..
	;;	....@........... ..@.@..@.@.@.@..
	;;	@.....@.......@. .......@.@.@.@..
	;;	@.@..@.......... ..@....@.@.@.@..
	;;	@.@@..@.......@. ..@@...@.@.@.@..
	;;	@.@@.@.......... ..@@...@.@.@@@..
	;;	@.@@..@.......@. ..@@...@.@@@....
	;;	@.@@.@......@@.. ..@@...@@@......
	;;	@.@@..@@..@@..@. ..@@...@........
	;;	@.@@.@..@@..@@.. ..@@........@@..
	;;	@.@@..@@..@..@@. ..@@.........@@.
	;;	@.@@.@..@..@@@.. ..@@.......@@@..
	;;	@.@@..@..@@@..@. ..@@.....@@@....
	;;	@.@@...@@@...@.. ..@@...@@@......
	;;	@.@@.@@@...@..@. ..@@.@@@........
	;;	@.@@@@...@..@@.. ..@@@@..........
	;;	@...@..@..@@..@@ ....@...........
	;;	@@...@..@@..@@@. ................
	;;	@.@@..@@..@@@... ................
	;;	@@..@@..@@@..... ................
	;;	@.@@..@@@....... ................
	;;	@@..@@@......... ................
	;;	..@@@........... ................
	;;	@@@............. ................
	;;	................ ................

img_wall_6:
	5C30 DEFB &00, &00, &01, &00, &00, &00, &1D, &00, &00, &00, &7E, &00, &01, &00, &E2, &00
	5C40 DEFB &07, &00, &9C, &00, &1E, &00, &60, &03, &79, &00, &80, &0D, &E6, &00, &00, &75
	5C50 DEFB &99, &01, &80, &95, &67, &67, &C0, &D5, &7E, &7E, &C0, &D5, &38, &38, &C0, &D4
	5C60 DEFB &C4, &00, &C0, &D0, &92, &00, &C2, &C0, &CC, &00, &CC, &C0, &B2, &00, &D2, &C0
	5C70 DEFB &CC, &00, &C4, &C0, &B2, &00, &DA, &D8, &CC, &00, &20, &20, &B3, &03, &8A, &88
	5C80 DEFB &CE, &0E, &28, &28, &A0, &00, &B2, &B0, &C2, &0A, &C8, &C8, &A3, &0B, &2A, &28
	5C90 DEFB &C0, &08, &B0, &B0, &A2, &0A, &CA, &C8, &C3, &0B, &28, &28, &A0, &08, &AA, &A8
	5CA0 DEFB &C2, &0A, &A4, &A0, &A2, &0A, &82, &80, &C2, &0A, &0C, &00, &B0, &00, &52, &40
	5CB0 DEFB &CC, &00, &CC, &C0, &B2, &00, &D2, &C0, &CC, &00, &CC, &C0, &B2, &00, &D2, &C0
	5CC0 DEFB &CC, &00, &CC, &C0, &91, &01, &B2, &80, &67, &67, &4C, &00, &7C, &7C, &32, &00
	5CD0 DEFB &30, &30, &CC, &0C, &83, &00, &26, &06, &CC, &00, &9C, &1C, &B2, &00, &72, &70
	5CE0 DEFB &89, &01, &C4, &C0, &67, &67, &12, &00, &7C, &7C, &4C, &00, &11, &10, &33, &00
	5CF0 DEFB &84, &00, &CE, &00, &B3, &00, &38, &00, &CC, &00, &E0, &00, &B3, &00, &80, &00
	5D00 DEFB &CE, &00, &00, &00, &38, &00, &00, &00, &E0, &00, &00, &00, &00, &00, &00, &00
	;;	...............@ ................
	;;	...........@@@.@ ................
	;;	.........@@@@@@. ................
	;;	.......@@@@...@. ................
	;;	.....@@@@..@@@.. ................
	;;	...@@@@..@@..... ..............@@
	;;	.@@@@..@@....... ............@@.@
	;;	@@@..@@......... .........@@@.@.@
	;;	@..@@..@@....... .......@@..@.@.@
	;;	.@@..@@@@@...... .@@..@@@@@.@.@.@
	;;	.@@@@@@.@@...... .@@@@@@.@@.@.@.@
	;;	..@@@...@@...... ..@@@...@@.@.@..
	;;	@@...@..@@...... ........@@.@....
	;;	@..@..@.@@....@. ........@@......
	;;	@@..@@..@@..@@.. ........@@......
	;;	@.@@..@.@@.@..@. ........@@......
	;;	@@..@@..@@...@.. ........@@......
	;;	@.@@..@.@@.@@.@. ........@@.@@...
	;;	@@..@@....@..... ..........@.....
	;;	@.@@..@@@...@.@. ......@@@...@...
	;;	@@..@@@...@.@... ....@@@...@.@...
	;;	@.@.....@.@@..@. ........@.@@....
	;;	@@....@.@@..@... ....@.@.@@..@...
	;;	@.@...@@..@.@.@. ....@.@@..@.@...
	;;	@@......@.@@.... ....@...@.@@....
	;;	@.@...@.@@..@.@. ....@.@.@@..@...
	;;	@@....@@..@.@... ....@.@@..@.@...
	;;	@.@.....@.@.@.@. ....@...@.@.@...
	;;	@@....@.@.@..@.. ....@.@.@.@.....
	;;	@.@...@.@.....@. ....@.@.@.......
	;;	@@....@.....@@.. ....@.@.........
	;;	@.@@.....@.@..@. .........@......
	;;	@@..@@..@@..@@.. ........@@......
	;;	@.@@..@.@@.@..@. ........@@......
	;;	@@..@@..@@..@@.. ........@@......
	;;	@.@@..@.@@.@..@. ........@@......
	;;	@@..@@..@@..@@.. ........@@......
	;;	@..@...@@.@@..@. .......@@.......
	;;	.@@..@@@.@..@@.. .@@..@@@........
	;;	.@@@@@....@@..@. .@@@@@..........
	;;	..@@....@@..@@.. ..@@........@@..
	;;	@.....@@..@..@@. .............@@.
	;;	@@..@@..@..@@@.. ...........@@@..
	;;	@.@@..@..@@@..@. .........@@@....
	;;	@...@..@@@...@.. .......@@@......
	;;	.@@..@@@...@..@. .@@..@@@........
	;;	.@@@@@...@..@@.. .@@@@@..........
	;;	...@...@..@@..@@ ...@............
	;;	@....@..@@..@@@. ................
	;;	@.@@..@@..@@@... ................
	;;	@@..@@..@@@..... ................
	;;	@.@@..@@@....... ................
	;;	@@..@@@......... ................
	;;	..@@@........... ................
	;;	@@@............. ................
	;;	................ ................

img_wall_7:
	5D10 DEFB &00, &00, &01, &00, &00, &00, &1D, &00, &00, &00, &7E, &00, &01, &00, &E2, &00
	5D20 DEFB &07, &00, &9C, &00, &1E, &00, &62, &00, &79, &00, &9C, &00, &E6, &00, &62, &60
	5D30 DEFB &99, &01, &F4, &F0, &67, &67, &B2, &B0, &7E, &7E, &34, &30, &38, &38, &B2, &30
	5D40 DEFB &83, &00, &34, &30, &4C, &00, &B2, &30, &33, &00, &34, &30, &4C, &00, &B2, &30
	5D50 DEFB &33, &00, &34, &30, &4C, &00, &B2, &30, &33, &00, &34, &30, &CC, &00, &B2, &30
	5D60 DEFB &B1, &00, &34, &30, &C0, &04, &B2, &30, &81, &28, &34, &30, &80, &14, &B2, &30
	5D70 DEFB &81, &28, &34, &30, &80, &14, &B2, &30, &81, &28, &34, &30, &80, &14, &B2, &30
	5D80 DEFB &81, &28, &34, &30, &80, &14, &B2, &30, &81, &28, &34, &30, &80, &14, &B2, &30
	5D90 DEFB &81, &28, &34, &30, &80, &14, &B2, &30, &83, &20, &34, &30, &8C, &00, &B2, &30
	5DA0 DEFB &B3, &00, &34, &30, &CC, &00, &B2, &30, &B3, &00, &34, &30, &CC, &00, &B2, &30
	5DB0 DEFB &B3, &00, &34, &30, &CC, &00, &B2, &30, &B3, &00, &34, &30, &CC, &00, &62, &60
	5DC0 DEFB &91, &01, &CC, &C0, &67, &67, &12, &00, &7C, &7C, &4C, &00, &11, &10, &33, &00
	5DD0 DEFB &84, &00, &CE, &00, &B3, &00, &38, &00, &CC, &00, &E0, &00, &B3, &00, &80, &00
	5DE0 DEFB &CE, &00, &00, &00, &38, &00, &00, &00, &E0, &00, &00, &00, &00, &00, &00, &00
	;;	...............@ ................
	;;	...........@@@.@ ................
	;;	.........@@@@@@. ................
	;;	.......@@@@...@. ................
	;;	.....@@@@..@@@.. ................
	;;	...@@@@..@@...@. ................
	;;	.@@@@..@@..@@@.. ................
	;;	@@@..@@..@@...@. .........@@.....
	;;	@..@@..@@@@@.@.. .......@@@@@....
	;;	.@@..@@@@.@@..@. .@@..@@@@.@@....
	;;	.@@@@@@...@@.@.. .@@@@@@...@@....
	;;	..@@@...@.@@..@. ..@@@.....@@....
	;;	@.....@@..@@.@.. ..........@@....
	;;	.@..@@..@.@@..@. ..........@@....
	;;	..@@..@@..@@.@.. ..........@@....
	;;	.@..@@..@.@@..@. ..........@@....
	;;	..@@..@@..@@.@.. ..........@@....
	;;	.@..@@..@.@@..@. ..........@@....
	;;	..@@..@@..@@.@.. ..........@@....
	;;	@@..@@..@.@@..@. ..........@@....
	;;	@.@@...@..@@.@.. ..........@@....
	;;	@@......@.@@..@. .....@....@@....
	;;	@......@..@@.@.. ..@.@.....@@....
	;;	@.......@.@@..@. ...@.@....@@....
	;;	@......@..@@.@.. ..@.@.....@@....
	;;	@.......@.@@..@. ...@.@....@@....
	;;	@......@..@@.@.. ..@.@.....@@....
	;;	@.......@.@@..@. ...@.@....@@....
	;;	@......@..@@.@.. ..@.@.....@@....
	;;	@.......@.@@..@. ...@.@....@@....
	;;	@......@..@@.@.. ..@.@.....@@....
	;;	@.......@.@@..@. ...@.@....@@....
	;;	@......@..@@.@.. ..@.@.....@@....
	;;	@.......@.@@..@. ...@.@....@@....
	;;	@.....@@..@@.@.. ..@.......@@....
	;;	@...@@..@.@@..@. ..........@@....
	;;	@.@@..@@..@@.@.. ..........@@....
	;;	@@..@@..@.@@..@. ..........@@....
	;;	@.@@..@@..@@.@.. ..........@@....
	;;	@@..@@..@.@@..@. ..........@@....
	;;	@.@@..@@..@@.@.. ..........@@....
	;;	@@..@@..@.@@..@. ..........@@....
	;;	@.@@..@@..@@.@.. ..........@@....
	;;	@@..@@...@@...@. .........@@.....
	;;	@..@...@@@..@@.. .......@@@......
	;;	.@@..@@@...@..@. .@@..@@@........
	;;	.@@@@@...@..@@.. .@@@@@..........
	;;	...@...@..@@..@@ ...@............
	;;	@....@..@@..@@@. ................
	;;	@.@@..@@..@@@... ................
	;;	@@..@@..@@@..... ................
	;;	@.@@..@@@....... ................
	;;	@@..@@@......... ................
	;;	..@@@........... ................
	;;	@@@............. ................
	;;	................ ................

img_wall_8:
	5DF0 DEFB &00, &00, &00, &00, &00, &00, &00, &05, &00, &00, &00, &16, &00, &00, &01, &58
	5E00 DEFB &00, &01, &00, &60, &00, &05, &1C, &80, &00, &16, &7A, &00, &01, &58, &7E, &00
	5E10 DEFB &04, &60, &BE, &00, &1C, &80, &DE, &00, &7A, &00, &FE, &00, &7E, &00, &FE, &00
	5E20 DEFB &BE, &00, &FE, &00, &DE, &00, &FE, &00, &FE, &00, &F6, &00, &FE, &00, &FA, &00
	5E30 DEFB &FE, &00, &FC, &00, &FE, &00, &B9, &00, &F6, &00, &A0, &00, &F8, &00, &1C, &00
	5E40 DEFB &FC, &00, &7A, &00, &B9, &00, &7E, &00, &80, &00, &BE, &00, &1C, &00, &DE, &00
	5E50 DEFB &7A, &00, &FE, &00, &7E, &00, &FE, &00, &BE, &00, &FE, &00, &DE, &00, &F6, &00
	5E60 DEFB &FE, &00, &FA, &00, &FE, &00, &FC, &00, &FE, &00, &B9, &00, &F6, &00, &A0, &00
	5E70 DEFB &FA, &00, &1C, &00, &FC, &00, &7A, &00, &B9, &00, &7E, &00, &A0, &00, &BE, &00
	5E80 DEFB &1C, &00, &DE, &00, &7A, &00, &FE, &00, &7E, &00, &FE, &00, &BE, &00, &FE, &00
	5E90 DEFB &DE, &00, &F6, &00, &FE, &00, &FA, &00, &FE, &00, &FC, &00, &FE, &00, &B9, &00
	5EA0 DEFB &F6, &00, &A0, &01, &FA, &00, &00, &06, &FC, &00, &00, &1A, &B9, &00, &01, &68
	5EB0 DEFB &A0, &01, &06, &A0, &00, &06, &18, &80, &00, &1A, &60, &00, &01, &68, &80, &00
	5EC0 DEFB &06, &A0, &00, &00, &18, &80, &00, &00, &60, &00, &00, &00, &00, &00, &00, &00
	;;	................ ................
	;;	................ .............@.@
	;;	................ ...........@.@@.
	;;	...............@ .........@.@@...
	;;	................ .......@.@@.....
	;;	...........@@@.. .....@.@@.......
	;;	.........@@@@.@. ...@.@@.........
	;;	.......@.@@@@@@. .@.@@...........
	;;	.....@..@.@@@@@. .@@.............
	;;	...@@@..@@.@@@@. @...............
	;;	.@@@@.@.@@@@@@@. ................
	;;	.@@@@@@.@@@@@@@. ................
	;;	@.@@@@@.@@@@@@@. ................
	;;	@@.@@@@.@@@@@@@. ................
	;;	@@@@@@@.@@@@.@@. ................
	;;	@@@@@@@.@@@@@.@. ................
	;;	@@@@@@@.@@@@@@.. ................
	;;	@@@@@@@.@.@@@..@ ................
	;;	@@@@.@@.@.@..... ................
	;;	@@@@@......@@@.. ................
	;;	@@@@@@...@@@@.@. ................
	;;	@.@@@..@.@@@@@@. ................
	;;	@.......@.@@@@@. ................
	;;	...@@@..@@.@@@@. ................
	;;	.@@@@.@.@@@@@@@. ................
	;;	.@@@@@@.@@@@@@@. ................
	;;	@.@@@@@.@@@@@@@. ................
	;;	@@.@@@@.@@@@.@@. ................
	;;	@@@@@@@.@@@@@.@. ................
	;;	@@@@@@@.@@@@@@.. ................
	;;	@@@@@@@.@.@@@..@ ................
	;;	@@@@.@@.@.@..... ................
	;;	@@@@@.@....@@@.. ................
	;;	@@@@@@...@@@@.@. ................
	;;	@.@@@..@.@@@@@@. ................
	;;	@.@.....@.@@@@@. ................
	;;	...@@@..@@.@@@@. ................
	;;	.@@@@.@.@@@@@@@. ................
	;;	.@@@@@@.@@@@@@@. ................
	;;	@.@@@@@.@@@@@@@. ................
	;;	@@.@@@@.@@@@.@@. ................
	;;	@@@@@@@.@@@@@.@. ................
	;;	@@@@@@@.@@@@@@.. ................
	;;	@@@@@@@.@.@@@..@ ................
	;;	@@@@.@@.@.@..... ...............@
	;;	@@@@@.@......... .............@@.
	;;	@@@@@@.......... ...........@@.@.
	;;	@.@@@..@.......@ .........@@.@...
	;;	@.@..........@@. .......@@.@.....
	;;	...........@@... .....@@.@.......
	;;	.........@@..... ...@@.@.........
	;;	.......@@....... .@@.@...........
	;;	.....@@......... @.@.............
	;;	...@@........... @...............
	;;	.@@............. ................
	;;	................ ................

img_wall_9:
	5ED0 DEFB &00, &00, &00, &00, &00, &00, &00, &05, &00, &00, &00, &16, &00, &00, &01, &58
	5EE0 DEFB &00, &01, &00, &60, &00, &05, &1C, &80, &00, &16, &7A, &00, &01, &58, &7E, &00
	5EF0 DEFB &04, &60, &BE, &00, &1C, &80, &DE, &00, &7A, &00, &FE, &00, &7E, &00, &FE, &00
	5F00 DEFB &BE, &00, &FE, &00, &DE, &00, &FE, &00, &FE, &00, &F6, &00, &FE, &00, &FA, &00
	5F10 DEFB &FE, &00, &FC, &00, &FE, &00, &B9, &00, &F6, &00, &A0, &00, &F8, &00, &1C, &00
	5F20 DEFB &FD, &00, &06, &20, &B8, &00, &02, &F8, &80, &03, &00, &FC, &00, &0F, &00, &0E
	5F30 DEFB &40, &1C, &40, &06, &02, &38, &08, &03, &00, &30, &20, &03, &00, &60, &04, &01
	5F40 DEFB &00, &60, &00, &01, &01, &C0, &24, &01, &00, &C0, &00, &01, &00, &80, &04, &01
	5F50 DEFB &00, &80, &20, &01, &39, &B8, &04, &01, &30, &B0, &00, &01, &00, &88, &24, &01
	5F60 DEFB &00, &B0, &00, &01, &0F, &8F, &04, &01, &3E, &BE, &20, &01, &38, &B9, &04, &01
	5F70 DEFB &20, &A6, &00, &01, &01, &99, &E4, &E1, &07, &A7, &C0, &C1, &1F, &9F, &04, &21
	5F80 DEFB &3C, &BC, &00, &C1, &30, &B3, &3C, &3D, &00, &8C, &F8, &F9, &03, &B3, &E1, &E4
	5F90 DEFB &0F, &8F, &86, &90, &3E, &BE, &18, &40, &38, &B9, &60, &00, &01, &A4, &80, &00
	5FA0 DEFB &06, &90, &00, &00, &18, &80, &00, &00, &60, &80, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ .............@.@
	;;	................ ...........@.@@.
	;;	...............@ .........@.@@...
	;;	................ .......@.@@.....
	;;	...........@@@.. .....@.@@.......
	;;	.........@@@@.@. ...@.@@.........
	;;	.......@.@@@@@@. .@.@@...........
	;;	.....@..@.@@@@@. .@@.............
	;;	...@@@..@@.@@@@. @...............
	;;	.@@@@.@.@@@@@@@. ................
	;;	.@@@@@@.@@@@@@@. ................
	;;	@.@@@@@.@@@@@@@. ................
	;;	@@.@@@@.@@@@@@@. ................
	;;	@@@@@@@.@@@@.@@. ................
	;;	@@@@@@@.@@@@@.@. ................
	;;	@@@@@@@.@@@@@@.. ................
	;;	@@@@@@@.@.@@@..@ ................
	;;	@@@@.@@.@.@..... ................
	;;	@@@@@......@@@.. ................
	;;	@@@@@@.@.....@@. ..........@.....
	;;	@.@@@.........@. ........@@@@@...
	;;	@............... ......@@@@@@@@..
	;;	................ ....@@@@....@@@.
	;;	.@.......@...... ...@@@.......@@.
	;;	......@.....@... ..@@@.........@@
	;;	..........@..... ..@@..........@@
	;;	.............@.. .@@............@
	;;	................ .@@............@
	;;	.......@..@..@.. @@.............@
	;;	................ @@.............@
	;;	.............@.. @..............@
	;;	..........@..... @..............@
	;;	..@@@..@.....@.. @.@@@..........@
	;;	..@@............ @.@@...........@
	;;	..........@..@.. @...@..........@
	;;	................ @.@@...........@
	;;	....@@@@.....@.. @...@@@@.......@
	;;	..@@@@@...@..... @.@@@@@........@
	;;	..@@@........@.. @.@@@..@.......@
	;;	..@............. @.@..@@........@
	;;	.......@@@@..@.. @..@@..@@@@....@
	;;	.....@@@@@...... @.@..@@@@@.....@
	;;	...@@@@@.....@.. @..@@@@@..@....@
	;;	..@@@@.......... @.@@@@..@@.....@
	;;	..@@......@@@@.. @.@@..@@..@@@@.@
	;;	........@@@@@... @...@@..@@@@@..@
	;;	......@@@@@....@ @.@@..@@@@@..@..
	;;	....@@@@@....@@. @...@@@@@..@....
	;;	..@@@@@....@@... @.@@@@@..@......
	;;	..@@@....@@..... @.@@@..@........
	;;	.......@@....... @.@..@..........
	;;	.....@@......... @..@............
	;;	...@@........... @...............
	;;	.@@............. @...............
	;;	@............... ................

img_wall_10:
	5FB0 DEFB &00, &00, &00, &00, &00, &00, &00, &05, &00, &00, &00, &16, &00, &00, &01, &58
	5FC0 DEFB &00, &01, &00, &60, &00, &05, &1C, &80, &00, &16, &7A, &00, &01, &58, &7E, &00
	5FD0 DEFB &04, &60, &BE, &00, &1C, &80, &DE, &00, &7A, &00, &FE, &00, &7E, &00, &FE, &00
	5FE0 DEFB &BE, &00, &FE, &00, &DE, &00, &FE, &00, &FE, &00, &F6, &00, &FE, &00, &FA, &00
	5FF0 DEFB &FE, &00, &FC, &00, &FE, &00, &B9, &00, &F6, &00, &A0, &00, &F8, &00, &1C, &00
	6000 DEFB &FD, &00, &02, &20, &B8, &00, &02, &F8, &80, &03, &00, &FC, &00, &0F, &00, &0E
	6010 DEFB &00, &1C, &80, &06, &00, &38, &88, &03, &00, &30, &88, &03, &08, &60, &88, &01
	6020 DEFB &08, &60, &88, &01, &08, &C0, &88, &01, &08, &C0, &8A, &03, &08, &C0, &88, &01
	6030 DEFB &08, &80, &88, &01, &08, &80, &88, &01, &08, &80, &88, &01, &08, &80, &88, &01
	6040 DEFB &1C, &9C, &88, &01, &32, &B2, &88, &01, &22, &A2, &88, &01, &1C, &9C, &8A, &03
	6050 DEFB &08, &80, &88, &01, &08, &80, &88, &01, &08, &80, &88, &01, &08, &80, &88, &01
	6060 DEFB &08, &80, &88, &03, &08, &80, &80, &0C, &08, &80, &80, &32, &08, &80, &01, &C8
	6070 DEFB &08, &83, &06, &20, &00, &8C, &18, &80, &00, &B2, &60, &00, &01, &C8, &80, &00
	6080 DEFB &06, &20, &00, &00, &18, &80, &00, &00, &60, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ .............@.@
	;;	................ ...........@.@@.
	;;	...............@ .........@.@@...
	;;	................ .......@.@@.....
	;;	...........@@@.. .....@.@@.......
	;;	.........@@@@.@. ...@.@@.........
	;;	.......@.@@@@@@. .@.@@...........
	;;	.....@..@.@@@@@. .@@.............
	;;	...@@@..@@.@@@@. @...............
	;;	.@@@@.@.@@@@@@@. ................
	;;	.@@@@@@.@@@@@@@. ................
	;;	@.@@@@@.@@@@@@@. ................
	;;	@@.@@@@.@@@@@@@. ................
	;;	@@@@@@@.@@@@.@@. ................
	;;	@@@@@@@.@@@@@.@. ................
	;;	@@@@@@@.@@@@@@.. ................
	;;	@@@@@@@.@.@@@..@ ................
	;;	@@@@.@@.@.@..... ................
	;;	@@@@@......@@@.. ................
	;;	@@@@@@.@......@. ..........@.....
	;;	@.@@@.........@. ........@@@@@...
	;;	@............... ......@@@@@@@@..
	;;	................ ....@@@@....@@@.
	;;	........@....... ...@@@.......@@.
	;;	........@...@... ..@@@.........@@
	;;	........@...@... ..@@..........@@
	;;	....@...@...@... .@@............@
	;;	....@...@...@... .@@............@
	;;	....@...@...@... @@.............@
	;;	....@...@...@.@. @@............@@
	;;	....@...@...@... @@.............@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @..............@
	;;	...@@@..@...@... @..@@@.........@
	;;	..@@..@.@...@... @.@@..@........@
	;;	..@...@.@...@... @.@...@........@
	;;	...@@@..@...@.@. @..@@@........@@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @..............@
	;;	....@...@...@... @.............@@
	;;	....@...@....... @...........@@..
	;;	....@...@....... @.........@@..@.
	;;	....@..........@ @.......@@..@...
	;;	....@........@@. @.....@@..@.....
	;;	...........@@... @...@@..@.......
	;;	.........@@..... @.@@..@.........
	;;	.......@@....... @@..@...........
	;;	.....@@......... ..@.............
	;;	...@@........... @...............
	;;	.@@............. ................
	;;	@............... ................

img_wall_11:
	6090 DEFB &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &01, &07, &00, &00, &06, &1E
	60A0 DEFB &00, &00, &19, &78, &00, &01, &67, &E0, &01, &07, &9F, &80, &06, &1E, &33, &00
	60B0 DEFB &19, &78, &AB, &00, &67, &E0, &AB, &00, &9F, &80, &AB, &00, &33, &00, &BB, &00
	60C0 DEFB &AB, &00, &A7, &00, &AB, &00, &9E, &00, &AB, &00, &F9, &01, &BB, &00, &E6, &07
	60D0 DEFB &A7, &00, &98, &1E, &9E, &00, &61, &78, &F9, &01, &85, &E0, &E6, &07, &1D, &80
	60E0 DEFB &98, &1E, &5B, &00, &61, &78, &77, &00, &87, &E0, &C3, &08, &1F, &80, &03, &38
	60F0 DEFB &78, &00, &07, &F0, &C0, &06, &0F, &E0, &00, &2F, &2F, &E0, &00, &AF, &CF, &E0
	6100 DEFB &0F, &77, &4F, &E0, &78, &FF, &0F, &E0, &04, &6F, &0F, &A0, &04, &7F, &0F, &E0
	6110 DEFB &04, &7F, &2F, &E0, &45, &7F, &CF, &E0, &3E, &7F, &8F, &E0, &20, &7D, &8F, &E0
	6120 DEFB &20, &7F, &8F, &E0, &20, &7F, &AF, &E0, &61, &7F, &CF, &E0, &3E, &7F, &07, &F0
	6130 DEFB &04, &6F, &31, &F8, &45, &FF, &C2, &F8, &3E, &FF, &01, &E4, &00, &77, &01, &94
	6140 DEFB &00, &AC, &00, &7C, &00, &D3, &01, &78, &00, &F7, &07, &E0, &00, &D7, &1C, &80
	6150 DEFB &00, &76, &73, &00, &81, &10, &CC, &00, &E7, &00, &30, &00, &9C, &00, &C0, &00
	6160 DEFB &73, &00, &00, &00, &CC, &00, &00, &00, &30, &00, &00, &00, &C0, &00, &00, &00
	;;	................ ................
	;;	................ ...............@
	;;	...............@ .............@@@
	;;	.............@@. ...........@@@@.
	;;	...........@@..@ .........@@@@...
	;;	.........@@..@@@ .......@@@@.....
	;;	.......@@..@@@@@ .....@@@@.......
	;;	.....@@...@@..@@ ...@@@@.........
	;;	...@@..@@.@.@.@@ .@@@@...........
	;;	.@@..@@@@.@.@.@@ @@@.............
	;;	@..@@@@@@.@.@.@@ @...............
	;;	..@@..@@@.@@@.@@ ................
	;;	@.@.@.@@@.@..@@@ ................
	;;	@.@.@.@@@..@@@@. ................
	;;	@.@.@.@@@@@@@..@ ...............@
	;;	@.@@@.@@@@@..@@. .............@@@
	;;	@.@..@@@@..@@... ...........@@@@.
	;;	@..@@@@..@@....@ .........@@@@...
	;;	@@@@@..@@....@.@ .......@@@@.....
	;;	@@@..@@....@@@.@ .....@@@@.......
	;;	@..@@....@.@@.@@ ...@@@@.........
	;;	.@@....@.@@@.@@@ .@@@@...........
	;;	@....@@@@@....@@ @@@.........@...
	;;	...@@@@@......@@ @.........@@@...
	;;	.@@@@........@@@ ........@@@@....
	;;	@@..........@@@@ .....@@.@@@.....
	;;	..........@.@@@@ ..@.@@@@@@@.....
	;;	........@@..@@@@ @.@.@@@@@@@.....
	;;	....@@@@.@..@@@@ .@@@.@@@@@@.....
	;;	.@@@@.......@@@@ @@@@@@@@@@@.....
	;;	.....@......@@@@ .@@.@@@@@.@.....
	;;	.....@......@@@@ .@@@@@@@@@@.....
	;;	.....@....@.@@@@ .@@@@@@@@@@.....
	;;	.@...@.@@@..@@@@ .@@@@@@@@@@.....
	;;	..@@@@@.@...@@@@ .@@@@@@@@@@.....
	;;	..@.....@...@@@@ .@@@@@.@@@@.....
	;;	..@.....@...@@@@ .@@@@@@@@@@.....
	;;	..@.....@.@.@@@@ .@@@@@@@@@@.....
	;;	.@@....@@@..@@@@ .@@@@@@@@@@.....
	;;	..@@@@@......@@@ .@@@@@@@@@@@....
	;;	.....@....@@...@ .@@.@@@@@@@@@...
	;;	.@...@.@@@....@. @@@@@@@@@@@@@...
	;;	..@@@@@........@ @@@@@@@@@@@..@..
	;;	...............@ .@@@.@@@@..@.@..
	;;	................ @.@.@@...@@@@@..
	;;	...............@ @@.@..@@.@@@@...
	;;	.............@@@ @@@@.@@@@@@.....
	;;	...........@@@.. @@.@.@@@@.......
	;;	.........@@@..@@ .@@@.@@.........
	;;	@......@@@..@@.. ...@............
	;;	@@@..@@@..@@.... ................
	;;	@..@@@..@@...... ................
	;;	.@@@..@@........ ................
	;;	@@..@@.......... ................
	;;	..@@............ ................
	;;	@@.............. ................

img_wall_12:
	6170 DEFB &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &01, &07, &00, &00, &06, &1E
	6180 DEFB &00, &00, &19, &78, &00, &01, &67, &E0, &01, &07, &9F, &80, &06, &1E, &33, &00
	6190 DEFB &19, &78, &AB, &00, &67, &E0, &AB, &00, &9F, &80, &AB, &00, &33, &00, &BB, &00
	61A0 DEFB &AB, &00, &A7, &00, &AB, &00, &9E, &00, &AB, &00, &F9, &01, &BB, &00, &E6, &07
	61B0 DEFB &A7, &00, &98, &1E, &9E, &00, &60, &78, &F9, &01, &84, &E0, &E6, &07, &1E, &80
	61C0 DEFB &98, &1E, &72, &00, &61, &78, &C2, &08, &87, &E0, &02, &18, &1C, &80, &A2, &A8
	61D0 DEFB &73, &03, &62, &68, &CF, &0F, &C2, &C8, &C3, &03, &82, &98, &88, &08, &02, &18
	61E0 DEFB &93, &13, &A2, &A8, &AB, &2B, &62, &68, &9F, &1F, &C2, &C8, &87, &07, &82, &98
	61F0 DEFB &88, &08, &02, &18, &93, &13, &A2, &A8, &AB, &2B, &62, &68, &9F, &1F, &C2, &C8
	6200 DEFB &83, &03, &82, &98, &88, &08, &02, &18, &93, &13, &A2, &A8, &AB, &2B, &62, &68
	6210 DEFB &9F, &1F, &C2, &C8, &87, &07, &82, &98, &88, &08, &02, &38, &85, &05, &06, &70
	6220 DEFB &87, &07, &0C, &40, &82, &1A, &3B, &00, &80, &3C, &E7, &00, &83, &30, &9C, &00
	6230 DEFB &8E, &00, &73, &00, &F9, &00, &CC, &00, &E7, &00, &30, &00, &1C, &00, &C0, &00
	6240 DEFB &F3, &00, &00, &00, &CC, &00, &00, &00, &30, &00, &00, &00, &C0, &00, &00, &00
	;;	................ ................
	;;	................ ...............@
	;;	...............@ .............@@@
	;;	.............@@. ...........@@@@.
	;;	...........@@..@ .........@@@@...
	;;	.........@@..@@@ .......@@@@.....
	;;	.......@@..@@@@@ .....@@@@.......
	;;	.....@@...@@..@@ ...@@@@.........
	;;	...@@..@@.@.@.@@ .@@@@...........
	;;	.@@..@@@@.@.@.@@ @@@.............
	;;	@..@@@@@@.@.@.@@ @...............
	;;	..@@..@@@.@@@.@@ ................
	;;	@.@.@.@@@.@..@@@ ................
	;;	@.@.@.@@@..@@@@. ................
	;;	@.@.@.@@@@@@@..@ ...............@
	;;	@.@@@.@@@@@..@@. .............@@@
	;;	@.@..@@@@..@@... ...........@@@@.
	;;	@..@@@@..@@..... .........@@@@...
	;;	@@@@@..@@....@.. .......@@@@.....
	;;	@@@..@@....@@@@. .....@@@@.......
	;;	@..@@....@@@..@. ...@@@@.........
	;;	.@@....@@@....@. .@@@@.......@...
	;;	@....@@@......@. @@@........@@...
	;;	...@@@..@.@...@. @.......@.@.@...
	;;	.@@@..@@.@@...@. ......@@.@@.@...
	;;	@@..@@@@@@....@. ....@@@@@@..@...
	;;	@@....@@@.....@. ......@@@..@@...
	;;	@...@.........@. ....@......@@...
	;;	@..@..@@@.@...@. ...@..@@@.@.@...
	;;	@.@.@.@@.@@...@. ..@.@.@@.@@.@...
	;;	@..@@@@@@@....@. ...@@@@@@@..@...
	;;	@....@@@@.....@. .....@@@@..@@...
	;;	@...@.........@. ....@......@@...
	;;	@..@..@@@.@...@. ...@..@@@.@.@...
	;;	@.@.@.@@.@@...@. ..@.@.@@.@@.@...
	;;	@..@@@@@@@....@. ...@@@@@@@..@...
	;;	@.....@@@.....@. ......@@@..@@...
	;;	@...@.........@. ....@......@@...
	;;	@..@..@@@.@...@. ...@..@@@.@.@...
	;;	@.@.@.@@.@@...@. ..@.@.@@.@@.@...
	;;	@..@@@@@@@....@. ...@@@@@@@..@...
	;;	@....@@@@.....@. .....@@@@..@@...
	;;	@...@.........@. ....@.....@@@...
	;;	@....@.@.....@@. .....@.@.@@@....
	;;	@....@@@....@@.. .....@@@.@......
	;;	@.....@...@@@.@@ ...@@.@.........
	;;	@.......@@@..@@@ ..@@@@..........
	;;	@.....@@@..@@@.. ..@@............
	;;	@...@@@..@@@..@@ ................
	;;	@@@@@..@@@..@@.. ................
	;;	@@@..@@@..@@.... ................
	;;	...@@@..@@...... ................
	;;	@@@@..@@........ ................
	;;	@@..@@.......... ................
	;;	..@@............ ................
	;;	@@.............. ................

img_wall_13:
	6250 DEFB &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &01, &07, &00, &00, &06, &1E
	6260 DEFB &00, &00, &19, &78, &00, &01, &67, &E0, &01, &07, &9F, &80, &06, &1E, &33, &00
	6270 DEFB &19, &78, &AB, &00, &67, &E0, &AB, &00, &9F, &80, &AB, &00, &33, &00, &BB, &00
	6280 DEFB &AB, &00, &A7, &00, &AB, &00, &9E, &00, &AB, &00, &F9, &01, &BB, &00, &E6, &07
	6290 DEFB &A7, &00, &98, &1E, &9E, &00, &60, &78, &F9, &01, &80, &E0, &E6, &07, &1C, &80
	62A0 DEFB &98, &1E, &3E, &00, &60, &78, &46, &00, &81, &E0, &FA, &00, &17, &80, &FA, &00
	62B0 DEFB &6F, &00, &0C, &00, &DC, &00, &04, &70, &BA, &02, &86, &B0, &71, &01, &02, &38
	62C0 DEFB &60, &00, &C2, &D8, &E0, &00, &82, &98, &C0, &00, &C2, &D8, &C0, &00, &82, &98
	62D0 DEFB &80, &00, &C2, &D8, &80, &00, &82, &98, &80, &00, &C2, &D8, &80, &00, &82, &98
	62E0 DEFB &80, &00, &C2, &D8, &80, &00, &82, &98, &80, &00, &C2, &D8, &80, &00, &82, &98
	62F0 DEFB &83, &03, &42, &58, &8D, &0D, &02, &28, &B4, &34, &02, &F0, &90, &13, &06, &E0
	6300 DEFB &80, &0F, &1E, &80, &80, &3E, &79, &00, &81, &38, &E7, &00, &87, &20, &9C, &00
	6310 DEFB &9E, &00, &73, &00, &F9, &00, &CC, &00, &E7, &00, &30, &00, &1C, &00, &C0, &00
	6320 DEFB &F3, &00, &00, &00, &CC, &00, &00, &00, &30, &00, &00, &00, &C0, &00, &00, &00
	;;	................ ................
	;;	................ ...............@
	;;	...............@ .............@@@
	;;	.............@@. ...........@@@@.
	;;	...........@@..@ .........@@@@...
	;;	.........@@..@@@ .......@@@@.....
	;;	.......@@..@@@@@ .....@@@@.......
	;;	.....@@...@@..@@ ...@@@@.........
	;;	...@@..@@.@.@.@@ .@@@@...........
	;;	.@@..@@@@.@.@.@@ @@@.............
	;;	@..@@@@@@.@.@.@@ @...............
	;;	..@@..@@@.@@@.@@ ................
	;;	@.@.@.@@@.@..@@@ ................
	;;	@.@.@.@@@..@@@@. ................
	;;	@.@.@.@@@@@@@..@ ...............@
	;;	@.@@@.@@@@@..@@. .............@@@
	;;	@.@..@@@@..@@... ...........@@@@.
	;;	@..@@@@..@@..... .........@@@@...
	;;	@@@@@..@@....... .......@@@@.....
	;;	@@@..@@....@@@.. .....@@@@.......
	;;	@..@@.....@@@@@. ...@@@@.........
	;;	.@@......@...@@. .@@@@...........
	;;	@......@@@@@@.@. @@@.............
	;;	...@.@@@@@@@@.@. @...............
	;;	.@@.@@@@....@@.. ................
	;;	@@.@@@.......@.. .........@@@....
	;;	@.@@@.@.@....@@. ......@.@.@@....
	;;	.@@@...@......@. .......@..@@@...
	;;	.@@.....@@....@. ........@@.@@...
	;;	@@@.....@.....@. ........@..@@...
	;;	@@......@@....@. ........@@.@@...
	;;	@@......@.....@. ........@..@@...
	;;	@.......@@....@. ........@@.@@...
	;;	@.......@.....@. ........@..@@...
	;;	@.......@@....@. ........@@.@@...
	;;	@.......@.....@. ........@..@@...
	;;	@.......@@....@. ........@@.@@...
	;;	@.......@.....@. ........@..@@...
	;;	@.......@@....@. ........@@.@@...
	;;	@.......@.....@. ........@..@@...
	;;	@.....@@.@....@. ......@@.@.@@...
	;;	@...@@.@......@. ....@@.@..@.@...
	;;	@.@@.@........@. ..@@.@..@@@@....
	;;	@..@.........@@. ...@..@@@@@.....
	;;	@..........@@@@. ....@@@@@.......
	;;	@........@@@@..@ ..@@@@@.........
	;;	@......@@@@..@@@ ..@@@...........
	;;	@....@@@@..@@@.. ..@.............
	;;	@..@@@@..@@@..@@ ................
	;;	@@@@@..@@@..@@.. ................
	;;	@@@..@@@..@@.... ................
	;;	...@@@..@@...... ................
	;;	@@@@..@@........ ................
	;;	@@..@@.......... ................
	;;	..@@............ ................
	;;	@@.............. ................

img_wall_14:
	6330 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &C0, &00, &02, &00, &40
	6340 DEFB &00, &02, &00, &20, &00, &01, &00, &20, &00, &01, &0C, &10, &08, &02, &02, &10
	6350 DEFB &34, &01, &11, &20, &42, &00, &01, &90, &42, &00, &81, &50, &84, &00, &41, &20
	6360 DEFB &80, &00, &01, &00, &80, &00, &02, &00, &80, &00, &01, &00, &98, &00, &49, &00
	6370 DEFB &94, &00, &29, &00, &44, &00, &BB, &00, &3C, &00, &FF, &00, &0C, &00, &E4, &00
	6380 DEFB &3D, &00, &D0, &13, &7F, &00, &C0, &0D, &FF, &00, &00, &34, &E4, &00, &03, &D0
	6390 DEFB &D0, &13, &05, &40, &C0, &0D, &11, &00, &00, &34, &DB, &00, &03, &D0, &18, &00
	63A0 DEFB &0F, &40, &ED, &00, &21, &00, &FD, &00, &CA, &00, &7C, &00, &3F, &00, &29, &00
	63B0 DEFB &E1, &00, &BB, &00, &8A, &00, &38, &00, &3F, &00, &7D, &00, &E1, &00, &A9, &00
	63C0 DEFB &8A, &00, &3B, &00, &3F, &00, &B8, &00, &61, &00, &7D, &00, &CA, &00, &28, &00
	63D0 DEFB &BF, &00, &BB, &00, &61, &00, &BB, &00, &CA, &00, &7C, &00, &BF, &00, &A9, &00
	63E0 DEFB &3F, &00, &FB, &00, &F0, &00, &F0, &00, &E5, &00, &47, &00, &CF, &00, &8D, &00
	63F0 DEFB &DF, &00, &77, &00, &D8, &00, &D8, &00, &37, &00, &70, &00, &8D, &00, &80, &00
	6400 DEFB &77, &00, &00, &00, &D8, &00, &00, &00, &70, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ .......@@@......
	;;	................ ......@..@......
	;;	................ ......@...@.....
	;;	................ .......@..@.....
	;;	............@@.. .......@...@....
	;;	....@.........@. ......@....@....
	;;	..@@.@.....@...@ .......@..@.....
	;;	.@....@........@ ........@..@....
	;;	.@....@.@......@ .........@.@....
	;;	@....@...@.....@ ..........@.....
	;;	@..............@ ................
	;;	@.............@. ................
	;;	@..............@ ................
	;;	@..@@....@..@..@ ................
	;;	@..@.@....@.@..@ ................
	;;	.@...@..@.@@@.@@ ................
	;;	..@@@@..@@@@@@@@ ................
	;;	....@@..@@@..@.. ................
	;;	..@@@@.@@@.@.... ...........@..@@
	;;	.@@@@@@@@@...... ............@@.@
	;;	@@@@@@@@........ ..........@@.@..
	;;	@@@..@........@@ ........@@.@....
	;;	@@.@.........@.@ ...@..@@.@......
	;;	@@.........@...@ ....@@.@........
	;;	........@@.@@.@@ ..@@.@..........
	;;	......@@...@@... @@.@............
	;;	....@@@@@@@.@@.@ .@..............
	;;	..@....@@@@@@@.@ ................
	;;	@@..@.@..@@@@@.. ................
	;;	..@@@@@@..@.@..@ ................
	;;	@@@....@@.@@@.@@ ................
	;;	@...@.@...@@@... ................
	;;	..@@@@@@.@@@@@.@ ................
	;;	@@@....@@.@.@..@ ................
	;;	@...@.@...@@@.@@ ................
	;;	..@@@@@@@.@@@... ................
	;;	.@@....@.@@@@@.@ ................
	;;	@@..@.@...@.@... ................
	;;	@.@@@@@@@.@@@.@@ ................
	;;	.@@....@@.@@@.@@ ................
	;;	@@..@.@..@@@@@.. ................
	;;	@.@@@@@@@.@.@..@ ................
	;;	..@@@@@@@@@@@.@@ ................
	;;	@@@@....@@@@.... ................
	;;	@@@..@.@.@...@@@ ................
	;;	@@..@@@@@...@@.@ ................
	;;	@@.@@@@@.@@@.@@@ ................
	;;	@@.@@...@@.@@... ................
	;;	..@@.@@@.@@@.... ................
	;;	@...@@.@@....... ................
	;;	.@@@.@@@........ ................
	;;	@@.@@........... ................
	;;	.@@@............ ................
	;;	@............... ................

img_wall_15:
	6410 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &C0, &00, &02, &00, &40
	6420 DEFB &00, &02, &00, &20, &00, &01, &00, &20, &00, &01, &0C, &10, &08, &02, &02, &10
	6430 DEFB &34, &01, &11, &20, &42, &00, &01, &90, &42, &00, &81, &50, &84, &00, &41, &20
	6440 DEFB &80, &00, &01, &00, &80, &00, &02, &00, &80, &00, &01, &00, &98, &00, &49, &00
	6450 DEFB &94, &00, &29, &00, &44, &00, &BB, &00, &3C, &00, &FF, &00, &0C, &00, &E4, &00
	6460 DEFB &3D, &00, &D0, &13, &7F, &00, &C0, &0D, &FF, &00, &00, &34, &E4, &00, &02, &D0
	6470 DEFB &D0, &13, &02, &40, &C0, &0D, &04, &00, &00, &34, &04, &00, &00, &D0, &68, &60
	6480 DEFB &03, &43, &88, &80, &8E, &0E, &70, &70, &5D, &1D, &F8, &F8, &2B, &0B, &FC, &FC
	6490 DEFB &17, &07, &FC, &FC, &27, &27, &5E, &5E, &6F, &6F, &96, &96, &6E, &6E, &7E, &7E
	64A0 DEFB &6F, &6F, &6E, &6E, &6E, &6E, &9E, &9E, &6F, &6F, &AC, &AC, &37, &37, &FC, &FC
	64B0 DEFB &37, &37, &F8, &F8, &1B, &1B, &F0, &F2, &0C, &0C, &C0, &CE, &03, &03, &00, &30
	64C0 DEFB &00, &00, &07, &C0, &38, &3B, &08, &00, &7C, &7C, &77, &00, &58, &58, &8D, &00
	64D0 DEFB &37, &30, &77, &00, &08, &00, &D8, &00, &77, &00, &70, &00, &0D, &00, &80, &00
	64E0 DEFB &77, &00, &00, &00, &D8, &00, &00, &00, &70, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ .......@@@......
	;;	................ ......@..@......
	;;	................ ......@...@.....
	;;	................ .......@..@.....
	;;	............@@.. .......@...@....
	;;	....@.........@. ......@....@....
	;;	..@@.@.....@...@ .......@..@.....
	;;	.@....@........@ ........@..@....
	;;	.@....@.@......@ .........@.@....
	;;	@....@...@.....@ ..........@.....
	;;	@..............@ ................
	;;	@.............@. ................
	;;	@..............@ ................
	;;	@..@@....@..@..@ ................
	;;	@..@.@....@.@..@ ................
	;;	.@...@..@.@@@.@@ ................
	;;	..@@@@..@@@@@@@@ ................
	;;	....@@..@@@..@.. ................
	;;	..@@@@.@@@.@.... ...........@..@@
	;;	.@@@@@@@@@...... ............@@.@
	;;	@@@@@@@@........ ..........@@.@..
	;;	@@@..@........@. ........@@.@....
	;;	@@.@..........@. ...@..@@.@......
	;;	@@...........@.. ....@@.@........
	;;	.............@.. ..@@.@..........
	;;	.........@@.@... @@.@.....@@.....
	;;	......@@@...@... .@....@@@.......
	;;	@...@@@..@@@.... ....@@@..@@@....
	;;	.@.@@@.@@@@@@... ...@@@.@@@@@@...
	;;	..@.@.@@@@@@@@.. ....@.@@@@@@@@..
	;;	...@.@@@@@@@@@.. .....@@@@@@@@@..
	;;	..@..@@@.@.@@@@. ..@..@@@.@.@@@@.
	;;	.@@.@@@@@..@.@@. .@@.@@@@@..@.@@.
	;;	.@@.@@@..@@@@@@. .@@.@@@..@@@@@@.
	;;	.@@.@@@@.@@.@@@. .@@.@@@@.@@.@@@.
	;;	.@@.@@@.@..@@@@. .@@.@@@.@..@@@@.
	;;	.@@.@@@@@.@.@@.. .@@.@@@@@.@.@@..
	;;	..@@.@@@@@@@@@.. ..@@.@@@@@@@@@..
	;;	..@@.@@@@@@@@... ..@@.@@@@@@@@...
	;;	...@@.@@@@@@.... ...@@.@@@@@@..@.
	;;	....@@..@@...... ....@@..@@..@@@.
	;;	......@@........ ......@@..@@....
	;;	.............@@@ ........@@......
	;;	..@@@.......@... ..@@@.@@........
	;;	.@@@@@...@@@.@@@ .@@@@@..........
	;;	.@.@@...@...@@.@ .@.@@...........
	;;	..@@.@@@.@@@.@@@ ..@@............
	;;	....@...@@.@@... ................
	;;	.@@@.@@@.@@@.... ................
	;;	....@@.@@....... ................
	;;	.@@@.@@@........ ................
	;;	@@.@@........... ................
	;;	.@@@............ ................
	;;	@............... ................

img_wall_16:
	64F0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &C0, &00, &02, &00, &40
	6500 DEFB &00, &02, &00, &20, &00, &01, &00, &20, &00, &01, &0C, &10, &08, &02, &02, &10
	6510 DEFB &34, &01, &11, &20, &42, &00, &01, &90, &42, &00, &81, &50, &84, &00, &41, &20
	6520 DEFB &80, &00, &01, &00, &80, &00, &02, &00, &80, &00, &01, &00, &98, &00, &49, &00
	6530 DEFB &94, &00, &29, &00, &44, &00, &BB, &00, &3C, &00, &FF, &00, &0C, &00, &E4, &00
	6540 DEFB &3D, &00, &D0, &13, &7F, &00, &C0, &0D, &FF, &00, &00, &34, &E4, &00, &03, &D0
	6550 DEFB &D0, &13, &0E, &40, &C0, &0D, &32, &00, &00, &34, &82, &80, &03, &D3, &E2, &E0
	6560 DEFB &0F, &4F, &F2, &F0, &3F, &3F, &FA, &F8, &BF, &3F, &18, &18, &BC, &3C, &0C, &AC
	6570 DEFB &B8, &3A, &04, &E4, &B8, &39, &06, &16, &B0, &32, &02, &0A, &B0, &36, &22, &2A
	6580 DEFB &B0, &32, &02, &0A, &B0, &36, &02, &0A, &B8, &39, &06, &16, &B8, &3A, &04, &E4
	6590 DEFB &BC, &3C, &0C, &AC, &BF, &3F, &18, &18, &BF, &3F, &FA, &F8, &BF, &3F, &F2, &F0
	65A0 DEFB &BF, &3F, &E7, &E0, &BF, &3F, &88, &80, &BC, &3C, &77, &00, &80, &00, &8D, &00
	65B0 DEFB &87, &00, &77, &00, &88, &00, &D8, &00, &F7, &00, &70, &00, &8D, &00, &80, &00
	65C0 DEFB &77, &00, &00, &00, &D8, &00, &00, &00, &70, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ .......@@@......
	;;	................ ......@..@......
	;;	................ ......@...@.....
	;;	................ .......@..@.....
	;;	............@@.. .......@...@....
	;;	....@.........@. ......@....@....
	;;	..@@.@.....@...@ .......@..@.....
	;;	.@....@........@ ........@..@....
	;;	.@....@.@......@ .........@.@....
	;;	@....@...@.....@ ..........@.....
	;;	@..............@ ................
	;;	@.............@. ................
	;;	@..............@ ................
	;;	@..@@....@..@..@ ................
	;;	@..@.@....@.@..@ ................
	;;	.@...@..@.@@@.@@ ................
	;;	..@@@@..@@@@@@@@ ................
	;;	....@@..@@@..@.. ................
	;;	..@@@@.@@@.@.... ...........@..@@
	;;	.@@@@@@@@@...... ............@@.@
	;;	@@@@@@@@........ ..........@@.@..
	;;	@@@..@........@@ ........@@.@....
	;;	@@.@........@@@. ...@..@@.@......
	;;	@@........@@..@. ....@@.@........
	;;	........@.....@. ..@@.@..@.......
	;;	......@@@@@...@. @@.@..@@@@@.....
	;;	....@@@@@@@@..@. .@..@@@@@@@@....
	;;	..@@@@@@@@@@@.@. ..@@@@@@@@@@@...
	;;	@.@@@@@@...@@... ..@@@@@@...@@...
	;;	@.@@@@......@@.. ..@@@@..@.@.@@..
	;;	@.@@@........@.. ..@@@.@.@@@..@..
	;;	@.@@@........@@. ..@@@..@...@.@@.
	;;	@.@@..........@. ..@@..@.....@.@.
	;;	@.@@......@...@. ..@@.@@...@.@.@.
	;;	@.@@..........@. ..@@..@.....@.@.
	;;	@.@@..........@. ..@@.@@.....@.@.
	;;	@.@@@........@@. ..@@@..@...@.@@.
	;;	@.@@@........@.. ..@@@.@.@@@..@..
	;;	@.@@@@......@@.. ..@@@@..@.@.@@..
	;;	@.@@@@@@...@@... ..@@@@@@...@@...
	;;	@.@@@@@@@@@@@.@. ..@@@@@@@@@@@...
	;;	@.@@@@@@@@@@..@. ..@@@@@@@@@@....
	;;	@.@@@@@@@@@..@@@ ..@@@@@@@@@.....
	;;	@.@@@@@@@...@... ..@@@@@@@.......
	;;	@.@@@@...@@@.@@@ ..@@@@..........
	;;	@.......@...@@.@ ................
	;;	@....@@@.@@@.@@@ ................
	;;	@...@...@@.@@... ................
	;;	@@@@.@@@.@@@.... ................
	;;	@...@@.@@....... ................
	;;	.@@@.@@@........ ................
	;;	@@.@@........... ................
	;;	.@@@............ ................
	;;	@............... ................

img_wall_17:
	65D0 DEFB &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &03, &00, &00, &00, &1A, &00
	65E0 DEFB &00, &00, &56, &00, &01, &00, &56, &00, &05, &00, &6D, &00, &17, &00, &6A, &00
	65F0 DEFB &52, &00, &6B, &00, &6C, &00, &DB, &00, &2B, &00, &12, &00, &5B, &00, &B5, &00
	6600 DEFB &DB, &00, &66, &00, &B6, &00, &B9, &00, &57, &00, &2D, &00, &55, &00, &4B, &00
	6610 DEFB &B4, &00, &A6, &00, &6B, &00, &FA, &00, &A6, &00, &8A, &00, &B4, &00, &04, &00
	6620 DEFB &48, &00, &A4, &00, &9A, &00, &52, &00, &52, &00, &56, &00, &A5, &00, &A9, &00
	6630 DEFB &65, &00, &B6, &00, &45, &00, &21, &00, &95, &00, &8A, &00, &D4, &00, &52, &00
	6640 DEFB &52, &00, &AA, &00, &91, &00, &AA, &00, &95, &00, &6D, &00, &CD, &00, &56, &00
	6650 DEFB &8D, &00, &22, &00, &D4, &00, &4A, &00, &45, &00, &6A, &00, &AD, &00, &6D, &00
	6660 DEFB &A9, &00, &6D, &00, &A5, &00, &32, &00, &AD, &00, &BB, &00, &8D, &00, &92, &00
	6670 DEFB &AC, &00, &95, &00, &54, &00, &DB, &00, &D6, &00, &9A, &00, &46, &00, &D2, &00
	6680 DEFB &DA, &00, &4B, &00, &AB, &00, &5B, &00, &69, &00, &6D, &00, &45, &00, &AD, &00
	6690 DEFB &B6, &00, &B6, &00, &6A, &00, &A8, &00, &5A, &00, &60, &00, &AB, &00, &80, &00
	66A0 DEFB &6C, &00, &00, &00, &58, &00, &00, &00, &60, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	...............@ ................
	;;	..............@@ ................
	;;	...........@@.@. ................
	;;	.........@.@.@@. ................
	;;	.......@.@.@.@@. ................
	;;	.....@.@.@@.@@.@ ................
	;;	...@.@@@.@@.@.@. ................
	;;	.@.@..@..@@.@.@@ ................
	;;	.@@.@@..@@.@@.@@ ................
	;;	..@.@.@@...@..@. ................
	;;	.@.@@.@@@.@@.@.@ ................
	;;	@@.@@.@@.@@..@@. ................
	;;	@.@@.@@.@.@@@..@ ................
	;;	.@.@.@@@..@.@@.@ ................
	;;	.@.@.@.@.@..@.@@ ................
	;;	@.@@.@..@.@..@@. ................
	;;	.@@.@.@@@@@@@.@. ................
	;;	@.@..@@.@...@.@. ................
	;;	@.@@.@.......@.. ................
	;;	.@..@...@.@..@.. ................
	;;	@..@@.@..@.@..@. ................
	;;	.@.@..@..@.@.@@. ................
	;;	@.@..@.@@.@.@..@ ................
	;;	.@@..@.@@.@@.@@. ................
	;;	.@...@.@..@....@ ................
	;;	@..@.@.@@...@.@. ................
	;;	@@.@.@...@.@..@. ................
	;;	.@.@..@.@.@.@.@. ................
	;;	@..@...@@.@.@.@. ................
	;;	@..@.@.@.@@.@@.@ ................
	;;	@@..@@.@.@.@.@@. ................
	;;	@...@@.@..@...@. ................
	;;	@@.@.@...@..@.@. ................
	;;	.@...@.@.@@.@.@. ................
	;;	@.@.@@.@.@@.@@.@ ................
	;;	@.@.@..@.@@.@@.@ ................
	;;	@.@..@.@..@@..@. ................
	;;	@.@.@@.@@.@@@.@@ ................
	;;	@...@@.@@..@..@. ................
	;;	@.@.@@..@..@.@.@ ................
	;;	.@.@.@..@@.@@.@@ ................
	;;	@@.@.@@.@..@@.@. ................
	;;	.@...@@.@@.@..@. ................
	;;	@@.@@.@..@..@.@@ ................
	;;	@.@.@.@@.@.@@.@@ ................
	;;	.@@.@..@.@@.@@.@ ................
	;;	.@...@.@@.@.@@.@ ................
	;;	@.@@.@@.@.@@.@@. ................
	;;	.@@.@.@.@.@.@... ................
	;;	.@.@@.@..@@..... ................
	;;	@.@.@.@@@....... ................
	;;	.@@.@@.......... ................
	;;	.@.@@........... ................
	;;	.@@............. ................
	;;	@............... ................

img_wall_18:
	66B0 DEFB &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &03, &00, &00, &00, &1A, &00
	66C0 DEFB &00, &00, &56, &00, &01, &00, &56, &00, &05, &00, &6D, &00, &17, &00, &6A, &00
	66D0 DEFB &52, &00, &6B, &00, &6C, &00, &DB, &00, &2B, &00, &12, &00, &5B, &00, &B5, &00
	66E0 DEFB &DB, &00, &66, &00, &B6, &00, &B9, &00, &57, &00, &2D, &00, &55, &00, &4B, &00
	66F0 DEFB &B4, &00, &A6, &00, &6B, &00, &FA, &00, &A6, &00, &8A, &00, &B4, &00, &05, &00
	6700 DEFB &49, &01, &55, &00, &9B, &03, &12, &00, &53, &03, &56, &00, &A3, &03, &6B, &00
	6710 DEFB &63, &03, &05, &00, &43, &03, &3B, &38, &83, &03, &F4, &F0, &C3, &03, &C3, &C0
	6720 DEFB &4F, &0F, &15, &00, &BF, &3F, &0A, &00, &B3, &33, &17, &00, &83, &03, &04, &00
	6730 DEFB &83, &03, &3B, &38, &C3, &03, &F5, &F0, &43, &03, &C6, &C0, &4F, &0F, &15, &00
	6740 DEFB &3F, &3F, &0D, &00, &B3, &33, &15, &00, &C3, &03, &06, &00, &43, &03, &39, &38
	6750 DEFB &83, &03, &F5, &F0, &43, &03, &CA, &C0, &CF, &0F, &1A, &00, &5F, &1F, &2A, &00
	6760 DEFB &D3, &13, &35, &00, &E3, &03, &54, &00, &A3, &03, &2B, &00, &B3, &03, &69, &00
	6770 DEFB &59, &01, &16, &00, &EC, &00, &78, &00, &6B, &00, &A0, &00, &B1, &00, &80, &00
	6780 DEFB &DE, &00, &00, &00, &50, &00, &00, &00, &60, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	...............@ ................
	;;	..............@@ ................
	;;	...........@@.@. ................
	;;	.........@.@.@@. ................
	;;	.......@.@.@.@@. ................
	;;	.....@.@.@@.@@.@ ................
	;;	...@.@@@.@@.@.@. ................
	;;	.@.@..@..@@.@.@@ ................
	;;	.@@.@@..@@.@@.@@ ................
	;;	..@.@.@@...@..@. ................
	;;	.@.@@.@@@.@@.@.@ ................
	;;	@@.@@.@@.@@..@@. ................
	;;	@.@@.@@.@.@@@..@ ................
	;;	.@.@.@@@..@.@@.@ ................
	;;	.@.@.@.@.@..@.@@ ................
	;;	@.@@.@..@.@..@@. ................
	;;	.@@.@.@@@@@@@.@. ................
	;;	@.@..@@.@...@.@. ................
	;;	@.@@.@.......@.@ ................
	;;	.@..@..@.@.@.@.@ .......@........
	;;	@..@@.@@...@..@. ......@@........
	;;	.@.@..@@.@.@.@@. ......@@........
	;;	@.@...@@.@@.@.@@ ......@@........
	;;	.@@...@@.....@.@ ......@@........
	;;	.@....@@..@@@.@@ ......@@..@@@...
	;;	@.....@@@@@@.@.. ......@@@@@@....
	;;	@@....@@@@....@@ ......@@@@......
	;;	.@..@@@@...@.@.@ ....@@@@........
	;;	@.@@@@@@....@.@. ..@@@@@@........
	;;	@.@@..@@...@.@@@ ..@@..@@........
	;;	@.....@@.....@.. ......@@........
	;;	@.....@@..@@@.@@ ......@@..@@@...
	;;	@@....@@@@@@.@.@ ......@@@@@@....
	;;	.@....@@@@...@@. ......@@@@......
	;;	.@..@@@@...@.@.@ ....@@@@........
	;;	..@@@@@@....@@.@ ..@@@@@@........
	;;	@.@@..@@...@.@.@ ..@@..@@........
	;;	@@....@@.....@@. ......@@........
	;;	.@....@@..@@@..@ ......@@..@@@...
	;;	@.....@@@@@@.@.@ ......@@@@@@....
	;;	.@....@@@@..@.@. ......@@@@......
	;;	@@..@@@@...@@.@. ....@@@@........
	;;	.@.@@@@@..@.@.@. ...@@@@@........
	;;	@@.@..@@..@@.@.@ ...@..@@........
	;;	@@@...@@.@.@.@.. ......@@........
	;;	@.@...@@..@.@.@@ ......@@........
	;;	@.@@..@@.@@.@..@ ......@@........
	;;	.@.@@..@...@.@@. .......@........
	;;	@@@.@@...@@@@... ................
	;;	.@@.@.@@@.@..... ................
	;;	@.@@...@@....... ................
	;;	@@.@@@@......... ................
	;;	.@.@............ ................
	;;	.@@............. ................
	;;	@............... ................

img_wall_19:
	6790 DEFB &00, &00, &00, &00, &00, &00, &81, &80, &03, &03, &CB, &C0, &05, &05, &AB, &A0
	67A0 DEFB &04, &04, &6A, &60, &05, &05, &E5, &E0, &05, &05, &E5, &E0, &05, &05, &EB, &E0
	67B0 DEFB &45, &05, &E6, &E0, &45, &05, &EA, &E0, &85, &05, &EA, &E0, &A5, &05, &E4, &E0
	67C0 DEFB &45, &05, &E4, &E0, &85, &05, &E2, &E0, &45, &05, &E6, &E0, &85, &05, &E9, &E0
	67D0 DEFB &45, &05, &E6, &E0, &45, &05, &E1, &E0, &85, &05, &EA, &E0, &C5, &05, &E2, &E0
	67E0 DEFB &45, &05, &EA, &E0, &A5, &05, &EA, &E0, &85, &05, &ED, &E0, &C5, &05, &E6, &E0
	67F0 DEFB &A5, &05, &E2, &E0, &C5, &05, &EA, &E0, &45, &05, &EA, &E0, &85, &05, &ED, &E0
	6800 DEFB &A5, &05, &ED, &E0, &85, &05, &E2, &E0, &A5, &05, &EB, &E0, &85, &05, &E2, &E0
	6810 DEFB &85, &05, &E5, &E0, &45, &05, &EB, &E0, &C5, &05, &EA, &E0, &45, &05, &E2, &E0
	6820 DEFB &C5, &05, &EB, &E0, &A5, &05, &EB, &E0, &45, &05, &ED, &E0, &45, &05, &ED, &E0
	6830 DEFB &A5, &05, &E6, &E0, &85, &05, &ED, &E0, &45, &05, &E5, &E0, &A5, &05, &ED, &E0
	6840 DEFB &85, &05, &E3, &E0, &65, &05, &E1, &E0, &A5, &05, &E0, &E0, &C5, &05, &E0, &E0
	6850 DEFB &85, &05, &E0, &E0, &C5, &05, &E0, &E0, &44, &04, &A0, &A0, &C6, &06, &60, &60
	6860 DEFB &43, &03, &C0, &C0, &40, &00, &00, &00, &80, &00, &00, &00, &00, &00, &00, &00
	;;	................ ................
	;;	........@......@ ........@.......
	;;	......@@@@..@.@@ ......@@@@......
	;;	.....@.@@.@.@.@@ .....@.@@.@.....
	;;	.....@...@@.@.@. .....@...@@.....
	;;	.....@.@@@@..@.@ .....@.@@@@.....
	;;	.....@.@@@@..@.@ .....@.@@@@.....
	;;	.....@.@@@@.@.@@ .....@.@@@@.....
	;;	.@...@.@@@@..@@. .....@.@@@@.....
	;;	.@...@.@@@@.@.@. .....@.@@@@.....
	;;	@....@.@@@@.@.@. .....@.@@@@.....
	;;	@.@..@.@@@@..@.. .....@.@@@@.....
	;;	.@...@.@@@@..@.. .....@.@@@@.....
	;;	@....@.@@@@...@. .....@.@@@@.....
	;;	.@...@.@@@@..@@. .....@.@@@@.....
	;;	@....@.@@@@.@..@ .....@.@@@@.....
	;;	.@...@.@@@@..@@. .....@.@@@@.....
	;;	.@...@.@@@@....@ .....@.@@@@.....
	;;	@....@.@@@@.@.@. .....@.@@@@.....
	;;	@@...@.@@@@...@. .....@.@@@@.....
	;;	.@...@.@@@@.@.@. .....@.@@@@.....
	;;	@.@..@.@@@@.@.@. .....@.@@@@.....
	;;	@....@.@@@@.@@.@ .....@.@@@@.....
	;;	@@...@.@@@@..@@. .....@.@@@@.....
	;;	@.@..@.@@@@...@. .....@.@@@@.....
	;;	@@...@.@@@@.@.@. .....@.@@@@.....
	;;	.@...@.@@@@.@.@. .....@.@@@@.....
	;;	@....@.@@@@.@@.@ .....@.@@@@.....
	;;	@.@..@.@@@@.@@.@ .....@.@@@@.....
	;;	@....@.@@@@...@. .....@.@@@@.....
	;;	@.@..@.@@@@.@.@@ .....@.@@@@.....
	;;	@....@.@@@@...@. .....@.@@@@.....
	;;	@....@.@@@@..@.@ .....@.@@@@.....
	;;	.@...@.@@@@.@.@@ .....@.@@@@.....
	;;	@@...@.@@@@.@.@. .....@.@@@@.....
	;;	.@...@.@@@@...@. .....@.@@@@.....
	;;	@@...@.@@@@.@.@@ .....@.@@@@.....
	;;	@.@..@.@@@@.@.@@ .....@.@@@@.....
	;;	.@...@.@@@@.@@.@ .....@.@@@@.....
	;;	.@...@.@@@@.@@.@ .....@.@@@@.....
	;;	@.@..@.@@@@..@@. .....@.@@@@.....
	;;	@....@.@@@@.@@.@ .....@.@@@@.....
	;;	.@...@.@@@@..@.@ .....@.@@@@.....
	;;	@.@..@.@@@@.@@.@ .....@.@@@@.....
	;;	@....@.@@@@...@@ .....@.@@@@.....
	;;	.@@..@.@@@@....@ .....@.@@@@.....
	;;	@.@..@.@@@@..... .....@.@@@@.....
	;;	@@...@.@@@@..... .....@.@@@@.....
	;;	@....@.@@@@..... .....@.@@@@.....
	;;	@@...@.@@@@..... .....@.@@@@.....
	;;	.@...@..@.@..... .....@..@.@.....
	;;	@@...@@..@@..... .....@@..@@.....
	;;	.@....@@@@...... ......@@@@......
	;;	.@.............. ................
	;;	@............... ................
	;;	................ ................

img_wall_20:
	6870 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &01, &00, &00, &00, &1D, &00
	6880 DEFB &00, &00, &73, &00, &01, &00, &CD, &0C, &07, &00, &3E, &3E, &1C, &00, &F2, &F2
	6890 DEFB &33, &03, &C2, &CA, &6F, &0F, &00, &3C, &DC, &1C, &00, &FE, &DC, &1D, &00, &FE
	68A0 DEFB &B2, &32, &00, &7E, &41, &0D, &80, &9E, &60, &08, &60, &66, &50, &04, &18, &1A
	68B0 DEFB &58, &02, &06, &06, &44, &01, &08, &00, &46, &00, &08, &80, &59, &00, &08, &40
	68C0 DEFB &43, &00, &88, &20, &4C, &00, &48, &10, &51, &00, &E8, &00, &46, &00, &38, &00
	68D0 DEFB &58, &00, &C4, &04, &43, &00, &3E, &3E, &6C, &00, &E2, &E2, &33, &03, &82, &9A
	68E0 DEFB &0E, &0E, &02, &7A, &38, &39, &02, &FA, &E0, &E7, &02, &9A, &80, &9E, &42, &5A
	68F0 DEFB &81, &B9, &C2, &DA, &C0, &DC, &C2, &DA, &60, &6E, &42, &5A, &B0, &37, &42, &5A
	6900 DEFB &58, &1B, &02, &9A, &4C, &0D, &02, &DA, &56, &06, &02, &FA, &93, &03, &02, &7A
	6910 DEFB &95, &01, &82, &BA, &A4, &00, &C2, &DA, &25, &00, &62, &6A, &A9, &00, &34, &34
	6920 DEFB &49, &00, &59, &18, &6A, &00, &40, &04, &92, &00, &40, &1C, &1A, &00, &81, &18
	6930 DEFB &64, &00, &86, &18, &86, &00, &98, &30, &19, &00, &60, &00, &61, &00, &80, &00
	6940 DEFB &86, &00, &00, &00, &18, &00, &00, &00, &60, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	...............@ ................
	;;	...........@@@.@ ................
	;;	.........@@@..@@ ................
	;;	.......@@@..@@.@ ............@@..
	;;	.....@@@..@@@@@. ..........@@@@@.
	;;	...@@@..@@@@..@. ........@@@@..@.
	;;	..@@..@@@@....@. ......@@@@..@.@.
	;;	.@@.@@@@........ ....@@@@..@@@@..
	;;	@@.@@@.......... ...@@@..@@@@@@@.
	;;	@@.@@@.......... ...@@@.@@@@@@@@.
	;;	@.@@..@......... ..@@..@..@@@@@@.
	;;	.@.....@@....... ....@@.@@..@@@@.
	;;	.@@......@@..... ....@....@@..@@.
	;;	.@.@.......@@... .....@.....@@.@.
	;;	.@.@@........@@. ......@......@@.
	;;	.@...@......@... .......@........
	;;	.@...@@.....@... ........@.......
	;;	.@.@@..@....@... .........@......
	;;	.@....@@@...@... ..........@.....
	;;	.@..@@...@..@... ...........@....
	;;	.@.@...@@@@.@... ................
	;;	.@...@@...@@@... ................
	;;	.@.@@...@@...@.. .............@..
	;;	.@....@@..@@@@@. ..........@@@@@.
	;;	.@@.@@..@@@...@. ........@@@...@.
	;;	..@@..@@@.....@. ......@@@..@@.@.
	;;	....@@@.......@. ....@@@..@@@@.@.
	;;	..@@@.........@. ..@@@..@@@@@@.@.
	;;	@@@...........@. @@@..@@@@..@@.@.
	;;	@........@....@. @..@@@@..@.@@.@.
	;;	@......@@@....@. @.@@@..@@@.@@.@.
	;;	@@......@@....@. @@.@@@..@@.@@.@.
	;;	.@@......@....@. .@@.@@@..@.@@.@.
	;;	@.@@.....@....@. ..@@.@@@.@.@@.@.
	;;	.@.@@.........@. ...@@.@@@..@@.@.
	;;	.@..@@........@. ....@@.@@@.@@.@.
	;;	.@.@.@@.......@. .....@@.@@@@@.@.
	;;	@..@..@@......@. ......@@.@@@@.@.
	;;	@..@.@.@@.....@. .......@@.@@@.@.
	;;	@.@..@..@@....@. ........@@.@@.@.
	;;	..@..@.@.@@...@. .........@@.@.@.
	;;	@.@.@..@..@@.@.. ..........@@.@..
	;;	.@..@..@.@.@@..@ ...........@@...
	;;	.@@.@.@..@...... .............@..
	;;	@..@..@..@...... ...........@@@..
	;;	...@@.@.@......@ ...........@@...
	;;	.@@..@..@....@@. ...........@@...
	;;	@....@@.@..@@... ..........@@....
	;;	...@@..@.@@..... ................
	;;	.@@....@@....... ................
	;;	@....@@......... ................
	;;	...@@........... ................
	;;	.@@............. ................
	;;	@............... ................

img_wall_21:
	6950 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &39, &00
	6960 DEFB &00, &00, &E7, &00, &03, &00, &85, &10, &0E, &00, &20, &68, &39, &01, &20, &6C
	6970 DEFB &60, &03, &90, &B4, &DC, &1D, &90, &B4, &82, &1E, &50, &D6, &61, &07, &48, &5A
	6980 DEFB &98, &01, &A8, &AA, &86, &00, &50, &50, &A1, &00, &86, &06, &A8, &00, &6E, &0E
	6990 DEFB &AA, &00, &2E, &0E, &AA, &00, &2C, &0C, &A8, &00, &60, &00, &A1, &00, &80, &00
	69A0 DEFB &86, &00, &20, &28, &98, &00, &60, &68, &E3, &03, &20, &68, &88, &0B, &90, &B4
	69B0 DEFB &34, &3D, &90, &B4, &C2, &1E, &50, &D4, &E1, &07, &48, &5A, &98, &01, &A8, &AA
	69C0 DEFB &86, &00, &50, &50, &A1, &20, &86, &06, &A8, &28, &6E, &0E, &AA, &2A, &2E, &0E
	69D0 DEFB &AA, &2A, &2C, &0C, &A8, &28, &60, &00, &A1, &20, &80, &00, &86, &00, &20, &28
	69E0 DEFB &98, &00, &60, &68, &E3, &03, &20, &68, &88, &0B, &90, &B4, &34, &3D, &90, &B4
	69F0 DEFB &C2, &1E, &50, &D4, &E1, &07, &48, &5A, &98, &01, &A8, &AA, &86, &00, &50, &50
	6A00 DEFB &81, &20, &86, &06, &80, &28, &6E, &0E, &80, &2A, &2E, &0E, &80, &2A, &2D, &0C
	6A10 DEFB &80, &28, &62, &00, &81, &20, &98, &00, &86, &00, &60, &00, &99, &00, &80, &00
	6A20 DEFB &E6, &00, &00, &00, &98, &00, &00, &00, &60, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ ................
	;;	..........@@@..@ ................
	;;	........@@@..@@@ ................
	;;	......@@@....@.@ ...........@....
	;;	....@@@...@..... .........@@.@...
	;;	..@@@..@..@..... .......@.@@.@@..
	;;	.@@.....@..@.... ......@@@.@@.@..
	;;	@@.@@@..@..@.... ...@@@.@@.@@.@..
	;;	@.....@..@.@.... ...@@@@.@@.@.@@.
	;;	.@@....@.@..@... .....@@@.@.@@.@.
	;;	@..@@...@.@.@... .......@@.@.@.@.
	;;	@....@@..@.@.... .........@.@....
	;;	@.@....@@....@@. .............@@.
	;;	@.@.@....@@.@@@. ............@@@.
	;;	@.@.@.@...@.@@@. ............@@@.
	;;	@.@.@.@...@.@@.. ............@@..
	;;	@.@.@....@@..... ................
	;;	@.@....@@....... ................
	;;	@....@@...@..... ..........@.@...
	;;	@..@@....@@..... .........@@.@...
	;;	@@@...@@..@..... ......@@.@@.@...
	;;	@...@...@..@.... ....@.@@@.@@.@..
	;;	..@@.@..@..@.... ..@@@@.@@.@@.@..
	;;	@@....@..@.@.... ...@@@@.@@.@.@..
	;;	@@@....@.@..@... .....@@@.@.@@.@.
	;;	@..@@...@.@.@... .......@@.@.@.@.
	;;	@....@@..@.@.... .........@.@....
	;;	@.@....@@....@@. ..@..........@@.
	;;	@.@.@....@@.@@@. ..@.@.......@@@.
	;;	@.@.@.@...@.@@@. ..@.@.@.....@@@.
	;;	@.@.@.@...@.@@.. ..@.@.@.....@@..
	;;	@.@.@....@@..... ..@.@...........
	;;	@.@....@@....... ..@.............
	;;	@....@@...@..... ..........@.@...
	;;	@..@@....@@..... .........@@.@...
	;;	@@@...@@..@..... ......@@.@@.@...
	;;	@...@...@..@.... ....@.@@@.@@.@..
	;;	..@@.@..@..@.... ..@@@@.@@.@@.@..
	;;	@@....@..@.@.... ...@@@@.@@.@.@..
	;;	@@@....@.@..@... .....@@@.@.@@.@.
	;;	@..@@...@.@.@... .......@@.@.@.@.
	;;	@....@@..@.@.... .........@.@....
	;;	@......@@....@@. ..@..........@@.
	;;	@........@@.@@@. ..@.@.......@@@.
	;;	@.........@.@@@. ..@.@.@.....@@@.
	;;	@.........@.@@.@ ..@.@.@.....@@..
	;;	@........@@...@. ..@.@...........
	;;	@......@@..@@... ..@.............
	;;	@....@@..@@..... ................
	;;	@..@@..@@....... ................
	;;	@@@..@@......... ................
	;;	@..@@........... ................
	;;	.@@............. ................
	;;	@............... ................

img_wall_22:
	6A30 DEFB &00, &00, &00, &00, &00, &10, &00, &00, &00, &18, &00, &00, &00, &3A, &00, &00
	6A40 DEFB &00, &1B, &00, &00, &00, &5F, &00, &00, &00, &F4, &18, &00, &00, &F4, &34, &00
	6A50 DEFB &00, &A8, &34, &00, &00, &18, &38, &00, &04, &18, &14, &04, &38, &00, &38, &38
	6A60 DEFB &14, &04, &15, &01, &38, &38, &39, &01, &14, &00, &18, &00, &34, &00, &E0, &E3
	6A70 DEFB &35, &01, &C0, &CC, &35, &01, &00, &30, &58, &40, &04, &C0, &E0, &E3, &34, &00
	6A80 DEFB &C0, &CC, &34, &00, &00, &30, &38, &00, &04, &C0, &14, &04, &34, &00, &38, &38
	6A90 DEFB &34, &00, &14, &00, &34, &00, &34, &00, &34, &00, &34, &00, &34, &00, &34, &00
	6AA0 DEFB &38, &00, &34, &00, &14, &04, &34, &00, &38, &38, &34, &00, &14, &00, &34, &00
	6AB0 DEFB &34, &00, &34, &00, &34, &00, &34, &00, &38, &00, &34, &00, &14, &04, &38, &00
	6AC0 DEFB &38, &38, &14, &04, &14, &00, &38, &38, &34, &00, &14, &00, &34, &00, &34, &00
	6AD0 DEFB &34, &00, &34, &00, &34, &00, &35, &01, &34, &00, &35, &01, &34, &00, &58, &40
	6AE0 DEFB &35, &01, &E0, &E3, &35, &01, &C0, &CC, &35, &01, &00, &30, &58, &40, &04, &C0
	6AF0 DEFB &E0, &E3, &34, &00, &C0, &CC, &34, &00, &00, &30, &18, &00, &00, &C0, &00, &00
	6B00 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	;;	................ ................
	;;	................ ...@............
	;;	................ ...@@...........
	;;	................ ..@@@.@.........
	;;	................ ...@@.@@........
	;;	................ .@.@@@@@........
	;;	...........@@... @@@@.@..........
	;;	..........@@.@.. @@@@.@..........
	;;	..........@@.@.. @.@.@...........
	;;	..........@@@... ...@@...........
	;;	.....@.....@.@.. ...@@........@..
	;;	..@@@.....@@@... ..........@@@...
	;;	...@.@.....@.@.@ .....@.........@
	;;	..@@@.....@@@..@ ..@@@..........@
	;;	...@.@.....@@... ................
	;;	..@@.@..@@@..... ........@@@...@@
	;;	..@@.@.@@@...... .......@@@..@@..
	;;	..@@.@.@........ .......@..@@....
	;;	.@.@@........@.. .@......@@......
	;;	@@@.......@@.@.. @@@...@@........
	;;	@@........@@.@.. @@..@@..........
	;;	..........@@@... ..@@............
	;;	.....@.....@.@.. @@...........@..
	;;	..@@.@....@@@... ..........@@@...
	;;	..@@.@.....@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@@.....@@.@.. ................
	;;	...@.@....@@.@.. .....@..........
	;;	..@@@.....@@.@.. ..@@@...........
	;;	...@.@....@@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@@.....@@.@.. ................
	;;	...@.@....@@@... .....@..........
	;;	..@@@......@.@.. ..@@@........@..
	;;	...@.@....@@@... ..........@@@...
	;;	..@@.@.....@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@.@....@@.@.. ................
	;;	..@@.@....@@.@.@ ...............@
	;;	..@@.@....@@.@.@ ...............@
	;;	..@@.@...@.@@... .........@......
	;;	..@@.@.@@@@..... .......@@@@...@@
	;;	..@@.@.@@@...... .......@@@..@@..
	;;	..@@.@.@........ .......@..@@....
	;;	.@.@@........@.. .@......@@......
	;;	@@@.......@@.@.. @@@...@@........
	;;	@@........@@.@.. @@..@@..........
	;;	...........@@... ..@@............
	;;	................ @@..............
	;;	................ ................
	;;	................ ................
	;;	................ ................
	;;	................ ................

img_wall_23:
	6B10 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &10, &00, &00, &00, &18, &00, &00
	6B20 DEFB &00, &3A, &00, &00, &00, &1B, &00, &00, &00, &5F, &00, &00, &00, &F4, &00, &18
	6B30 DEFB &00, &F4, &00, &34, &00, &A8, &00, &34, &00, &18, &00, &38, &04, &1C, &04, &14
	6B40 DEFB &38, &38, &38, &39, &04, &14, &00, &15, &38, &38, &00, &35, &00, &14, &00, &1B
	6B50 DEFB &00, &34, &C0, &C4, &00, &35, &63, &68, &00, &35, &37, &B0, &00, &3B, &5B, &18
	6B60 DEFB &C0, &C4, &EA, &08, &63, &68, &E9, &09, &37, &B0, &EE, &0E, &5B, &18, &98, &18
	6B70 DEFB &EA, &08, &66, &60, &E9, &09, &9E, &80, &EE, &0E, &BE, &80, &98, &18, &BE, &80
	6B80 DEFB &66, &60, &B9, &81, &9E, &80, &A6, &86, &BE, &80, &99, &98, &BE, &80, &EB, &E8
	6B90 DEFB &B9, &81, &8B, &88, &A6, &86, &6B, &08, &99, &98, &EA, &08, &EB, &E8, &E9, &09
	6BA0 DEFB &8B, &88, &EE, &0E, &6B, &08, &98, &18, &EA, &08, &66, &60, &E9, &09, &9E, &80
	6BB0 DEFB &EE, &0E, &BE, &80, &98, &18, &BE, &80, &66, &60, &B9, &81, &9E, &80, &A6, &86
	6BC0 DEFB &BE, &80, &99, &98, &BE, &80, &EB, &E8, &B9, &81, &8B, &88, &A6, &86, &6B, &08
	6BD0 DEFB &99, &98, &EA, &08, &EB, &E8, &E8, &08, &8B, &88, &E0, &00, &6B, &08, &80, &00
	6BE0 DEFB &EA, &08, &00, &00, &E8, &08, &00, &00, &E0, &00, &00, &00, &80, &00, &00, &00
	;;	................ ................
	;;	................ ................
	;;	................ ...@............
	;;	................ ...@@...........
	;;	................ ..@@@.@.........
	;;	................ ...@@.@@........
	;;	................ .@.@@@@@........
	;;	................ @@@@.@.....@@...
	;;	................ @@@@.@....@@.@..
	;;	................ @.@.@.....@@.@..
	;;	................ ...@@.....@@@...
	;;	.....@.......@.. ...@@@.....@.@..
	;;	..@@@.....@@@... ..@@@.....@@@..@
	;;	.....@.......... ...@.@.....@.@.@
	;;	..@@@........... ..@@@.....@@.@.@
	;;	................ ...@.@.....@@.@@
	;;	........@@...... ..@@.@..@@...@..
	;;	.........@@...@@ ..@@.@.@.@@.@...
	;;	..........@@.@@@ ..@@.@.@@.@@....
	;;	.........@.@@.@@ ..@@@.@@...@@...
	;;	@@......@@@.@.@. @@...@......@...
	;;	.@@...@@@@@.@..@ .@@.@.......@..@
	;;	..@@.@@@@@@.@@@. @.@@........@@@.
	;;	.@.@@.@@@..@@... ...@@......@@...
	;;	@@@.@.@..@@..@@. ....@....@@.....
	;;	@@@.@..@@..@@@@. ....@..@@.......
	;;	@@@.@@@.@.@@@@@. ....@@@.@.......
	;;	@..@@...@.@@@@@. ...@@...@.......
	;;	.@@..@@.@.@@@..@ .@@.....@......@
	;;	@..@@@@.@.@..@@. @.......@....@@.
	;;	@.@@@@@.@..@@..@ @.......@..@@...
	;;	@.@@@@@.@@@.@.@@ @.......@@@.@...
	;;	@.@@@..@@...@.@@ @......@@...@...
	;;	@.@..@@..@@.@.@@ @....@@.....@...
	;;	@..@@..@@@@.@.@. @..@@.......@...
	;;	@@@.@.@@@@@.@..@ @@@.@.......@..@
	;;	@...@.@@@@@.@@@. @...@.......@@@.
	;;	.@@.@.@@@..@@... ....@......@@...
	;;	@@@.@.@..@@..@@. ....@....@@.....
	;;	@@@.@..@@..@@@@. ....@..@@.......
	;;	@@@.@@@.@.@@@@@. ....@@@.@.......
	;;	@..@@...@.@@@@@. ...@@...@.......
	;;	.@@..@@.@.@@@..@ .@@.....@......@
	;;	@..@@@@.@.@..@@. @.......@....@@.
	;;	@.@@@@@.@..@@..@ @.......@..@@...
	;;	@.@@@@@.@@@.@.@@ @.......@@@.@...
	;;	@.@@@..@@...@.@@ @......@@...@...
	;;	@.@..@@..@@.@.@@ @....@@.....@...
	;;	@..@@..@@@@.@.@. @..@@.......@...
	;;	@@@.@.@@@@@.@... @@@.@.......@...
	;;	@...@.@@@@@..... @...@...........
	;;	.@@.@.@@@....... ....@...........
	;;	@@@.@.@......... ....@...........
	;;	@@@.@........... ....@...........
	;;	@@@............. ................
	;;	@............... ................

;; -----------------------------------------------------------------------------------------------------------
img_3x56_bin: 						;; Doorways
img_doorway_L_type_0:				;; SPR_DOORL:      EQU &00
	6BF0 DEFB &00, &00, &7B, &00, &19, &A5, &00, &33, &6E, &00, &22, &4C, &00, &27, &53, &00
	6C00 DEFB &36, &5C, &00, &19, &50, &00, &0E, &6E, &00, &74, &A5, &00, &F1, &B9, &01, &EB
	6C10 DEFB &3C, &03, &86, &FF, &03, &5C, &E1, &0F, &5B, &80, &06, &33, &78, &1D, &2F, &7B
	6C20 DEFB &0A, &E7, &8F, &3A, &DF, &02, &1A, &CC, &00, &79, &BB, &00, &15, &8B, &D8, &75
	6C30 DEFB &7B, &F8, &35, &9C, &10, &71, &7C, &00, &2D, &98, &00, &6B, &77, &60, &2B, &97
	6C40 DEFB &E0, &6D, &74, &40, &31, &98, &00, &6D, &70, &00, &2B, &AE, &C0, &6B, &6F, &C0
	6C50 DEFB &2B, &B4, &80, &6D, &78, &00, &31, &A0, &00, &6D, &5E, &C0, &2B, &9F, &C0, &6B
	6C60 DEFB &68, &80, &2B, &B0, &00, &6D, &60, &00, &31, &9D, &80, &6D, &5F, &80, &2B, &A9
	6C70 DEFB &00, &6B, &70, &00, &2B, &A0, &00, &6D, &5E, &00, &31, &9F, &80, &6D, &53, &80
	6C80 DEFB &2B, &A2, &00, &6B, &70, &00, &2B, &EE, &00, &75, &5F, &00, &3E, &DB, &80, &39
	6C90 DEFB &E2, &00, &0F, &80, &00, &00, &00, &00, &FF, &E6, &03, &FF, &D8, &05, &FF, &B0
	6CA0 DEFB &0E, &FF, &A8, &0C, &FF, &A0, &13, &FF, &B0, &1C, &FF, &D8, &10, &FF, &8E, &0E
	6CB0 DEFB &FF, &04, &05, &FE, &00, &01, &FC, &00, &00, &F8, &00, &00, &F0, &00, &00, &E0
	6CC0 DEFB &00, &06, &E0, &00, &78, &C0, &00, &7B, &C0, &00, &0F, &80, &00, &72, &80, &00
	6CD0 DEFB &FD, &00, &03, &27, &80, &03, &DB, &00, &03, &FB, &80, &00, &17, &00, &01, &EF
	6CE0 DEFB &80, &00, &9F, &00, &07, &6F, &80, &07, &EF, &00, &04, &5F, &80, &03, &BF, &00
	6CF0 DEFB &01, &3F, &80, &0E, &DF, &00, &0F, &DF, &80, &04, &BF, &00, &03, &7F, &80, &01
	6D00 DEFB &3F, &00, &1E, &DF, &80, &1F, &DF, &00, &08, &BF, &80, &07, &7F, &00, &02, &7F
	6D10 DEFB &80, &1D, &BF, &00, &1F, &BF, &80, &09, &7F, &00, &06, &FF, &80, &01, &FF, &00
	6D20 DEFB &1E, &7F, &80, &1F, &BF, &00, &13, &BF, &80, &0A, &7F, &00, &01, &FF, &80, &0E
	6D30 DEFB &FF, &00, &1F, &7F, &80, &1B, &BF, &80, &02, &7F, &C0, &1D, &FF, &F0, &7F, &FF
	;;	.................@@@@.@@	@@@@@@@@@@@..@@.......@@
	;;	...........@@..@@.@..@.@	@@@@@@@@@@.@@........@.@
	;;	..........@@..@@.@@.@@@.	@@@@@@@@@.@@........@@@.
	;;	..........@...@..@..@@..	@@@@@@@@@.@.@.......@@..
	;;	..........@..@@@.@.@..@@	@@@@@@@@@.@........@..@@
	;;	..........@@.@@..@.@@@..	@@@@@@@@@.@@.......@@@..
	;;	...........@@..@.@.@....	@@@@@@@@@@.@@......@....
	;;	............@@@..@@.@@@.	@@@@@@@@@...@@@.....@@@.
	;;	.........@@@.@..@.@..@.@	@@@@@@@@.....@.......@.@
	;;	........@@@@...@@.@@@..@	@@@@@@@................@
	;;	.......@@@@.@.@@..@@@@..	@@@@@@..................
	;;	......@@@....@@.@@@@@@@@	@@@@@...................
	;;	......@@.@.@@@..@@@....@	@@@@....................
	;;	....@@@@.@.@@.@@@.......	@@@..................@@.
	;;	.....@@...@@..@@.@@@@...	@@@..............@@@@...
	;;	...@@@.@..@.@@@@.@@@@.@@	@@...............@@@@.@@
	;;	....@.@.@@@..@@@@...@@@@	@@..................@@@@
	;;	..@@@.@.@@.@@@@@......@.	@................@@@..@.
	;;	...@@.@.@@..@@..........	@...............@@@@@@.@
	;;	.@@@@..@@.@@@.@@........	..............@@..@..@@@
	;;	...@.@.@@...@.@@@@.@@...	@.............@@@@.@@.@@
	;;	.@@@.@.@.@@@@.@@@@@@@...	..............@@@@@@@.@@
	;;	..@@.@.@@..@@@.....@....	@..................@.@@@
	;;	.@@@...@.@@@@@..........	...............@@@@.@@@@
	;;	..@.@@.@@..@@...........	@...............@..@@@@@
	;;	.@@.@.@@.@@@.@@@.@@.....	.............@@@.@@.@@@@
	;;	..@.@.@@@..@.@@@@@@.....	@............@@@@@@.@@@@
	;;	.@@.@@.@.@@@.@...@......	.............@...@.@@@@@
	;;	..@@...@@..@@...........	@.............@@@.@@@@@@
	;;	.@@.@@.@.@@@............	...............@..@@@@@@
	;;	..@.@.@@@.@.@@@.@@......	@...........@@@.@@.@@@@@
	;;	.@@.@.@@.@@.@@@@@@......	............@@@@@@.@@@@@
	;;	..@.@.@@@.@@.@..@.......	@............@..@.@@@@@@
	;;	.@@.@@.@.@@@@...........	..............@@.@@@@@@@
	;;	..@@...@@.@.............	@..............@..@@@@@@
	;;	.@@.@@.@.@.@@@@.@@......	...........@@@@.@@.@@@@@
	;;	..@.@.@@@..@@@@@@@......	@..........@@@@@@@.@@@@@
	;;	.@@.@.@@.@@.@...@.......	............@...@.@@@@@@
	;;	..@.@.@@@.@@............	@............@@@.@@@@@@@
	;;	.@@.@@.@.@@.............	..............@..@@@@@@@
	;;	..@@...@@..@@@.@@.......	@..........@@@.@@.@@@@@@
	;;	.@@.@@.@.@.@@@@@@.......	...........@@@@@@.@@@@@@
	;;	..@.@.@@@.@.@..@........	@...........@..@.@@@@@@@
	;;	.@@.@.@@.@@@............	.............@@.@@@@@@@@
	;;	..@.@.@@@.@.............	@..............@@@@@@@@@
	;;	.@@.@@.@.@.@@@@.........	...........@@@@..@@@@@@@
	;;	..@@...@@..@@@@@@.......	@..........@@@@@@.@@@@@@
	;;	.@@.@@.@.@.@..@@@.......	...........@..@@@.@@@@@@
	;;	..@.@.@@@.@...@.........	@...........@.@..@@@@@@@
	;;	.@@.@.@@.@@@............	...............@@@@@@@@@
	;;	..@.@.@@@@@.@@@.........	@...........@@@.@@@@@@@@
	;;	.@@@.@.@.@.@@@@@........	...........@@@@@.@@@@@@@
	;;	..@@@@@.@@.@@.@@@.......	@..........@@.@@@.@@@@@@
	;;	..@@@..@@@@...@.........	@.............@..@@@@@@@
	;;	....@@@@@...............	@@.........@@@.@@@@@@@@@
	;;	........................	@@@@.....@@@@@@@@@@@@@@@

	6D40 DEFB &00, &00, &00, &00, &00, &00, &03, &00, &00, &05, &38, &00, &64, &0C, &00, &54
	6D50 DEFB &04, &00, &17, &04, &00, &1C, &EC, &00, &00, &14, &00, &01, &CA, &00, &00, &A5
	6D60 DEFB &80, &00, &65, &40, &00, &15, &70, &00, &34, &A0, &00, &15, &FC, &00, &65, &30
	6D70 DEFB &00, &AA, &DE, &00, &88, &E8, &00, &33, &EE, &00, &C7, &5C, &00, &2B, &1E, &00
	6D80 DEFB &6C, &AC, &00, &CB, &76, &00, &2B, &F4, &00, &0B, &EE, &00, &ED, &0C, &03, &E8
	6D90 DEFB &B6, &03, &4B, &74, &00, &2B, &F6, &00, &0C, &8C, &03, &68, &0E, &03, &EB, &74
	6DA0 DEFB &00, &8B, &F6, &00, &2D, &0C, &03, &48, &8E, &03, &EB, &74, &00, &AB, &F6, &00
	6DB0 DEFB &09, &0C, &03, &6C, &0E, &03, &E9, &B4, &01, &2B, &F6, &00, &0D, &B4, &01, &6E
	6DC0 DEFB &0E, &03, &EE, &F4, &03, &0D, &D6, &00, &2D, &4C, &00, &F6, &96, &01, &D9, &74
	6DD0 DEFB &01, &46, &EC, &00, &01, &D8, &00, &01, &40, &00, &00, &00, &00, &00, &00, &00
	6DE0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FC, &FF, &FF, &F8, &47
	6DF0 DEFB &FF, &90, &3B, &FF, &00, &CD, &FF, &00, &F5, &FF, &80, &15, &FF, &A0, &0D, &FF
	6E00 DEFB &00, &05, &FF, &01, &C0, &7F, &FE, &A0, &3F, &FE, &60, &0F, &FE, &10, &07, &FE
	6E10 DEFB &30, &03, &FE, &10, &01, &FE, &60, &01, &FE, &A0, &C0, &FE, &80, &E1, &FE, &03
	6E20 DEFB &E0, &FE, &07, &41, &FF, &23, &00, &FF, &60, &21, &FE, &C3, &70, &FF, &03, &F1
	6E30 DEFB &FF, &03, &E0, &FC, &E1, &01, &FB, &E0, &30, &FB, &43, &71, &FC, &83, &F0, &FC
	6E40 DEFB &80, &81, &FB, &60, &00, &FB, &E3, &71, &FC, &83, &F0, &FC, &01, &01, &FB, &40
	6E50 DEFB &00, &FB, &E3, &71, &FC, &A3, &F0, &FC, &01, &01, &FB, &60, &00, &FB, &E1, &B1
	6E60 DEFB &FD, &23, &F0, &FE, &81, &B1, &FD, &60, &00, &FB, &E0, &F1, &FB, &01, &D0, &FC
	6E70 DEFB &21, &41, &FE, &F0, &10, &FD, &D0, &71, &FD, &40, &E1, &FE, &B9, &C3, &FF, &FD
	6E80 DEFB &47, &FF, &FE, &BF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@..@@@@@@@@@@@@@@@@
	;;	......@@................	@@@@@....@...@@@@@@@@@@@
	;;	.....@.@..@@@...........	@..@......@@@.@@@@@@@@@@
	;;	.@@..@......@@..........	........@@..@@.@@@@@@@@@
	;;	.@.@.@.......@..........	........@@@@.@.@@@@@@@@@
	;;	...@.@@@.....@..........	@..........@.@.@@@@@@@@@
	;;	...@@@..@@@.@@..........	@.@.........@@.@@@@@@@@@
	;;	...........@.@..........	.............@.@@@@@@@@@
	;;	.......@@@..@.@.........	.......@@@.......@@@@@@@
	;;	........@.@..@.@@.......	@@@@@@@.@.@.......@@@@@@
	;;	.........@@..@.@.@......	@@@@@@@..@@.........@@@@
	;;	...........@.@.@.@@@....	@@@@@@@....@.........@@@
	;;	..........@@.@..@.@.....	@@@@@@@...@@..........@@
	;;	...........@.@.@@@@@@@..	@@@@@@@....@...........@
	;;	.........@@..@.@..@@....	@@@@@@@..@@............@
	;;	........@.@.@.@.@@.@@@@.	@@@@@@@.@.@.....@@......
	;;	........@...@...@@@.@...	@@@@@@@.@.......@@@....@
	;;	..........@@..@@@@@.@@@.	@@@@@@@.......@@@@@.....
	;;	........@@...@@@.@.@@@..	@@@@@@@......@@@.@.....@
	;;	..........@.@.@@...@@@@.	@@@@@@@@..@...@@........
	;;	.........@@.@@..@.@.@@..	@@@@@@@@.@@.......@....@
	;;	........@@..@.@@.@@@.@@.	@@@@@@@.@@....@@.@@@....
	;;	..........@.@.@@@@@@.@..	@@@@@@@@......@@@@@@...@
	;;	............@.@@@@@.@@@.	@@@@@@@@......@@@@@.....
	;;	........@@@.@@.@....@@..	@@@@@@..@@@....@.......@
	;;	......@@@@@.@...@.@@.@@.	@@@@@.@@@@@.......@@....
	;;	......@@.@..@.@@.@@@.@..	@@@@@.@@.@....@@.@@@...@
	;;	..........@.@.@@@@@@.@@.	@@@@@@..@.....@@@@@@....
	;;	............@@..@...@@..	@@@@@@..@.......@......@
	;;	......@@.@@.@.......@@@.	@@@@@.@@.@@.............
	;;	......@@@@@.@.@@.@@@.@..	@@@@@.@@@@@...@@.@@@...@
	;;	........@...@.@@@@@@.@@.	@@@@@@..@.....@@@@@@....
	;;	..........@.@@.@....@@..	@@@@@@.........@.......@
	;;	......@@.@..@...@...@@@.	@@@@@.@@.@..............
	;;	......@@@@@.@.@@.@@@.@..	@@@@@.@@@@@...@@.@@@...@
	;;	........@.@.@.@@@@@@.@@.	@@@@@@..@.@...@@@@@@....
	;;	............@..@....@@..	@@@@@@.........@.......@
	;;	......@@.@@.@@......@@@.	@@@@@.@@.@@.............
	;;	......@@@@@.@..@@.@@.@..	@@@@@.@@@@@....@@.@@...@
	;;	.......@..@.@.@@@@@@.@@.	@@@@@@.@..@...@@@@@@....
	;;	............@@.@@.@@.@..	@@@@@@@.@......@@.@@...@
	;;	.......@.@@.@@@.....@@@.	@@@@@@.@.@@.............
	;;	......@@@@@.@@@.@@@@.@..	@@@@@.@@@@@.....@@@@...@
	;;	......@@....@@.@@@.@.@@.	@@@@@.@@.......@@@.@....
	;;	..........@.@@.@.@..@@..	@@@@@@....@....@.@.....@
	;;	........@@@@.@@.@..@.@@.	@@@@@@@.@@@@.......@....
	;;	.......@@@.@@..@.@@@.@..	@@@@@@.@@@.@.....@@@...@
	;;	.......@.@...@@.@@@.@@..	@@@@@@.@.@......@@@....@
	;;	...............@@@.@@...	@@@@@@@.@.@@@..@@@....@@
	;;	...............@.@......	@@@@@@@@@@@@@@.@.@...@@@
	;;	........................	@@@@@@@@@@@@@@@.@.@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

	6E90 DEFB &00, &00, &69, &00, &01, &A6, &00, &02, &9A, &01, &E6, &69, &07, &79, &A5, &0E
	6EA0 DEFB &7D, &4A, &1D, &7E, &A5, &1E, &BE, &6A, &3F, &5F, &15, &3C, &3F, &22, &3D, &7F
	6EB0 DEFB &55, &3C, &9F, &26, &1F, &5E, &CB, &1E, &1E, &1C, &0F, &3D, &A8, &17, &F8, &50
	6EC0 DEFB &29, &E1, &60, &32, &06, &C0, &1C, &D5, &40, &67, &08, &A0, &39, &64, &A0, &4E
	6ED0 DEFB &2B, &20, &72, &D5, &20, &1C, &A5, &20, &66, &9A, &A0, &39, &6A, &A0, &4E, &92
	6EE0 DEFB &A0, &72, &AD, &A0, &1C, &B5, &A0, &66, &D5, &A0, &38, &AD, &A0, &4E, &95, &A0
	6EF0 DEFB &72, &A9, &A0, &1C, &D5, &A0, &66, &A9, &A0, &38, &D5, &A0, &4E, &D9, &A0, &72
	6F00 DEFB &AB, &A0, &1D, &DB, &40, &66, &AC, &40, &38, &95, &80, &4E, &E4, &00, &72, &A2
	6F10 DEFB &00, &1C, &94, &00, &66, &BA, &00, &39, &C4, &00, &4E, &D4, &00, &72, &AA, &00
	6F20 DEFB &1C, &94, &00, &66, &AA, &00, &38, &54, &00, &4E, &26, &00, &72, &D8, &00, &1C
	6F30 DEFB &60, &00, &06, &80, &00, &00, &00, &00, &FF, &FE, &69, &FF, &FD, &A6, &FE, &1A
	6F40 DEFB &9A, &F8, &06, &69, &F0, &01, &A5, &E0, &01, &4A, &C1, &00, &A5, &C0, &80, &6A
	6F50 DEFB &80, &40, &15, &80, &00, &22, &81, &00, &55, &80, &80, &26, &C0, &40, &CB, &C0
	6F60 DEFB &00, &1C, &E0, &01, &AB, &D0, &00, &57, &A8, &01, &6F, &B2, &06, &DF, &9C, &D5
	6F70 DEFB &5F, &67, &08, &8F, &B9, &64, &8F, &4E, &2B, &0F, &72, &D5, &0F, &9C, &A5, &0F
	6F80 DEFB &66, &9A, &0F, &B9, &6A, &0F, &4E, &92, &0F, &72, &AC, &0F, &9C, &B4, &0F, &66
	6F90 DEFB &D4, &0F, &B8, &AC, &0F, &4E, &94, &0F, &72, &A8, &0F, &9C, &D4, &0F, &66, &A8
	6FA0 DEFB &0F, &B8, &D4, &0F, &4E, &D8, &0F, &72, &A8, &0F, &9D, &D8, &1F, &66, &AC, &1F
	6FB0 DEFB &B8, &94, &3F, &4E, &E4, &7F, &72, &A2, &FF, &9C, &95, &FF, &66, &BA, &FF, &B9
	6FC0 DEFB &C5, &FF, &4E, &D5, &FF, &72, &AA, &FF, &9C, &95, &FF, &66, &AA, &FF, &B8, &55
	6FD0 DEFB &FF, &4E, &26, &FF, &72, &D9, &FF, &9C, &67, &FF, &E6, &9F, &FF, &F9, &7F, &FF
	;;	.................@@.@..@	@@@@@@@@@@@@@@@..@@.@..@
	;;	...............@@.@..@@.	@@@@@@@@@@@@@@.@@.@..@@.
	;;	..............@.@..@@.@.	@@@@@@@....@@.@.@..@@.@.
	;;	.......@@@@..@@..@@.@..@	@@@@@........@@..@@.@..@
	;;	.....@@@.@@@@..@@.@..@.@	@@@@...........@@.@..@.@
	;;	....@@@..@@@@@.@.@..@.@.	@@@............@.@..@.@.
	;;	...@@@.@.@@@@@@.@.@..@.@	@@.....@........@.@..@.@
	;;	...@@@@.@.@@@@@..@@.@.@.	@@......@........@@.@.@.
	;;	..@@@@@@.@.@@@@@...@.@.@	@........@.........@.@.@
	;;	..@@@@....@@@@@@..@...@.	@.................@...@.
	;;	..@@@@.@.@@@@@@@.@.@.@.@	@......@.........@.@.@.@
	;;	..@@@@..@..@@@@@..@..@@.	@.......@.........@..@@.
	;;	...@@@@@.@.@@@@.@@..@.@@	@@.......@......@@..@.@@
	;;	...@@@@....@@@@....@@@..	@@.................@@@..
	;;	....@@@@..@@@@.@@.@.@...	@@@............@@.@.@.@@
	;;	...@.@@@@@@@@....@.@....	@@.@.............@.@.@@@
	;;	..@.@..@@@@....@.@@.....	@.@.@..........@.@@.@@@@
	;;	..@@..@......@@.@@......	@.@@..@......@@.@@.@@@@@
	;;	...@@@..@@.@.@.@.@......	@..@@@..@@.@.@.@.@.@@@@@
	;;	.@@..@@@....@...@.@.....	.@@..@@@....@...@...@@@@
	;;	..@@@..@.@@..@..@.@.....	@.@@@..@.@@..@..@...@@@@
	;;	.@..@@@...@.@.@@..@.....	.@..@@@...@.@.@@....@@@@
	;;	.@@@..@.@@.@.@.@..@.....	.@@@..@.@@.@.@.@....@@@@
	;;	...@@@..@.@..@.@..@.....	@..@@@..@.@..@.@....@@@@
	;;	.@@..@@.@..@@.@.@.@.....	.@@..@@.@..@@.@.....@@@@
	;;	..@@@..@.@@.@.@.@.@.....	@.@@@..@.@@.@.@.....@@@@
	;;	.@..@@@.@..@..@.@.@.....	.@..@@@.@..@..@.....@@@@
	;;	.@@@..@.@.@.@@.@@.@.....	.@@@..@.@.@.@@......@@@@
	;;	...@@@..@.@@.@.@@.@.....	@..@@@..@.@@.@......@@@@
	;;	.@@..@@.@@.@.@.@@.@.....	.@@..@@.@@.@.@......@@@@
	;;	..@@@...@.@.@@.@@.@.....	@.@@@...@.@.@@......@@@@
	;;	.@..@@@.@..@.@.@@.@.....	.@..@@@.@..@.@......@@@@
	;;	.@@@..@.@.@.@..@@.@.....	.@@@..@.@.@.@.......@@@@
	;;	...@@@..@@.@.@.@@.@.....	@..@@@..@@.@.@......@@@@
	;;	.@@..@@.@.@.@..@@.@.....	.@@..@@.@.@.@.......@@@@
	;;	..@@@...@@.@.@.@@.@.....	@.@@@...@@.@.@......@@@@
	;;	.@..@@@.@@.@@..@@.@.....	.@..@@@.@@.@@.......@@@@
	;;	.@@@..@.@.@.@.@@@.@.....	.@@@..@.@.@.@.......@@@@
	;;	...@@@.@@@.@@.@@.@......	@..@@@.@@@.@@......@@@@@
	;;	.@@..@@.@.@.@@...@......	.@@..@@.@.@.@@.....@@@@@
	;;	..@@@...@..@.@.@@.......	@.@@@...@..@.@....@@@@@@
	;;	.@..@@@.@@@..@..........	.@..@@@.@@@..@...@@@@@@@
	;;	.@@@..@.@.@...@.........	.@@@..@.@.@...@.@@@@@@@@
	;;	...@@@..@..@.@..........	@..@@@..@..@.@.@@@@@@@@@
	;;	.@@..@@.@.@@@.@.........	.@@..@@.@.@@@.@.@@@@@@@@
	;;	..@@@..@@@...@..........	@.@@@..@@@...@.@@@@@@@@@
	;;	.@..@@@.@@.@.@..........	.@..@@@.@@.@.@.@@@@@@@@@
	;;	.@@@..@.@.@.@.@.........	.@@@..@.@.@.@.@.@@@@@@@@
	;;	...@@@..@..@.@..........	@..@@@..@..@.@.@@@@@@@@@
	;;	.@@..@@.@.@.@.@.........	.@@..@@.@.@.@.@.@@@@@@@@
	;;	..@@@....@.@.@..........	@.@@@....@.@.@.@@@@@@@@@
	;;	.@..@@@...@..@@.........	.@..@@@...@..@@.@@@@@@@@
	;;	.@@@..@.@@.@@...........	.@@@..@.@@.@@..@@@@@@@@@
	;;	...@@@...@@.............	@..@@@...@@..@@@@@@@@@@@
	;;	.....@@.@...............	@@@..@@.@..@@@@@@@@@@@@@
	;;	........................	@@@@@..@.@@@@@@@@@@@@@@@

	6FE0 DEFB &00, &00, &00, &00, &03, &C0, &00, &0F, &70, &00, &1E, &78, &00, &3D, &7C, &00
	6FF0 DEFB &3E, &BC, &00, &7F, &5E, &1B, &9C, &3E, &79, &2D, &7E, &86, &D4, &9E, &05, &57
	7000 DEFB &5C, &02, &AA, &1C, &01, &15, &38, &02, &A4, &F4, &01, &4A, &04, &02, &55, &1A
	7010 DEFB &00, &A5, &62, &01, &5A, &54, &00, &A2, &AA, &00, &75, &2C, &00, &8E, &B2, &00
	7020 DEFB &53, &58, &00, &D0, &86, &00, &D2, &74, &00, &D3, &4A, &00, &D3, &48, &00, &D3
	7030 DEFB &56, &00, &D3, &4A, &00, &D3, &14, &00, &D3, &6C, &00, &D3, &4A, &00, &D3, &36
	7040 DEFB &00, &D3, &4A, &00, &D3, &6A, &00, &D3, &54, &00, &D3, &4A, &00, &D3, &6A, &00
	7050 DEFB &D0, &54, &00, &D3, &6A, &00, &D6, &6C, &00, &69, &5A, &00, &77, &62, &00, &3E
	7060 DEFB &5A, &00, &48, &64, &00, &50, &9A, &00, &5E, &A4, &00, &5E, &DA, &00, &5E, &A4
	7070 DEFB &00, &5E, &C8, &00, &66, &B0, &00, &18, &C0, &00, &07, &00, &00, &00, &00, &00
	7080 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FC, &3F, &FF, &F0, &0F, &FF, &E0
	7090 DEFB &07, &FF, &C0, &03, &FF, &81, &01, &FF, &80, &81, &E4, &00, &40, &9B, &80, &00
	70A0 DEFB &79, &21, &00, &86, &D0, &80, &75, &50, &41, &FA, &A8, &01, &F9, &14, &03, &FA
	70B0 DEFB &A4, &05, &F9, &4A, &05, &FA, &55, &1A, &FC, &A5, &62, &FD, &5A, &55, &FE, &A2
	70C0 DEFB &AA, &FE, &75, &2D, &FE, &8E, &B2, &FE, &03, &59, &FE, &00, &86, &FE, &02, &75
	70D0 DEFB &FE, &01, &4A, &FE, &02, &49, &FE, &01, &56, &FE, &02, &4A, &FE, &01, &15, &FE
	70E0 DEFB &02, &6D, &FE, &01, &4A, &FE, &02, &36, &FE, &01, &4A, &FE, &02, &6A, &FE, &01
	70F0 DEFB &55, &FE, &02, &4A, &FE, &01, &6A, &FE, &00, &55, &FE, &00, &6A, &FE, &00, &6D
	7100 DEFB &FF, &00, &5A, &FF, &00, &62, &FF, &80, &5A, &FF, &40, &65, &FF, &50, &9A, &FF
	7110 DEFB &4A, &A5, &FF, &54, &DA, &FF, &4A, &A5, &FF, &54, &CB, &FF, &62, &B7, &FF, &98
	7120 DEFB &CF, &FF, &E7, &3F, &FF, &F8, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@....@@@@@@
	;;	..............@@@@......	@@@@@@@@@@@@........@@@@
	;;	............@@@@.@@@....	@@@@@@@@@@@..........@@@
	;;	...........@@@@..@@@@...	@@@@@@@@@@............@@
	;;	..........@@@@.@.@@@@@..	@@@@@@@@@......@.......@
	;;	..........@@@@@.@.@@@@..	@@@@@@@@@.......@......@
	;;	.........@@@@@@@.@.@@@@.	@@@..@...........@......
	;;	...@@.@@@..@@@....@@@@@.	@..@@.@@@...............
	;;	.@@@@..@..@.@@.@.@@@@@@.	.@@@@..@..@....@........
	;;	@....@@.@@.@.@..@..@@@@.	@....@@.@@.@....@.......
	;;	.....@.@.@.@.@@@.@.@@@..	.@@@.@.@.@.@.....@.....@
	;;	......@.@.@.@.@....@@@..	@@@@@.@.@.@.@..........@
	;;	.......@...@.@.@..@@@...	@@@@@..@...@.@........@@
	;;	......@.@.@..@..@@@@.@..	@@@@@.@.@.@..@.......@.@
	;;	.......@.@..@.@......@..	@@@@@..@.@..@.@......@.@
	;;	......@..@.@.@.@...@@.@.	@@@@@.@..@.@.@.@...@@.@.
	;;	........@.@..@.@.@@...@.	@@@@@@..@.@..@.@.@@...@.
	;;	.......@.@.@@.@..@.@.@..	@@@@@@.@.@.@@.@..@.@.@.@
	;;	........@.@...@.@.@.@.@.	@@@@@@@.@.@...@.@.@.@.@.
	;;	.........@@@.@.@..@.@@..	@@@@@@@..@@@.@.@..@.@@.@
	;;	........@...@@@.@.@@..@.	@@@@@@@.@...@@@.@.@@..@.
	;;	.........@.@..@@.@.@@...	@@@@@@@.......@@.@.@@..@
	;;	........@@.@....@....@@.	@@@@@@@.........@....@@.
	;;	........@@.@..@..@@@.@..	@@@@@@@.......@..@@@.@.@
	;;	........@@.@..@@.@..@.@.	@@@@@@@........@.@..@.@.
	;;	........@@.@..@@.@..@...	@@@@@@@.......@..@..@..@
	;;	........@@.@..@@.@.@.@@.	@@@@@@@........@.@.@.@@.
	;;	........@@.@..@@.@..@.@.	@@@@@@@.......@..@..@.@.
	;;	........@@.@..@@...@.@..	@@@@@@@........@...@.@.@
	;;	........@@.@..@@.@@.@@..	@@@@@@@.......@..@@.@@.@
	;;	........@@.@..@@.@..@.@.	@@@@@@@........@.@..@.@.
	;;	........@@.@..@@..@@.@@.	@@@@@@@.......@...@@.@@.
	;;	........@@.@..@@.@..@.@.	@@@@@@@........@.@..@.@.
	;;	........@@.@..@@.@@.@.@.	@@@@@@@.......@..@@.@.@.
	;;	........@@.@..@@.@.@.@..	@@@@@@@........@.@.@.@.@
	;;	........@@.@..@@.@..@.@.	@@@@@@@.......@..@..@.@.
	;;	........@@.@..@@.@@.@.@.	@@@@@@@........@.@@.@.@.
	;;	........@@.@.....@.@.@..	@@@@@@@..........@.@.@.@
	;;	........@@.@..@@.@@.@.@.	@@@@@@@..........@@.@.@.
	;;	........@@.@.@@..@@.@@..	@@@@@@@..........@@.@@.@
	;;	.........@@.@..@.@.@@.@.	@@@@@@@@.........@.@@.@.
	;;	.........@@@.@@@.@@...@.	@@@@@@@@.........@@...@.
	;;	..........@@@@@..@.@@.@.	@@@@@@@@@........@.@@.@.
	;;	.........@..@....@@..@..	@@@@@@@@.@.......@@..@.@
	;;	.........@.@....@..@@.@.	@@@@@@@@.@.@....@..@@.@.
	;;	.........@.@@@@.@.@..@..	@@@@@@@@.@..@.@.@.@..@.@
	;;	.........@.@@@@.@@.@@.@.	@@@@@@@@.@.@.@..@@.@@.@.
	;;	.........@.@@@@.@.@..@..	@@@@@@@@.@..@.@.@.@..@.@
	;;	.........@.@@@@.@@..@...	@@@@@@@@.@.@.@..@@..@.@@
	;;	.........@@..@@.@.@@....	@@@@@@@@.@@...@.@.@@.@@@
	;;	...........@@...@@......	@@@@@@@@@..@@...@@..@@@@
	;;	.............@@@........	@@@@@@@@@@@..@@@..@@@@@@
	;;	........................	@@@@@@@@@@@@@...@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

	7130 DEFB &00, &00, &E3, &00, &01, &97, &00, &23, &4C, &00, &36, &98, &00, &39, &58, &00
	7140 DEFB &3E, &B0, &00, &3E, &50, &00, &3E, &B0, &00, &3E, &A0, &00, &5C, &B0, &00, &E1
	7150 DEFB &30, &01, &1E, &D8, &03, &E7, &DC, &01, &F9, &AE, &06, &3E, &CB, &0F, &CF, &50
	7160 DEFB &01, &F7, &68, &1E, &7B, &60, &1F, &9D, &A0, &21, &ED, &80, &3E, &76, &80, &43
	7170 DEFB &B6, &80, &48, &DB, &00, &58, &6B, &00, &2C, &AD, &00, &2B, &56, &00, &28, &56
	7180 DEFB &00, &58, &5A, &00, &2C, &AC, &00, &2B, &54, &00, &28, &54, &00, &58, &58, &00
	7190 DEFB &2C, &AC, &00, &2B, &54, &00, &28, &54, &00, &58, &58, &00, &2C, &AC, &00, &4B
	71A0 DEFB &54, &00, &48, &54, &00, &28, &58, &00, &5C, &AE, &00, &2B, &56, &00, &48, &76
	71B0 DEFB &00, &48, &58, &00, &44, &92, &00, &31, &44, &00, &4C, &12, &00, &33, &CC, &00
	71C0 DEFB &4C, &32, &00, &73, &CE, &00, &3C, &3C, &00, &4F, &F2, &00, &33, &CC, &00, &0C
	71D0 DEFB &30, &00, &03, &C0, &00, &00, &00, &00, &FF, &FE, &00, &FF, &DC, &00, &FF, &A8
	71E0 DEFB &00, &FF, &B0, &00, &FF, &B8, &00, &FF, &BE, &00, &FF, &BE, &00, &FF, &BE, &00
	71F0 DEFB &FF, &BE, &00, &FF, &1C, &00, &FE, &00, &00, &FC, &00, &00, &F8, &00, &00, &F8
	7200 DEFB &00, &00, &F0, &00, &00, &E0, &00, &04, &E0, &00, &03, &C0, &00, &07, &C0, &00
	7210 DEFB &0F, &80, &00, &1F, &80, &00, &3F, &00, &00, &3F, &08, &00, &7F, &18, &00, &7F
	7220 DEFB &8C, &80, &7F, &8B, &00, &FF, &88, &00, &FF, &18, &00, &FF, &8C, &81, &FF, &8B
	7230 DEFB &01, &FF, &88, &01, &FF, &18, &03, &FF, &8C, &81, &FF, &8B, &01, &FF, &88, &01
	7240 DEFB &FF, &18, &03, &FF, &8C, &81, &FF, &0B, &01, &FF, &08, &01, &FF, &88, &01, &FF
	7250 DEFB &1C, &80, &FF, &8B, &00, &FF, &08, &00, &FF, &08, &01, &FF, &04, &00, &FF, &80
	7260 DEFB &01, &FF, &00, &00, &FF, &80, &01, &FF, &40, &02, &FF, &70, &0E, &FF, &BC, &3D
	7270 DEFB &FF, &0F, &F0, &FF, &83, &C1, &FF, &C0, &03, &FF, &F0, &0F, &FF, &FC, &3F, &FF
	;;	................@@@...@@	@@@@@@@@@@@@@@@.........
	;;	...............@@..@.@@@	@@@@@@@@@@.@@@..........
	;;	..........@...@@.@..@@..	@@@@@@@@@.@.@...........
	;;	..........@@.@@.@..@@...	@@@@@@@@@.@@............
	;;	..........@@@..@.@.@@...	@@@@@@@@@.@@@...........
	;;	..........@@@@@.@.@@....	@@@@@@@@@.@@@@@.........
	;;	..........@@@@@..@.@....	@@@@@@@@@.@@@@@.........
	;;	..........@@@@@.@.@@....	@@@@@@@@@.@@@@@.........
	;;	..........@@@@@.@.@.....	@@@@@@@@@.@@@@@.........
	;;	.........@.@@@..@.@@....	@@@@@@@@...@@@..........
	;;	........@@@....@..@@....	@@@@@@@.................
	;;	.......@...@@@@.@@.@@...	@@@@@@..................
	;;	......@@@@@..@@@@@.@@@..	@@@@@...................
	;;	.......@@@@@@..@@.@.@@@.	@@@@@...................
	;;	.....@@...@@@@@.@@..@.@@	@@@@....................
	;;	....@@@@@@..@@@@.@.@....	@@@..................@..
	;;	.......@@@@@.@@@.@@.@...	@@@...................@@
	;;	...@@@@..@@@@.@@.@@.....	@@...................@@@
	;;	...@@@@@@..@@@.@@.@.....	@@..................@@@@
	;;	..@....@@@@.@@.@@.......	@..................@@@@@
	;;	..@@@@@..@@@.@@.@.......	@.................@@@@@@
	;;	.@....@@@.@@.@@.@.......	..................@@@@@@
	;;	.@..@...@@.@@.@@........	....@............@@@@@@@
	;;	.@.@@....@@.@.@@........	...@@............@@@@@@@
	;;	..@.@@..@.@.@@.@........	@...@@..@........@@@@@@@
	;;	..@.@.@@.@.@.@@.........	@...@.@@........@@@@@@@@
	;;	..@.@....@.@.@@.........	@...@...........@@@@@@@@
	;;	.@.@@....@.@@.@.........	...@@...........@@@@@@@@
	;;	..@.@@..@.@.@@..........	@...@@..@......@@@@@@@@@
	;;	..@.@.@@.@.@.@..........	@...@.@@.......@@@@@@@@@
	;;	..@.@....@.@.@..........	@...@..........@@@@@@@@@
	;;	.@.@@....@.@@...........	...@@.........@@@@@@@@@@
	;;	..@.@@..@.@.@@..........	@...@@..@......@@@@@@@@@
	;;	..@.@.@@.@.@.@..........	@...@.@@.......@@@@@@@@@
	;;	..@.@....@.@.@..........	@...@..........@@@@@@@@@
	;;	.@.@@....@.@@...........	...@@.........@@@@@@@@@@
	;;	..@.@@..@.@.@@..........	@...@@..@......@@@@@@@@@
	;;	.@..@.@@.@.@.@..........	....@.@@.......@@@@@@@@@
	;;	.@..@....@.@.@..........	....@..........@@@@@@@@@
	;;	..@.@....@.@@...........	@...@..........@@@@@@@@@
	;;	.@.@@@..@.@.@@@.........	...@@@..@.......@@@@@@@@
	;;	..@.@.@@.@.@.@@.........	@...@.@@........@@@@@@@@
	;;	.@..@....@@@.@@.........	....@...........@@@@@@@@
	;;	.@..@....@.@@...........	....@..........@@@@@@@@@
	;;	.@...@..@..@..@.........	.....@..........@@@@@@@@
	;;	..@@...@.@...@..........	@..............@@@@@@@@@
	;;	.@..@@.....@..@.........	................@@@@@@@@
	;;	..@@..@@@@..@@..........	@..............@@@@@@@@@
	;;	.@..@@....@@..@.........	.@............@.@@@@@@@@
	;;	.@@@..@@@@..@@@.........	.@@@........@@@.@@@@@@@@
	;;	..@@@@....@@@@..........	@.@@@@....@@@@.@@@@@@@@@
	;;	.@..@@@@@@@@..@.........	....@@@@@@@@....@@@@@@@@
	;;	..@@..@@@@..@@..........	@.....@@@@.....@@@@@@@@@
	;;	....@@....@@............	@@............@@@@@@@@@@
	;;	......@@@@..............	@@@@........@@@@@@@@@@@@
	;;	........................	@@@@@@....@@@@@@@@@@@@@@

	7280 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &08, &00, &00, &0C, &00, &00
	7290 DEFB &1C, &00, &00, &3C, &00, &3E, &7C, &00, &03, &9C, &00, &00, &EC, &00, &00, &35
	72A0 DEFB &00, &00, &1B, &40, &00, &8D, &40, &00, &0D, &50, &00, &C5, &50, &00, &05, &50
	72B0 DEFB &00, &04, &D4, &00, &05, &B4, &00, &04, &AC, &00, &0D, &68, &00, &0B, &58, &00
	72C0 DEFB &B9, &B4, &00, &E2, &AC, &00, &50, &A8, &00, &29, &58, &00, &5A, &B4, &00, &48
	72D0 DEFB &AC, &00, &48, &A8, &00, &29, &58, &00, &5A, &B4, &00, &48, &AC, &00, &48, &A8
	72E0 DEFB &00, &29, &58, &00, &5A, &B4, &00, &48, &AC, &00, &48, &A8, &00, &29, &98, &00
	72F0 DEFB &DB, &74, &00, &91, &6C, &00, &91, &6C, &00, &91, &58, &00, &81, &54, &00, &41
	7300 DEFB &48, &00, &93, &24, &00, &64, &98, &00, &98, &64, &00, &E7, &9C, &00, &78, &78
	7310 DEFB &00, &9F, &E4, &00, &67, &98, &00, &18, &60, &00, &07, &80, &00, &00, &00, &00
	7320 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F7
	7330 DEFB &FF, &FF, &EB, &FF, &FF, &ED, &FF, &FF, &DD, &FF, &C1, &BD, &FF, &00, &7D, &FF
	7340 DEFB &00, &1D, &FF, &00, &0C, &FF, &00, &04, &3F, &80, &00, &1F, &E0, &80, &0F, &F8
	7350 DEFB &00, &07, &F8, &C0, &07, &F8, &00, &03, &F8, &00, &01, &F8, &00, &01, &F8, &00
	7360 DEFB &01, &F8, &00, &03, &FC, &00, &03, &FC, &00, &01, &FC, &02, &01, &FC, &10, &03
	7370 DEFB &FF, &88, &03, &FF, &1A, &01, &FF, &08, &01, &FF, &08, &03, &FF, &88, &03, &FF
	7380 DEFB &1A, &01, &FF, &08, &01, &FF, &08, &03, &FF, &88, &03, &FF, &1A, &01, &FF, &08
	7390 DEFB &01, &FF, &08, &03, &FF, &08, &03, &FE, &18, &01, &FE, &10, &01, &FE, &10, &01
	73A0 DEFB &FE, &10, &03, &FE, &00, &01, &FF, &00, &03, &FE, &00, &01, &FF, &00, &03, &FE
	73B0 DEFB &80, &05, &FE, &E0, &1D, &FF, &78, &7B, &FE, &1F, &E1, &FF, &07, &83, &FF, &80
	73C0 DEFB &07, &FF, &E0, &1F, &FF, &F8, &7F, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@.@@@@@@@@@@@
	;;	............@...........	@@@@@@@@@@@.@.@@@@@@@@@@
	;;	............@@..........	@@@@@@@@@@@.@@.@@@@@@@@@
	;;	...........@@@..........	@@@@@@@@@@.@@@.@@@@@@@@@
	;;	..........@@@@..........	@@.....@@.@@@@.@@@@@@@@@
	;;	..@@@@@..@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	......@@@..@@@..........	...........@@@.@@@@@@@@@
	;;	........@@@.@@..........	............@@..@@@@@@@@
	;;	..........@@.@.@........	.............@....@@@@@@
	;;	...........@@.@@.@......	@..................@@@@@
	;;	........@...@@.@.@......	@@@.....@...........@@@@
	;;	............@@.@.@.@....	@@@@@................@@@
	;;	........@@...@.@.@.@....	@@@@@...@@...........@@@
	;;	.............@.@.@.@....	@@@@@.................@@
	;;	.............@..@@.@.@..	@@@@@..................@
	;;	.............@.@@.@@.@..	@@@@@..................@
	;;	.............@..@.@.@@..	@@@@@..................@
	;;	............@@.@.@@.@...	@@@@@.................@@
	;;	............@.@@.@.@@...	@@@@@@................@@
	;;	........@.@@@..@@.@@.@..	@@@@@@.................@
	;;	........@@@...@.@.@.@@..	@@@@@@........@........@
	;;	.........@.@....@.@.@...	@@@@@@.....@..........@@
	;;	..........@.@..@.@.@@...	@@@@@@@@@...@.........@@
	;;	.........@.@@.@.@.@@.@..	@@@@@@@@...@@.@........@
	;;	.........@..@...@.@.@@..	@@@@@@@@....@..........@
	;;	.........@..@...@.@.@...	@@@@@@@@....@.........@@
	;;	..........@.@..@.@.@@...	@@@@@@@@@...@.........@@
	;;	.........@.@@.@.@.@@.@..	@@@@@@@@...@@.@........@
	;;	.........@..@...@.@.@@..	@@@@@@@@....@..........@
	;;	.........@..@...@.@.@...	@@@@@@@@....@.........@@
	;;	..........@.@..@.@.@@...	@@@@@@@@@...@.........@@
	;;	.........@.@@.@.@.@@.@..	@@@@@@@@...@@.@........@
	;;	.........@..@...@.@.@@..	@@@@@@@@....@..........@
	;;	.........@..@...@.@.@...	@@@@@@@@....@.........@@
	;;	..........@.@..@@..@@...	@@@@@@@@....@.........@@
	;;	........@@.@@.@@.@@@.@..	@@@@@@@....@@..........@
	;;	........@..@...@.@@.@@..	@@@@@@@....@...........@
	;;	........@..@...@.@@.@@..	@@@@@@@....@...........@
	;;	........@..@...@.@.@@...	@@@@@@@....@..........@@
	;;	........@......@.@.@.@..	@@@@@@@................@
	;;	.........@.....@.@..@...	@@@@@@@@..............@@
	;;	........@..@..@@..@..@..	@@@@@@@................@
	;;	.........@@..@..@..@@...	@@@@@@@@..............@@
	;;	........@..@@....@@..@..	@@@@@@@.@............@.@
	;;	........@@@..@@@@..@@@..	@@@@@@@.@@@........@@@.@
	;;	.........@@@@....@@@@...	@@@@@@@@.@@@@....@@@@.@@
	;;	........@..@@@@@@@@..@..	@@@@@@@....@@@@@@@@....@
	;;	.........@@..@@@@..@@...	@@@@@@@@.....@@@@.....@@
	;;	...........@@....@@.....	@@@@@@@@@............@@@
	;;	.............@@@@.......	@@@@@@@@@@@........@@@@@
	;;	........................	@@@@@@@@@@@@@....@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

	73D0 DEFB &00, &00, &00, &00, &00, &01, &00, &00, &07, &01, &E0, &3C, &07, &FB, &D0, &0F
	73E0 DEFB &EC, &10, &1F, &F6, &10, &1F, &F2, &10, &3F, &F3, &13, &3F, &F3, &1E, &3F, &FF
	73F0 DEFB &18, &3F, &FF, &60, &1F, &FE, &80, &1F, &FE, &00, &0F, &FC, &00, &07, &F8, &00
	7400 DEFB &01, &E0, &00, &06, &18, &00, &0F, &FC, &00, &17, &FA, &00, &19, &E6, &00, &16
	7410 DEFB &1A, &00, &17, &F2, &00, &14, &9A, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA
	7420 DEFB &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00
	7430 DEFB &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16
	7440 DEFB &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA, &00, &16, &DA
	7450 DEFB &00, &16, &DA, &00, &16, &DA, &00, &1E, &D2, &00, &0C, &DC, &00, &17, &BA, &00
	7460 DEFB &19, &E6, &00, &1E, &1E, &00, &2F, &FD, &00, &33, &F3, &00, &1C, &0E, &00, &0F
	7470 DEFB &FC, &00, &01, &E0, &00, &00, &00, &00, &FF, &FF, &FE, &FF, &FF, &F8, &FE, &1F
	7480 DEFB &C0, &F9, &E0, &00, &F7, &F8, &02, &EF, &EC, &06, &DF, &F6, &C6, &DF, &F2, &C4
	7490 DEFB &BF, &F3, &40, &BF, &F3, &40, &BF, &FF, &01, &BF, &FF, &07, &DF, &FE, &1F, &DF
	74A0 DEFB &FE, &7F, &EF, &FD, &FF, &F7, &FB, &FF, &F9, &E7, &FF, &F0, &01, &FF, &E0, &00
	74B0 DEFB &FF, &D0, &02, &FF, &D8, &06, &FF, &D6, &1A, &FF, &D7, &F2, &FF, &D4, &9A, &FF
	74C0 DEFB &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6
	74D0 DEFB &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA
	74E0 DEFB &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF
	74F0 DEFB &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &D6, &DA, &FF, &DE
	7500 DEFB &D2, &FF, &EC, &DD, &FF, &C7, &B8, &FF, &C1, &E0, &FF, &C0, &00, &FF, &A0, &01
	7510 DEFB &7F, &B0, &03, &7F, &DC, &0E, &FF, &EF, &FD, &FF, &F1, &E3, &FF, &FE, &1F, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@.
	;;	.......................@	@@@@@@@@@@@@@@@@@@@@@...
	;;	.....................@@@	@@@@@@@....@@@@@@@......
	;;	.......@@@@.......@@@@..	@@@@@..@@@@.............
	;;	.....@@@@@@@@.@@@@.@....	@@@@.@@@@@@@@.........@.
	;;	....@@@@@@@.@@.....@....	@@@.@@@@@@@.@@.......@@.
	;;	...@@@@@@@@@.@@....@....	@@.@@@@@@@@@.@@.@@...@@.
	;;	...@@@@@@@@@..@....@....	@@.@@@@@@@@@..@.@@...@..
	;;	..@@@@@@@@@@..@@...@..@@	@.@@@@@@@@@@..@@.@......
	;;	..@@@@@@@@@@..@@...@@@@.	@.@@@@@@@@@@..@@.@......
	;;	..@@@@@@@@@@@@@@...@@...	@.@@@@@@@@@@@@@@.......@
	;;	..@@@@@@@@@@@@@@.@@.....	@.@@@@@@@@@@@@@@.....@@@
	;;	...@@@@@@@@@@@@.@.......	@@.@@@@@@@@@@@@....@@@@@
	;;	...@@@@@@@@@@@@.........	@@.@@@@@@@@@@@@..@@@@@@@
	;;	....@@@@@@@@@@..........	@@@.@@@@@@@@@@.@@@@@@@@@
	;;	.....@@@@@@@@...........	@@@@.@@@@@@@@.@@@@@@@@@@
	;;	.......@@@@.............	@@@@@..@@@@..@@@@@@@@@@@
	;;	.....@@....@@...........	@@@@...........@@@@@@@@@
	;;	....@@@@@@@@@@..........	@@@.............@@@@@@@@
	;;	...@.@@@@@@@@.@.........	@@.@..........@.@@@@@@@@
	;;	...@@..@@@@..@@.........	@@.@@........@@.@@@@@@@@
	;;	...@.@@....@@.@.........	@@.@.@@....@@.@.@@@@@@@@
	;;	...@.@@@@@@@..@.........	@@.@.@@@@@@@..@.@@@@@@@@
	;;	...@.@..@..@@.@.........	@@.@.@..@..@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@.@@.@@.@@.@.........	@@.@.@@.@@.@@.@.@@@@@@@@
	;;	...@@@@.@@.@..@.........	@@.@@@@.@@.@..@.@@@@@@@@
	;;	....@@..@@.@@@..........	@@@.@@..@@.@@@.@@@@@@@@@
	;;	...@.@@@@.@@@.@.........	@@...@@@@.@@@...@@@@@@@@
	;;	...@@..@@@@..@@.........	@@.....@@@@.....@@@@@@@@
	;;	...@@@@....@@@@.........	@@..............@@@@@@@@
	;;	..@.@@@@@@@@@@.@........	@.@............@.@@@@@@@
	;;	..@@..@@@@@@..@@........	@.@@..........@@.@@@@@@@
	;;	...@@@......@@@.........	@@.@@@......@@@.@@@@@@@@
	;;	....@@@@@@@@@@..........	@@@.@@@@@@@@@@.@@@@@@@@@
	;;	.......@@@@.............	@@@@...@@@@...@@@@@@@@@@
	;;	........................	@@@@@@@....@@@@@@@@@@@@@

	7520 DEFB &00, &00, &00, &00, &03, &C0, &00, &0F, &F0, &00, &1F, &D8, &00, &3F, &EC, &00
	7530 DEFB &27, &E4, &00, &6B, &E6, &00, &17, &E6, &00, &6F, &FE, &00, &9F, &FE, &00, &BF
	7540 DEFB &FC, &00, &BF, &FC, &00, &9F, &F8, &00, &87, &F0, &00, &9B, &C0, &00, &E4, &30
	7550 DEFB &00, &9F, &F8, &00, &2F, &F4, &00, &33, &CC, &00, &2C, &34, &00, &2F, &E4, &00
	7560 DEFB &29, &34, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D
	7570 DEFB &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4
	7580 DEFB &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00
	7590 DEFB &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &2D, &B4, &00, &3D
	75A0 DEFB &A4, &00, &19, &B8, &00, &2F, &74, &00, &33, &CC, &00, &3C, &3C, &00, &5F, &FA
	75B0 DEFB &00, &67, &E6, &00, &38, &1C, &00, &1F, &F8, &00, &03, &C0, &00, &00, &00, &00
	75C0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FC, &3F, &FF, &F3, &CF, &FF, &EF
	75D0 DEFB &F7, &FF, &DF, &DB, &FF, &BF, &ED, &FF, &A7, &E5, &FF, &63, &E6, &FF, &07, &E6
	75E0 DEFB &FF, &0F, &FE, &FF, &1F, &FE, &FF, &3F, &FD, &FF, &3F, &FD, &FF, &1F, &FB, &FF
	75F0 DEFB &27, &F7, &FF, &03, &CF, &FF, &00, &07, &FF, &00, &03, &FF, &20, &05, &FF, &B0
	7600 DEFB &0D, &FF, &AC, &35, &FF, &AF, &E5, &FF, &A9, &35, &FF, &AD, &B5, &FF, &AD, &B5
	7610 DEFB &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF
	7620 DEFB &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD
	7630 DEFB &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5, &FF, &AD, &B5
	7640 DEFB &FF, &AD, &B5, &FF, &AD, &B5, &FF, &BD, &A5, &FF, &D9, &BB, &FF, &8F, &71, &FF
	7650 DEFB &83, &C1, &FF, &80, &01, &FF, &40, &02, &FF, &60, &06, &FF, &B8, &1D, &FF, &DF
	7660 DEFB &FB, &FF, &E3, &C7, &FF, &FC, &3F, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@....@@@@@@
	;;	..............@@@@......	@@@@@@@@@@@@..@@@@..@@@@
	;;	............@@@@@@@@....	@@@@@@@@@@@.@@@@@@@@.@@@
	;;	...........@@@@@@@.@@...	@@@@@@@@@@.@@@@@@@.@@.@@
	;;	..........@@@@@@@@@.@@..	@@@@@@@@@.@@@@@@@@@.@@.@
	;;	..........@..@@@@@@..@..	@@@@@@@@@.@..@@@@@@..@.@
	;;	.........@@.@.@@@@@..@@.	@@@@@@@@.@@...@@@@@..@@.
	;;	...........@.@@@@@@..@@.	@@@@@@@@.....@@@@@@..@@.
	;;	.........@@.@@@@@@@@@@@.	@@@@@@@@....@@@@@@@@@@@.
	;;	........@..@@@@@@@@@@@@.	@@@@@@@@...@@@@@@@@@@@@.
	;;	........@.@@@@@@@@@@@@..	@@@@@@@@..@@@@@@@@@@@@.@
	;;	........@.@@@@@@@@@@@@..	@@@@@@@@..@@@@@@@@@@@@.@
	;;	........@..@@@@@@@@@@...	@@@@@@@@...@@@@@@@@@@.@@
	;;	........@....@@@@@@@....	@@@@@@@@..@..@@@@@@@.@@@
	;;	........@..@@.@@@@......	@@@@@@@@......@@@@..@@@@
	;;	........@@@..@....@@....	@@@@@@@@.............@@@
	;;	........@..@@@@@@@@@@...	@@@@@@@@..............@@
	;;	..........@.@@@@@@@@.@..	@@@@@@@@..@..........@.@
	;;	..........@@..@@@@..@@..	@@@@@@@@@.@@........@@.@
	;;	..........@.@@....@@.@..	@@@@@@@@@.@.@@....@@.@.@
	;;	..........@.@@@@@@@..@..	@@@@@@@@@.@.@@@@@@@..@.@
	;;	..........@.@..@..@@.@..	@@@@@@@@@.@.@..@..@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@.@@.@@.@@.@..	@@@@@@@@@.@.@@.@@.@@.@.@
	;;	..........@@@@.@@.@..@..	@@@@@@@@@.@@@@.@@.@..@.@
	;;	...........@@..@@.@@@...	@@@@@@@@@@.@@..@@.@@@.@@
	;;	..........@.@@@@.@@@.@..	@@@@@@@@@...@@@@.@@@...@
	;;	..........@@..@@@@..@@..	@@@@@@@@@.....@@@@.....@
	;;	..........@@@@....@@@@..	@@@@@@@@@..............@
	;;	.........@.@@@@@@@@@@.@.	@@@@@@@@.@............@.
	;;	.........@@..@@@@@@..@@.	@@@@@@@@.@@..........@@.
	;;	..........@@@......@@@..	@@@@@@@@@.@@@......@@@.@
	;;	...........@@@@@@@@@@...	@@@@@@@@@@.@@@@@@@@@@.@@
	;;	..............@@@@......	@@@@@@@@@@@...@@@@...@@@
	;;	........................	@@@@@@@@@@@@@@....@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

	7670 DEFB &00, &00, &00, &00, &00, &06, &00, &00, &1F, &00, &00, &E6, &00, &01, &F9, &00
	7680 DEFB &06, &66, &00, &0F, &9B, &00, &12, &64, &00, &39, &84, &00, &26, &07, &00, &98
	7690 DEFB &08, &01, &60, &16, &00, &DC, &2F, &02, &A2, &5F, &02, &92, &5F, &04, &8C, &BF
	76A0 DEFB &06, &8C, &BF, &0A, &92, &CF, &0C, &91, &80, &0E, &8D, &00, &12, &82, &E0, &1C
	76B0 DEFB &85, &F8, &1E, &8B, &F0, &26, &8B, &E0, &38, &8B, &C0, &3E, &8B, &00, &1E, &84
	76C0 DEFB &00, &66, &84, &00, &78, &84, &00, &7E, &8B, &00, &3E, &97, &C0, &4E, &AF, &E0
	76D0 DEFB &70, &AF, &C0, &7E, &AF, &80, &3E, &97, &00, &4E, &96, &00, &70, &88, &00, &7E
	76E0 DEFB &84, &00, &3E, &84, &00, &4E, &84, &00, &70, &8B, &E0, &7E, &97, &C0, &3E, &97
	76F0 DEFB &80, &4E, &AF, &80, &70, &AF, &00, &7E, &AF, &00, &3E, &AE, &00, &4E, &94, &00
	7700 DEFB &70, &88, &00, &7E, &84, &00, &3E, &8A, &00, &4E, &92, &00, &70, &A2, &00, &3E
	7710 DEFB &CC, &00, &0E, &B0, &00, &01, &C0, &00, &FF, &FF, &F9, &FF, &FF, &E0, &FF, &FF
	7720 DEFB &00, &FF, &FE, &00, &FF, &F8, &01, &FF, &F0, &06, &FF, &E0, &18, &FF, &C0, &60
	7730 DEFB &FF, &81, &80, &FF, &06, &00, &FE, &18, &00, &FC, &60, &06, &FC, &80, &0F, &F8
	7740 DEFB &80, &1F, &F8, &80, &1F, &F0, &8C, &3F, &F0, &8C, &3F, &E0, &80, &0F, &E0, &80
	7750 DEFB &70, &E0, &80, &1F, &C0, &80, &E7, &C0, &81, &FB, &C0, &83, &F7, &80, &83, &EF
	7760 DEFB &80, &83, &DF, &80, &83, &3F, &80, &80, &FF, &00, &83, &FF, &00, &80, &FF, &00
	7770 DEFB &83, &3F, &80, &87, &DF, &00, &8F, &EF, &00, &8F, &DF, &00, &8F, &BF, &80, &87
	7780 DEFB &7F, &00, &86, &FF, &00, &81, &FF, &00, &83, &FF, &80, &83, &FF, &00, &80, &1F
	7790 DEFB &00, &83, &EF, &00, &87, &DF, &80, &87, &BF, &00, &8F, &BF, &00, &8F, &7F, &00
	77A0 DEFB &8F, &7F, &80, &8E, &FF, &00, &85, &FF, &00, &83, &FF, &00, &83, &FF, &80, &83
	77B0 DEFB &FF, &00, &83, &FF, &00, &83, &FF, &80, &8F, &FF, &C0, &BF, &FF, &F1, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@..@
	;;	.....................@@.	@@@@@@@@@@@@@@@@@@@.....
	;;	...................@@@@@	@@@@@@@@@@@@@@@@........
	;;	................@@@..@@.	@@@@@@@@@@@@@@@.........
	;;	...............@@@@@@..@	@@@@@@@@@@@@@..........@
	;;	.............@@..@@..@@.	@@@@@@@@@@@@.........@@.
	;;	............@@@@@..@@.@@	@@@@@@@@@@@........@@...
	;;	...........@..@..@@..@..	@@@@@@@@@@.......@@.....
	;;	..........@@@..@@....@..	@@@@@@@@@......@@.......
	;;	..........@..@@......@@@	@@@@@@@@.....@@.........
	;;	........@..@@.......@...	@@@@@@@....@@...........
	;;	.......@.@@........@.@@.	@@@@@@...@@..........@@.
	;;	........@@.@@@....@.@@@@	@@@@@@..@...........@@@@
	;;	......@.@.@...@..@.@@@@@	@@@@@...@..........@@@@@
	;;	......@.@..@..@..@.@@@@@	@@@@@...@..........@@@@@
	;;	.....@..@...@@..@.@@@@@@	@@@@....@...@@....@@@@@@
	;;	.....@@.@...@@..@.@@@@@@	@@@@....@...@@....@@@@@@
	;;	....@.@.@..@..@.@@..@@@@	@@@.....@...........@@@@
	;;	....@@..@..@...@@.......	@@@.....@........@@@....
	;;	....@@@.@...@@.@........	@@@.....@..........@@@@@
	;;	...@..@.@.....@.@@@.....	@@......@.......@@@..@@@
	;;	...@@@..@....@.@@@@@@...	@@......@......@@@@@@.@@
	;;	...@@@@.@...@.@@@@@@....	@@......@.....@@@@@@.@@@
	;;	..@..@@.@...@.@@@@@.....	@.......@.....@@@@@.@@@@
	;;	..@@@...@...@.@@@@......	@.......@.....@@@@.@@@@@
	;;	..@@@@@.@...@.@@........	@.......@.....@@..@@@@@@
	;;	...@@@@.@....@..........	@.......@.......@@@@@@@@
	;;	.@@..@@.@....@..........	........@.....@@@@@@@@@@
	;;	.@@@@...@....@..........	........@.......@@@@@@@@
	;;	.@@@@@@.@...@.@@........	........@.....@@..@@@@@@
	;;	..@@@@@.@..@.@@@@@......	@.......@....@@@@@.@@@@@
	;;	.@..@@@.@.@.@@@@@@@.....	........@...@@@@@@@.@@@@
	;;	.@@@....@.@.@@@@@@......	........@...@@@@@@.@@@@@
	;;	.@@@@@@.@.@.@@@@@.......	........@...@@@@@.@@@@@@
	;;	..@@@@@.@..@.@@@........	@.......@....@@@.@@@@@@@
	;;	.@..@@@.@..@.@@.........	........@....@@.@@@@@@@@
	;;	.@@@....@...@...........	........@......@@@@@@@@@
	;;	.@@@@@@.@....@..........	........@.....@@@@@@@@@@
	;;	..@@@@@.@....@..........	@.......@.....@@@@@@@@@@
	;;	.@..@@@.@....@..........	........@..........@@@@@
	;;	.@@@....@...@.@@@@@.....	........@.....@@@@@.@@@@
	;;	.@@@@@@.@..@.@@@@@......	........@....@@@@@.@@@@@
	;;	..@@@@@.@..@.@@@@.......	@.......@....@@@@.@@@@@@
	;;	.@..@@@.@.@.@@@@@.......	........@...@@@@@.@@@@@@
	;;	.@@@....@.@.@@@@........	........@...@@@@.@@@@@@@
	;;	.@@@@@@.@.@.@@@@........	........@...@@@@.@@@@@@@
	;;	..@@@@@.@.@.@@@.........	@.......@...@@@.@@@@@@@@
	;;	.@..@@@.@..@.@..........	........@....@.@@@@@@@@@
	;;	.@@@....@...@...........	........@.....@@@@@@@@@@
	;;	.@@@@@@.@....@..........	........@.....@@@@@@@@@@
	;;	..@@@@@.@...@.@.........	@.......@.....@@@@@@@@@@
	;;	.@..@@@.@..@..@.........	........@.....@@@@@@@@@@
	;;	.@@@....@.@...@.........	........@.....@@@@@@@@@@
	;;	..@@@@@.@@..@@..........	@.......@...@@@@@@@@@@@@
	;;	....@@@.@.@@............	@@......@.@@@@@@@@@@@@@@
	;;	.......@@@..............	@@@@...@@@@@@@@@@@@@@@@@

	77C0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	77D0 DEFB &00, &07, &00, &00, &19, &00, &00, &61, &00, &01, &8F, &00, &E6, &13, &00, &98
	77E0 DEFB &25, &00, &60, &25, &01, &80, &29, &00, &E0, &19, &00, &90, &19, &00, &9F, &15
	77F0 DEFB &00, &A0, &A5, &00, &DE, &65, &00, &BF, &69, &01, &3F, &31, &00, &3E, &09, &00
	7800 DEFB &3D, &65, &00, &3A, &F5, &00, &31, &F5, &00, &25, &F5, &00, &1B, &F5, &00, &17
	7810 DEFB &E9, &00, &18, &11, &00, &0F, &A1, &00, &13, &11, &00, &1C, &E9, &00, &1D, &F5
	7820 DEFB &00, &0B, &F5, &00, &17, &F5, &00, &1B, &F5, &00, &1C, &E9, &00, &0F, &11, &00
	7830 DEFB &13, &A1, &00, &1C, &11, &00, &1E, &E9, &00, &0D, &F5, &00, &13, &F5, &00, &17
	7840 DEFB &F5, &00, &19, &F5, &00, &0C, &69, &00, &13, &19, &00, &1C, &25, &00, &1F, &A3
	7850 DEFB &00, &1F, &A1, &00, &07, &A3, &00, &01, &AC, &00, &00, &70, &00, &00, &00, &00
	7860 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	7870 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F9, &FF, &FF, &E1
	7880 DEFB &FF, &1F, &81, &F0, &06, &01, &80, &18, &01, &00, &60, &01, &01, &80, &01, &00
	7890 DEFB &00, &19, &00, &00, &19, &00, &00, &01, &00, &00, &01, &00, &1E, &01, &00, &3F
	78A0 DEFB &01, &00, &3F, &01, &00, &3E, &01, &00, &3C, &61, &00, &38, &F1, &18, &31, &F1
	78B0 DEFB &F8, &21, &F1, &FE, &43, &F1, &FF, &C7, &E1, &FF, &C0, &01, &FF, &E0, &01, &FF
	78C0 DEFB &C0, &01, &FF, &C0, &E1, &FF, &C1, &F1, &FF, &E3, &F1, &FF, &C7, &F1, &FF, &C3
	78D0 DEFB &F1, &FF, &C0, &E1, &FF, &E0, &01, &FF, &C0, &01, &FF, &C0, &01, &FF, &C0, &E1
	78E0 DEFB &FF, &E1, &F1, &FF, &C3, &F1, &FF, &C7, &F1, &FF, &C1, &F1, &FF, &E0, &61, &FF
	78F0 DEFB &C0, &01, &FF, &C0, &01, &FF, &C0, &01, &FF, &C0, &01, &FF, &E0, &03, &FF, &F8
	7900 DEFB &0F, &FF, &FE, &3F, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.....................@@@	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	...................@@..@	@@@@@@@@@@@@@@@@@@@@@..@
	;;	.................@@....@	@@@@@@@@@@@@@@@@@@@....@
	;;	...............@@...@@@@	@@@@@@@@...@@@@@@......@
	;;	........@@@..@@....@..@@	@@@@.........@@........@
	;;	........@..@@.....@..@.@	@..........@@..........@
	;;	.........@@.......@..@.@	.........@@............@
	;;	.......@@.........@.@..@	.......@@..............@
	;;	........@@@........@@..@	...................@@..@
	;;	........@..@.......@@..@	...................@@..@
	;;	........@..@@@@@...@.@.@	.......................@
	;;	........@.@.....@.@..@.@	.......................@
	;;	........@@.@@@@..@@..@.@	...........@@@@........@
	;;	........@.@@@@@@.@@.@..@	..........@@@@@@.......@
	;;	.......@..@@@@@@..@@...@	..........@@@@@@.......@
	;;	..........@@@@@.....@..@	..........@@@@@........@
	;;	..........@@@@.@.@@..@.@	..........@@@@...@@....@
	;;	..........@@@.@.@@@@.@.@	..........@@@...@@@@...@
	;;	..........@@...@@@@@.@.@	...@@.....@@...@@@@@...@
	;;	..........@..@.@@@@@.@.@	@@@@@.....@....@@@@@...@
	;;	...........@@.@@@@@@.@.@	@@@@@@@..@....@@@@@@...@
	;;	...........@.@@@@@@.@..@	@@@@@@@@@@...@@@@@@....@
	;;	...........@@......@...@	@@@@@@@@@@.............@
	;;	............@@@@@.@....@	@@@@@@@@@@@............@
	;;	...........@..@@...@...@	@@@@@@@@@@.............@
	;;	...........@@@..@@@.@..@	@@@@@@@@@@......@@@....@
	;;	...........@@@.@@@@@.@.@	@@@@@@@@@@.....@@@@@...@
	;;	............@.@@@@@@.@.@	@@@@@@@@@@@...@@@@@@...@
	;;	...........@.@@@@@@@.@.@	@@@@@@@@@@...@@@@@@@...@
	;;	...........@@.@@@@@@.@.@	@@@@@@@@@@....@@@@@@...@
	;;	...........@@@..@@@.@..@	@@@@@@@@@@......@@@....@
	;;	............@@@@...@...@	@@@@@@@@@@@............@
	;;	...........@..@@@.@....@	@@@@@@@@@@.............@
	;;	...........@@@.....@...@	@@@@@@@@@@.............@
	;;	...........@@@@.@@@.@..@	@@@@@@@@@@......@@@....@
	;;	............@@.@@@@@.@.@	@@@@@@@@@@@....@@@@@...@
	;;	...........@..@@@@@@.@.@	@@@@@@@@@@....@@@@@@...@
	;;	...........@.@@@@@@@.@.@	@@@@@@@@@@...@@@@@@@...@
	;;	...........@@..@@@@@.@.@	@@@@@@@@@@.....@@@@@...@
	;;	............@@...@@.@..@	@@@@@@@@@@@......@@....@
	;;	...........@..@@...@@..@	@@@@@@@@@@.............@
	;;	...........@@@....@..@.@	@@@@@@@@@@.............@
	;;	...........@@@@@@.@...@@	@@@@@@@@@@.............@
	;;	...........@@@@@@.@....@	@@@@@@@@@@.............@
	;;	.............@@@@.@...@@	@@@@@@@@@@@...........@@
	;;	...............@@.@.@@..	@@@@@@@@@@@@@.......@@@@
	;;	.................@@@....	@@@@@@@@@@@@@@@...@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;

	7910 DEFB &00, &00, &00, &00, &00, &17, &00, &00, &F8, &00, &02, &8C, &00, &07, &61, &00
	7920 DEFB &02, &85, &00, &0D, &0D, &00, &30, &72, &00, &51, &AA, &00, &86, &D1, &01, &19
	7930 DEFB &75, &00, &66, &29, &02, &19, &AA, &02, &5D, &5A, &00, &25, &68, &06, &53, &A0
	7940 DEFB &03, &7C, &A0, &0C, &1B, &40, &02, &65, &40, &0D, &1D, &40, &12, &66, &80, &1D
	7950 DEFB &56, &80, &06, &13, &00, &39, &4B, &00, &0E, &34, &00, &22, &46, &00, &4D, &38
	7960 DEFB &00, &72, &4C, &00, &0C, &74, &00, &73, &14, &00, &1C, &68, &00, &6B, &5C, &00
	7970 DEFB &18, &54, &00, &66, &50, &00, &38, &5C, &00, &4E, &28, &00, &13, &2C, &00, &64
	7980 DEFB &52, &00, &18, &5C, &00, &26, &2A, &00, &19, &16, &00, &0E, &52, &00, &12, &55
	7990 DEFB &00, &64, &6C, &00, &1B, &21, &00, &76, &56, &00, &08, &65, &00, &6A, &1D, &80
	79A0 DEFB &32, &62, &00, &44, &75, &80, &19, &16, &80, &76, &69, &80, &1A, &26, &00, &05
	79B0 DEFB &58, &00, &01, &60, &00, &00, &00, &00, &FF, &FF, &E8, &FF, &FF, &00, &FF, &FC
	79C0 DEFB &00, &FF, &F8, &00, &FF, &F0, &00, &FF, &F0, &00, &FF, &C0, &00, &FF, &80, &00
	79D0 DEFB &FF, &00, &00, &FE, &00, &00, &FC, &00, &00, &FC, &00, &00, &F8, &00, &00, &F8
	79E0 DEFB &00, &00, &F8, &00, &01, &F0, &00, &07, &F0, &00, &0F, &E0, &00, &1F, &F0, &00
	79F0 DEFB &1F, &E0, &00, &1F, &C0, &00, &3F, &C0, &00, &3F, &C0, &00, &7F, &80, &00, &7F
	7A00 DEFB &C0, &00, &FF, &80, &00, &FF, &00, &01, &FF, &00, &01, &FF, &80, &01, &FF, &00
	7A10 DEFB &01, &FF, &80, &03, &FF, &00, &01, &FF, &80, &01, &FF, &00, &03, &FF, &80, &01
	7A20 DEFB &FF, &00, &03, &FF, &80, &01, &FF, &00, &01, &FF, &80, &01, &FF, &80, &00, &FF
	7A30 DEFB &C0, &00, &FF, &E0, &00, &FF, &80, &00, &7F, &00, &00, &FF, &80, &00, &7F, &00
	7A40 DEFB &00, &FF, &80, &00, &7F, &00, &00, &3F, &80, &00, &7F, &00, &00, &3F, &80, &00
	7A50 DEFB &3F, &00, &00, &3F, &80, &00, &7F, &E0, &01, &FF, &F8, &07, &FF, &FE, &9F, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@.@...
	;;	...................@.@@@	@@@@@@@@@@@@@@@@........
	;;	................@@@@@...	@@@@@@@@@@@@@@..........
	;;	..............@.@...@@..	@@@@@@@@@@@@@...........
	;;	.............@@@.@@....@	@@@@@@@@@@@@............
	;;	..............@.@....@.@	@@@@@@@@@@@@............
	;;	............@@.@....@@.@	@@@@@@@@@@..............
	;;	..........@@.....@@@..@.	@@@@@@@@@...............
	;;	.........@.@...@@.@.@.@.	@@@@@@@@................
	;;	........@....@@.@@.@...@	@@@@@@@.................
	;;	.......@...@@..@.@@@.@.@	@@@@@@..................
	;;	.........@@..@@...@.@..@	@@@@@@..................
	;;	......@....@@..@@.@.@.@.	@@@@@...................
	;;	......@..@.@@@.@.@.@@.@.	@@@@@...................
	;;	..........@..@.@.@@.@...	@@@@@..................@
	;;	.....@@..@.@..@@@.@.....	@@@@.................@@@
	;;	......@@.@@@@@..@.@.....	@@@@................@@@@
	;;	....@@.....@@.@@.@......	@@@................@@@@@
	;;	......@..@@..@.@.@......	@@@@...............@@@@@
	;;	....@@.@...@@@.@.@......	@@@................@@@@@
	;;	...@..@..@@..@@.@.......	@@................@@@@@@
	;;	...@@@.@.@.@.@@.@.......	@@................@@@@@@
	;;	.....@@....@..@@........	@@...............@@@@@@@
	;;	..@@@..@.@..@.@@........	@................@@@@@@@
	;;	....@@@...@@.@..........	@@..............@@@@@@@@
	;;	..@...@..@...@@.........	@...............@@@@@@@@
	;;	.@..@@.@..@@@...........	...............@@@@@@@@@
	;;	.@@@..@..@..@@..........	...............@@@@@@@@@
	;;	....@@...@@@.@..........	@..............@@@@@@@@@
	;;	.@@@..@@...@.@..........	...............@@@@@@@@@
	;;	...@@@...@@.@...........	@.............@@@@@@@@@@
	;;	.@@.@.@@.@.@@@..........	...............@@@@@@@@@
	;;	...@@....@.@.@..........	@..............@@@@@@@@@
	;;	.@@..@@..@.@............	..............@@@@@@@@@@
	;;	..@@@....@.@@@..........	@..............@@@@@@@@@
	;;	.@..@@@...@.@...........	..............@@@@@@@@@@
	;;	...@..@@..@.@@..........	@..............@@@@@@@@@
	;;	.@@..@...@.@..@.........	...............@@@@@@@@@
	;;	...@@....@.@@@..........	@..............@@@@@@@@@
	;;	..@..@@...@.@.@.........	@...............@@@@@@@@
	;;	...@@..@...@.@@.........	@@..............@@@@@@@@
	;;	....@@@..@.@..@.........	@@@.............@@@@@@@@
	;;	...@..@..@.@.@.@........	@................@@@@@@@
	;;	.@@..@...@@.@@..........	................@@@@@@@@
	;;	...@@.@@..@....@........	@................@@@@@@@
	;;	.@@@.@@..@.@.@@.........	................@@@@@@@@
	;;	....@....@@..@.@........	@................@@@@@@@
	;;	.@@.@.@....@@@.@@.......	..................@@@@@@
	;;	..@@..@..@@...@.........	@................@@@@@@@
	;;	.@...@...@@@.@.@@.......	..................@@@@@@
	;;	...@@..@...@.@@.@.......	@.................@@@@@@
	;;	.@@@.@@..@@.@..@@.......	..................@@@@@@
	;;	...@@.@...@..@@.........	@................@@@@@@@
	;;	.....@.@.@.@@...........	@@@............@@@@@@@@@
	;;	.......@.@@.............	@@@@@........@@@@@@@@@@@
	;;	........................	@@@@@@@.@..@@@@@@@@@@@@@

	7A60 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	7A70 DEFB &00, &06, &00, &00, &1A, &00, &00, &66, &00, &01, &A4, &00, &46, &94, &00, &9A
	7A80 DEFB &AE, &00, &6B, &2A, &00, &B9, &56, &00, &A2, &34, &00, &4A, &96, &00, &B5, &B4
	7A90 DEFB &00, &B5, &AA, &00, &95, &56, &00, &33, &54, &00, &A0, &AC, &00, &8A, &6A, &00
	7AA0 DEFB &13, &12, &00, &0C, &AC, &00, &11, &16, &00, &0C, &D2, &00, &13, &14, &00, &1C
	7AB0 DEFB &EA, &00, &13, &16, &00, &0C, &C8, &00, &33, &34, &00, &0C, &D2, &00, &27, &0C
	7AC0 DEFB &00, &18, &D2, &00, &33, &56, &00, &4C, &AC, &00, &33, &26, &00, &4C, &5A, &00
	7AD0 DEFB &33, &66, &00, &C4, &9A, &00, &31, &2A, &00, &CC, &96, &01, &32, &D2, &01, &CC
	7AE0 DEFB &AE, &00, &32, &A8, &00, &CD, &56, &00, &B5, &2A, &01, &48, &AA, &01, &B5, &94
	7AF0 DEFB &00, &69, &52, &01, &95, &4C, &00, &6A, &30, &00, &1A, &C0, &00, &05, &00, &00
	7B00 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	7B10 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &F9, &FF, &FF, &E0, &FF, &FF, &80, &FF, &FE, &00
	7B20 DEFB &FF, &B8, &01, &F8, &00, &01, &FC, &00, &00, &FE, &00, &00, &FE, &00, &00, &FE
	7B30 DEFB &00, &01, &FF, &00, &00, &FE, &00, &01, &FE, &00, &00, &FE, &00, &00, &FE, &00
	7B40 DEFB &01, &FE, &00, &01, &FE, &00, &00, &FF, &40, &00, &FF, &E0, &01, &FF, &C0, &00
	7B50 DEFB &FF, &E0, &00, &FF, &C0, &01, &FF, &C0, &00, &FF, &C0, &00, &FF, &C0, &01, &FF
	7B60 DEFB &80, &01, &FF, &C0, &00, &FF, &80, &01, &FF, &C0, &00, &FF, &80, &00, &FF, &00
	7B70 DEFB &01, &FF, &80, &00, &FF, &00, &00, &FF, &00, &00, &FE, &00, &00, &FF, &00, &00
	7B80 DEFB &FE, &00, &00, &FC, &00, &00, &FC, &00, &00, &FE, &00, &01, &FE, &00, &00, &FE
	7B90 DEFB &00, &00, &FC, &00, &00, &FC, &00, &01, &FE, &00, &00, &FC, &00, &01, &FE, &00
	7BA0 DEFB &03, &FF, &80, &0F, &FF, &E0, &3F, &FF, &FA, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@..@
	;;	.....................@@.	@@@@@@@@@@@@@@@@@@@.....
	;;	...................@@.@.	@@@@@@@@@@@@@@@@@.......
	;;	.................@@..@@.	@@@@@@@@@@@@@@@.........
	;;	...............@@.@..@..	@@@@@@@@@.@@@..........@
	;;	.........@...@@.@..@.@..	@@@@@..................@
	;;	........@..@@.@.@.@.@@@.	@@@@@@..................
	;;	.........@@.@.@@..@.@.@.	@@@@@@@.................
	;;	........@.@@@..@.@.@.@@.	@@@@@@@.................
	;;	........@.@...@...@@.@..	@@@@@@@................@
	;;	.........@..@.@.@..@.@@.	@@@@@@@@................
	;;	........@.@@.@.@@.@@.@..	@@@@@@@................@
	;;	........@.@@.@.@@.@.@.@.	@@@@@@@.................
	;;	........@..@.@.@.@.@.@@.	@@@@@@@.................
	;;	..........@@..@@.@.@.@..	@@@@@@@................@
	;;	........@.@.....@.@.@@..	@@@@@@@................@
	;;	........@...@.@..@@.@.@.	@@@@@@@.................
	;;	...........@..@@...@..@.	@@@@@@@@.@..............
	;;	............@@..@.@.@@..	@@@@@@@@@@@............@
	;;	...........@...@...@.@@.	@@@@@@@@@@..............
	;;	............@@..@@.@..@.	@@@@@@@@@@@.............
	;;	...........@..@@...@.@..	@@@@@@@@@@.............@
	;;	...........@@@..@@@.@.@.	@@@@@@@@@@..............
	;;	...........@..@@...@.@@.	@@@@@@@@@@..............
	;;	............@@..@@..@...	@@@@@@@@@@.............@
	;;	..........@@..@@..@@.@..	@@@@@@@@@..............@
	;;	............@@..@@.@..@.	@@@@@@@@@@..............
	;;	..........@..@@@....@@..	@@@@@@@@@..............@
	;;	...........@@...@@.@..@.	@@@@@@@@@@..............
	;;	..........@@..@@.@.@.@@.	@@@@@@@@@...............
	;;	.........@..@@..@.@.@@..	@@@@@@@@...............@
	;;	..........@@..@@..@..@@.	@@@@@@@@@...............
	;;	.........@..@@...@.@@.@.	@@@@@@@@................
	;;	..........@@..@@.@@..@@.	@@@@@@@@................
	;;	........@@...@..@..@@.@.	@@@@@@@.................
	;;	..........@@...@..@.@.@.	@@@@@@@@................
	;;	........@@..@@..@..@.@@.	@@@@@@@.................
	;;	.......@..@@..@.@@.@..@.	@@@@@@..................
	;;	.......@@@..@@..@.@.@@@.	@@@@@@..................
	;;	..........@@..@.@.@.@...	@@@@@@@................@
	;;	........@@..@@.@.@.@.@@.	@@@@@@@.................
	;;	........@.@@.@.@..@.@.@.	@@@@@@@.................
	;;	.......@.@..@...@.@.@.@.	@@@@@@..................
	;;	.......@@.@@.@.@@..@.@..	@@@@@@.................@
	;;	.........@@.@..@.@.@..@.	@@@@@@@.................
	;;	.......@@..@.@.@.@..@@..	@@@@@@.................@
	;;	.........@@.@.@...@@....	@@@@@@@...............@@
	;;	...........@@.@.@@......	@@@@@@@@@...........@@@@
	;;	.............@.@........	@@@@@@@@@@@.......@@@@@@
	;;	........................	@@@@@@@@@@@@@.@.@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

	7BB0 DEFB &00, &00, &00, &00, &00, &1F, &00, &00, &FF, &00, &03, &FF, &00, &07, &FF, &00
	7BC0 DEFB &01, &FF, &00, &0E, &7C, &00, &0F, &93, &00, &33, &EF, &00, &7C, &D7, &00, &9F
	7BD0 DEFB &37, &01, &E7, &5B, &01, &F8, &DB, &03, &FD, &6A, &03, &FD, &68, &07, &FB, &A0
	7BE0 DEFB &07, &FB, &A0, &0F, &F7, &C0, &0F, &F7, &C0, &0F, &EF, &C0, &13, &EF, &80, &1C
	7BF0 DEFB &DF, &80, &07, &1F, &00, &39, &C7, &00, &0E, &38, &00, &33, &86, &00, &7C, &B8
	7C00 DEFB &00, &7F, &44, &00, &7F, &78, &00, &7F, &7C, &00, &7F, &7C, &00, &7F, &7C, &00
	7C10 DEFB &7F, &7C, &00, &7F, &7C, &00, &7F, &7C, &00, &7F, &7C, &00, &1F, &7C, &00, &67
	7C20 DEFB &70, &00, &19, &4C, &00, &26, &32, &00, &19, &8E, &00, &0E, &5F, &00, &13, &DF
	7C30 DEFB &00, &7C, &EF, &80, &1F, &2F, &80, &67, &D7, &80, &79, &E7, &80, &7E, &1F, &80
	7C40 DEFB &3F, &7F, &80, &4F, &7F, &80, &73, &BF, &80, &7C, &3F, &00, &1F, &7C, &00, &07
	7C50 DEFB &70, &00, &01, &40, &00, &00, &00, &00, &FF, &FF, &E0, &FF, &FF, &00, &FF, &FC
	7C60 DEFB &00, &FF, &F8, &00, &FF, &F0, &00, &FF, &F0, &00, &FF, &E0, &00, &FF, &C0, &03
	7C70 DEFB &FF, &80, &0F, &FF, &00, &07, &FE, &00, &07, &FC, &00, &03, &FC, &00, &03, &F8
	7C80 DEFB &01, &02, &F8, &01, &01, &F0, &03, &87, &F0, &03, &8F, &E0, &07, &CF, &E0, &07
	7C90 DEFB &DF, &E0, &0F, &DF, &C0, &0F, &BF, &C0, &1F, &BF, &C0, &1F, &7F, &80, &07, &7F
	7CA0 DEFB &80, &00, &FF, &80, &00, &FF, &00, &01, &FF, &00, &41, &FF, &00, &79, &FF, &00
	7CB0 DEFB &7D, &FF, &00, &7D, &FF, &00, &7D, &FF, &00, &7D, &FF, &00, &7D, &FF, &00, &7D
	7CC0 DEFB &FF, &00, &7D, &FF, &00, &7D, &FF, &00, &71, &FF, &80, &41, &FF, &80, &02, &FF
	7CD0 DEFB &C0, &0E, &FF, &E0, &1F, &7F, &80, &1F, &7F, &00, &0F, &BF, &00, &0F, &BF, &00
	7CE0 DEFB &07, &BF, &00, &07, &BF, &00, &1F, &BF, &80, &7F, &BF, &00, &7F, &BF, &00, &3F
	7CF0 DEFB &BF, &00, &3F, &7F, &80, &7C, &FF, &E0, &73, &FF, &F8, &4F, &FF, &FE, &3F, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@.....
	;;	...................@@@@@	@@@@@@@@@@@@@@@@........
	;;	................@@@@@@@@	@@@@@@@@@@@@@@..........
	;;	..............@@@@@@@@@@	@@@@@@@@@@@@@...........
	;;	.............@@@@@@@@@@@	@@@@@@@@@@@@............
	;;	...............@@@@@@@@@	@@@@@@@@@@@@............
	;;	............@@@..@@@@@..	@@@@@@@@@@@.............
	;;	............@@@@@..@..@@	@@@@@@@@@@............@@
	;;	..........@@..@@@@@.@@@@	@@@@@@@@@...........@@@@
	;;	.........@@@@@..@@.@.@@@	@@@@@@@@.............@@@
	;;	........@..@@@@@..@@.@@@	@@@@@@@..............@@@
	;;	.......@@@@..@@@.@.@@.@@	@@@@@@................@@
	;;	.......@@@@@@...@@.@@.@@	@@@@@@................@@
	;;	......@@@@@@@@.@.@@.@.@.	@@@@@..........@......@.
	;;	......@@@@@@@@.@.@@.@...	@@@@@..........@.......@
	;;	.....@@@@@@@@.@@@.@.....	@@@@..........@@@....@@@
	;;	.....@@@@@@@@.@@@.@.....	@@@@..........@@@...@@@@
	;;	....@@@@@@@@.@@@@@......	@@@..........@@@@@..@@@@
	;;	....@@@@@@@@.@@@@@......	@@@..........@@@@@.@@@@@
	;;	....@@@@@@@.@@@@@@......	@@@.........@@@@@@.@@@@@
	;;	...@..@@@@@.@@@@@.......	@@..........@@@@@.@@@@@@
	;;	...@@@..@@.@@@@@@.......	@@.........@@@@@@.@@@@@@
	;;	.....@@@...@@@@@........	@@.........@@@@@.@@@@@@@
	;;	..@@@..@@@...@@@........	@............@@@.@@@@@@@
	;;	....@@@...@@@...........	@...............@@@@@@@@
	;;	..@@..@@@....@@.........	@...............@@@@@@@@
	;;	.@@@@@..@.@@@...........	...............@@@@@@@@@
	;;	.@@@@@@@.@...@..........	.........@.....@@@@@@@@@
	;;	.@@@@@@@.@@@@...........	.........@@@@..@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	...@@@@@.@@@@@..........	.........@@@@@.@@@@@@@@@
	;;	.@@..@@@.@@@............	.........@@@...@@@@@@@@@
	;;	...@@..@.@..@@..........	@........@.....@@@@@@@@@
	;;	..@..@@...@@..@.........	@.............@.@@@@@@@@
	;;	...@@..@@...@@@.........	@@..........@@@.@@@@@@@@
	;;	....@@@..@.@@@@@........	@@@........@@@@@.@@@@@@@
	;;	...@..@@@@.@@@@@........	@..........@@@@@.@@@@@@@
	;;	.@@@@@..@@@.@@@@@.......	............@@@@@.@@@@@@
	;;	...@@@@@..@.@@@@@.......	............@@@@@.@@@@@@
	;;	.@@..@@@@@.@.@@@@.......	.............@@@@.@@@@@@
	;;	.@@@@..@@@@..@@@@.......	.............@@@@.@@@@@@
	;;	.@@@@@@....@@@@@@.......	...........@@@@@@.@@@@@@
	;;	..@@@@@@.@@@@@@@@.......	@........@@@@@@@@.@@@@@@
	;;	.@..@@@@.@@@@@@@@.......	.........@@@@@@@@.@@@@@@
	;;	.@@@..@@@.@@@@@@@.......	..........@@@@@@@.@@@@@@
	;;	.@@@@@....@@@@@@........	..........@@@@@@.@@@@@@@
	;;	...@@@@@.@@@@@..........	@........@@@@@..@@@@@@@@
	;;	.....@@@.@@@............	@@@......@@@..@@@@@@@@@@
	;;	.......@.@..............	@@@@@....@..@@@@@@@@@@@@
	;;	........................	@@@@@@@...@@@@@@@@@@@@@@

	7D00 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	7D10 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &03, &20, &00, &01, &CC
	7D20 DEFB &00, &00, &F3, &00, &00, &F9, &40, &00, &80, &20, &00, &7A, &80, &00, &F9, &B0
	7D30 DEFB &00, &F5, &B8, &00, &F5, &7C, &00, &F3, &7C, &00, &E0, &FE, &00, &8E, &7C, &00
	7D40 DEFB &11, &BA, &00, &0E, &24, &00, &11, &9A, &00, &0E, &44, &00, &11, &9A, &00, &1E
	7D50 DEFB &06, &00, &1F, &DE, &00, &1F, &DE, &00, &3F, &DE, &00, &3F, &DE, &00, &3F, &BE
	7D60 DEFB &00, &3F, &BE, &00, &0F, &BC, &00, &73, &BC, &00, &1C, &60, &00, &67, &1C, &00
	7D70 DEFB &79, &60, &00, &FE, &18, &00, &FF, &78, &00, &FE, &F4, &01, &3E, &F2, &01, &CD
	7D80 DEFB &FE, &01, &F1, &FE, &01, &FD, &FC, &01, &FD, &FC, &01, &FD, &FE, &01, &FD, &FE
	7D90 DEFB &00, &FD, &FE, &00, &3D, &F8, &00, &0D, &E0, &00, &03, &80, &00, &00, &00, &00
	7DA0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	7DB0 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	7DC0 DEFB &FC, &FF, &FF, &F8, &13, &FF, &FC, &00, &FF, &FE, &00, &3F, &FE, &00, &1F, &FE
	7DD0 DEFB &00, &0F, &FF, &78, &0F, &FE, &F8, &37, &FE, &F0, &3B, &FE, &F0, &7D, &FE, &F0
	7DE0 DEFB &7D, &FE, &E0, &FE, &FE, &80, &7C, &FF, &40, &38, &FF, &C0, &20, &FF, &C0, &00
	7DF0 DEFB &FF, &C0, &00, &FF, &C0, &02, &FF, &C0, &06, &FF, &C0, &1E, &FF, &C0, &1E, &FF
	7E00 DEFB &80, &1E, &FF, &80, &1E, &FF, &80, &3E, &FF, &80, &3E, &FF, &80, &3D, &FF, &00
	7E10 DEFB &3D, &FF, &80, &61, &FF, &00, &01, &FF, &00, &03, &FE, &00, &1B, &FE, &00, &7B
	7E20 DEFB &FE, &00, &F5, &FC, &00, &F2, &FC, &01, &FE, &FC, &01, &FE, &FC, &01, &FD, &FC
	7E30 DEFB &01, &FD, &FC, &01, &FE, &FC, &01, &FE, &FE, &01, &FE, &FF, &01, &F9, &FF, &C1
	7E40 DEFB &E7, &FF, &F3, &9F, &FF, &FC, &7F, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@..@@@@@@@@@@@@@@@@
	;;	......@@..@.............	@@@@@......@..@@@@@@@@@@
	;;	.......@@@..@@..........	@@@@@@..........@@@@@@@@
	;;	........@@@@..@@........	@@@@@@@...........@@@@@@
	;;	........@@@@@..@.@......	@@@@@@@............@@@@@
	;;	........@.........@.....	@@@@@@@.............@@@@
	;;	.........@@@@.@.@.......	@@@@@@@@.@@@@.......@@@@
	;;	........@@@@@..@@.@@....	@@@@@@@.@@@@@.....@@.@@@
	;;	........@@@@.@.@@.@@@...	@@@@@@@.@@@@......@@@.@@
	;;	........@@@@.@.@.@@@@@..	@@@@@@@.@@@@.....@@@@@.@
	;;	........@@@@..@@.@@@@@..	@@@@@@@.@@@@.....@@@@@.@
	;;	........@@@.....@@@@@@@.	@@@@@@@.@@@.....@@@@@@@.
	;;	........@...@@@..@@@@@..	@@@@@@@.@........@@@@@..
	;;	...........@...@@.@@@.@.	@@@@@@@@.@........@@@...
	;;	............@@@...@..@..	@@@@@@@@@@........@.....
	;;	...........@...@@..@@.@.	@@@@@@@@@@..............
	;;	............@@@..@...@..	@@@@@@@@@@..............
	;;	...........@...@@..@@.@.	@@@@@@@@@@............@.
	;;	...........@@@@......@@.	@@@@@@@@@@...........@@.
	;;	...........@@@@@@@.@@@@.	@@@@@@@@@@.........@@@@.
	;;	...........@@@@@@@.@@@@.	@@@@@@@@@@.........@@@@.
	;;	..........@@@@@@@@.@@@@.	@@@@@@@@@..........@@@@.
	;;	..........@@@@@@@@.@@@@.	@@@@@@@@@..........@@@@.
	;;	..........@@@@@@@.@@@@@.	@@@@@@@@@.........@@@@@.
	;;	..........@@@@@@@.@@@@@.	@@@@@@@@@.........@@@@@.
	;;	............@@@@@.@@@@..	@@@@@@@@@.........@@@@.@
	;;	.........@@@..@@@.@@@@..	@@@@@@@@..........@@@@.@
	;;	...........@@@...@@.....	@@@@@@@@@........@@....@
	;;	.........@@..@@@...@@@..	@@@@@@@@...............@
	;;	.........@@@@..@.@@.....	@@@@@@@@..............@@
	;;	........@@@@@@@....@@...	@@@@@@@............@@.@@
	;;	........@@@@@@@@.@@@@...	@@@@@@@..........@@@@.@@
	;;	........@@@@@@@.@@@@.@..	@@@@@@@.........@@@@.@.@
	;;	.......@..@@@@@.@@@@..@.	@@@@@@..........@@@@..@.
	;;	.......@@@..@@.@@@@@@@@.	@@@@@@.........@@@@@@@@.
	;;	.......@@@@@...@@@@@@@@.	@@@@@@.........@@@@@@@@.
	;;	.......@@@@@@@.@@@@@@@..	@@@@@@.........@@@@@@@.@
	;;	.......@@@@@@@.@@@@@@@..	@@@@@@.........@@@@@@@.@
	;;	.......@@@@@@@.@@@@@@@@.	@@@@@@.........@@@@@@@@.
	;;	.......@@@@@@@.@@@@@@@@.	@@@@@@.........@@@@@@@@.
	;;	........@@@@@@.@@@@@@@@.	@@@@@@@........@@@@@@@@.
	;;	..........@@@@.@@@@@@...	@@@@@@@@.......@@@@@@..@
	;;	............@@.@@@@.....	@@@@@@@@@@.....@@@@..@@@
	;;	..............@@@.......	@@@@@@@@@@@@..@@@..@@@@@
	;;	........................	@@@@@@@@@@@@@@...@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

;; -----------------------------------------------------------------------------------------------------------
SPR_FLIP			EQU		&80			;; bit7 set = sprite flip (eg. SPR_FLIP | SPR_VAPE1)

;; -----------------------------------------------------------------------------------------------------------
SPR_BATMAN_0		EQU		&10
SPR_BATMAN_1		EQU		&11
SPR_BATMAN_2		EQU		&12
SPR_BATMAN_B0		EQU		&13
SPR_BATMAN_B1		EQU		&14
SPR_BATMAN_FLY		EQU		&15
SPR_BATMAN_FLYB		EQU		&16
SPR_BM_STANDING		EQU		&17
SPR_WOLF_0			EQU		&18
SPR_WOLF_1			EQU		&19
SPR_WOLF_2			EQU		&1A
SPR_WOLF_B0			EQU		&1B
SPR_WOLF_B1			EQU		&1C
SPR_WOLF_B2			EQU		&1D
SPR_DEMON			EQU		&1E
SPR_DEMONB			EQU		&1F
SPR_SHARK_0			EQU		&20
SPR_SHARK_1			EQU		&21
SPR_SHARK_B0		EQU		&22
SPR_SHARK_B1		EQU		&23
SPR_DOG_0			EQU		&24
SPR_DOG_1			EQU		&25
SPR_DOG_B0			EQU		&26
SPR_DOG_B1			EQU		&27
SPR_JOKER			EQU		&28
SPR_JOKERB			EQU		&29
SPR_JOKER_B1		EQU		&2A
SPR_RIDDLER			EQU		&2B
SPR_RIDDLERB		EQU		&2C
SPR_1st_3x32_sprite	EQU		SPR_BATMAN_0

;; -----------------------------------------------------------------------------------------------------------
img_3x32_bin:				;; SPR_BATMAN_0 EQU &10
	7E50 DEFB &00, &00, &00, &00, &80, &80, &00, &DE, &80, &00, &FF, &80, &00, &EE, &80, &00
	7E60 DEFB &F5, &80, &00, &FF, &80, &00, &E6, &80, &00, &D9, &80, &00, &5F, &00, &00, &D9
	7E70 DEFB &00, &03, &4E, &80, &04, &B1, &00, &0B, &FF, &C0, &0B, &75, &C0, &16, &E0, &E0
	7E80 DEFB &16, &FB, &60, &16, &FF, &40, &34, &7E, &30, &3B, &01, &38, &37, &3E, &50, &3A
	7E90 DEFB &59, &60, &3C, &E7, &60, &3F, &6B, &60, &3F, &6B, &60, &3F, &63, &30, &3E, &66
	7EA0 DEFB &98, &38, &C7, &C0, &3C, &F1, &E0, &18, &78, &60, &00, &18, &00, &00, &00, &00
	7EB0 DEFB &FF, &7F, &7F, &FE, &20, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE
	7EC0 DEFB &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &19, &3F, &FF, &1F, &7F, &FC, &19
	7ED0 DEFB &7F, &F8, &0E, &3F, &F0, &B1, &3F, &E3, &FF, &DF, &E3, &75, &DF, &C6, &E0, &EF
	7EE0 DEFB &C6, &FB, &6F, &C6, &FF, &4F, &84, &7E, &37, &83, &00, &3B, &87, &00, &17, &82
	7EF0 DEFB &41, &0F, &80, &E7, &0F, &80, &63, &0F, &80, &63, &0F, &80, &63, &07, &80, &66
	7F00 DEFB &83, &80, &C7, &C7, &80, &F1, &EF, &C3, &7A, &6F, &E7, &9B, &9F, &FF, &E7, &FF
	;;	........................	@@@@@@@@.@@@@@@@.@@@@@@@
	;;	........@.......@.......	@@@@@@@...@.......@@@@@@
	;;	........@@.@@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@.@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@.@.@@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@..@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@.@@..@@.......	@@@@@@@....@@..@..@@@@@@
	;;	.........@.@@@@@........	@@@@@@@@...@@@@@.@@@@@@@
	;;	........@@.@@..@........	@@@@@@.....@@..@.@@@@@@@
	;;	......@@.@..@@@.@.......	@@@@@.......@@@...@@@@@@
	;;	.....@..@.@@...@........	@@@@....@.@@...@..@@@@@@
	;;	....@.@@@@@@@@@@@@......	@@@...@@@@@@@@@@@@.@@@@@
	;;	....@.@@.@@@.@.@@@......	@@@...@@.@@@.@.@@@.@@@@@
	;;	...@.@@.@@@.....@@@.....	@@...@@.@@@.....@@@.@@@@
	;;	...@.@@.@@@@@.@@.@@.....	@@...@@.@@@@@.@@.@@.@@@@
	;;	...@.@@.@@@@@@@@.@......	@@...@@.@@@@@@@@.@..@@@@
	;;	..@@.@...@@@@@@...@@....	@....@...@@@@@@...@@.@@@
	;;	..@@@.@@.......@..@@@...	@.....@@..........@@@.@@
	;;	..@@.@@@..@@@@@..@.@....	@....@@@...........@.@@@
	;;	..@@@.@..@.@@..@.@@.....	@.....@..@.....@....@@@@
	;;	..@@@@..@@@..@@@.@@.....	@.......@@@..@@@....@@@@
	;;	..@@@@@@.@@.@.@@.@@.....	@........@@...@@....@@@@
	;;	..@@@@@@.@@.@.@@.@@.....	@........@@...@@....@@@@
	;;	..@@@@@@.@@...@@..@@....	@........@@...@@.....@@@
	;;	..@@@@@..@@..@@.@..@@...	@........@@..@@.@.....@@
	;;	..@@@...@@...@@@@@......	@.......@@...@@@@@...@@@
	;;	..@@@@..@@@@...@@@@.....	@.......@@@@...@@@@.@@@@
	;;	...@@....@@@@....@@.....	@@....@@.@@@@.@..@@.@@@@
	;;	...........@@...........	@@@..@@@@..@@.@@@..@@@@@
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@

				;; SPR_BATMAN_1 EQU &11
	7F10 DEFB &00, &00, &00, &00, &80, &80, &00, &DE, &80, &00, &FF, &80, &00, &EE, &80, &00
	7F20 DEFB &F5, &80, &00, &FF, &80, &00, &E6, &80, &00, &D9, &80, &00, &5F, &00, &00, &D9
	7F30 DEFB &00, &03, &4E, &80, &04, &B1, &00, &0B, &FF, &C0, &0B, &75, &C0, &16, &E0, &E0
	7F40 DEFB &16, &FB, &50, &16, &FF, &38, &30, &7E, &D8, &2E, &80, &E0, &2D, &BE, &E0, &31
	7F50 DEFB &51, &E0, &3E, &ED, &E0, &3F, &33, &E0, &3F, &5B, &E0, &3F, &58, &B0, &3A, &58
	7F60 DEFB &18, &38, &32, &00, &3C, &3C, &00, &18, &1C, &00, &00, &0E, &00, &00, &00, &00
	7F70 DEFB &FF, &7F, &7F, &FE, &20, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE
	7F80 DEFB &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &19, &3F, &FF, &1F, &7F, &FC, &19
	7F90 DEFB &7F, &F8, &0E, &3F, &F0, &B1, &1F, &E3, &FF, &DF, &E3, &75, &CF, &C6, &E0, &EF
	7FA0 DEFB &C6, &FB, &57, &C6, &FF, &3B, &80, &7E, &1B, &8E, &00, &07, &8C, &00, &0F, &80
	7FB0 DEFB &40, &0F, &80, &EC, &0F, &80, &30, &0F, &80, &58, &0F, &80, &58, &07, &80, &59
	7FC0 DEFB &43, &81, &B2, &E7, &81, &BD, &FF, &C3, &DD, &FF, &E7, &EE, &FF, &FF, &F1, &FF
	;;	........................	@@@@@@@@.@@@@@@@.@@@@@@@
	;;	........@.......@.......	@@@@@@@...@.......@@@@@@
	;;	........@@.@@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@.@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@.@.@@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@..@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@.@@..@@.......	@@@@@@@....@@..@..@@@@@@
	;;	.........@.@@@@@........	@@@@@@@@...@@@@@.@@@@@@@
	;;	........@@.@@..@........	@@@@@@.....@@..@.@@@@@@@
	;;	......@@.@..@@@.@.......	@@@@@.......@@@...@@@@@@
	;;	.....@..@.@@...@........	@@@@....@.@@...@...@@@@@
	;;	....@.@@@@@@@@@@@@......	@@@...@@@@@@@@@@@@.@@@@@
	;;	....@.@@.@@@.@.@@@......	@@@...@@.@@@.@.@@@..@@@@
	;;	...@.@@.@@@.....@@@.....	@@...@@.@@@.....@@@.@@@@
	;;	...@.@@.@@@@@.@@.@.@....	@@...@@.@@@@@.@@.@.@.@@@
	;;	...@.@@.@@@@@@@@..@@@...	@@...@@.@@@@@@@@..@@@.@@
	;;	..@@.....@@@@@@.@@.@@...	@........@@@@@@....@@.@@
	;;	..@.@@@.@.......@@@.....	@...@@@..............@@@
	;;	..@.@@.@@.@@@@@.@@@.....	@...@@..............@@@@
	;;	..@@...@.@.@...@@@@.....	@........@..........@@@@
	;;	..@@@@@.@@@.@@.@@@@.....	@.......@@@.@@......@@@@
	;;	..@@@@@@..@@..@@@@@.....	@.........@@........@@@@
	;;	..@@@@@@.@.@@.@@@@@.....	@........@.@@.......@@@@
	;;	..@@@@@@.@.@@...@.@@....	@........@.@@........@@@
	;;	..@@@.@..@.@@......@@...	@........@.@@..@.@....@@
	;;	..@@@.....@@..@.........	@......@@.@@..@.@@@..@@@
	;;	..@@@@....@@@@..........	@......@@.@@@@.@@@@@@@@@
	;;	...@@......@@@..........	@@....@@@@.@@@.@@@@@@@@@
	;;	............@@@.........	@@@..@@@@@@.@@@.@@@@@@@@
	;;	........................	@@@@@@@@@@@@...@@@@@@@@@

				;; SPR_BATMAN_2 EQU &12
	7FD0 DEFB &00, &00, &00, &00, &80, &80, &00, &DE, &80, &00, &FF, &80, &00, &EE, &80, &00
	7FE0 DEFB &F5, &80, &00, &FF, &80, &00, &E6, &80, &00, &D9, &80, &00, &5F, &00, &00, &D9
	7FF0 DEFB &00, &03, &4E, &80, &04, &B1, &00, &0B, &FF, &C0, &17, &75, &C0, &17, &60, &E0
	8000 DEFB &16, &BB, &E0, &1B, &DF, &00, &3D, &AE, &60, &3E, &71, &60, &3F, &6E, &10, &3F
	8010 DEFB &8D, &B0, &3F, &63, &B0, &3E, &ED, &D0, &3E, &D2, &D0, &3D, &81, &B8, &39, &E3
	8020 DEFB &80, &30, &E7, &00, &30, &73, &C0, &18, &01, &C0, &00, &00, &E0, &00, &00, &00
	8030 DEFB &FF, &7F, &7F, &FE, &20, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE
	8040 DEFB &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &19, &3F, &FF, &1F, &7F, &FC, &19
	8050 DEFB &7F, &F8, &0E, &3F, &F0, &B1, &1F, &E3, &FF, &DF, &C7, &75, &DF, &C7, &60, &EF
	8060 DEFB &C6, &BB, &EF, &C3, &DF, &0F, &81, &AE, &67, &80, &70, &67, &80, &60, &07, &80
	8070 DEFB &01, &87, &80, &63, &87, &80, &E1, &C7, &80, &C0, &C7, &81, &8D, &83, &81, &EB
	8080 DEFB &87, &86, &E7, &3F, &87, &73, &DF, &C3, &8D, &DF, &E7, &FE, &EF, &FF, &FF, &1F
	;;	........................	@@@@@@@@.@@@@@@@.@@@@@@@
	;;	........@.......@.......	@@@@@@@...@.......@@@@@@
	;;	........@@.@@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@.@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@.@.@@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@..@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@.@@..@@.......	@@@@@@@....@@..@..@@@@@@
	;;	.........@.@@@@@........	@@@@@@@@...@@@@@.@@@@@@@
	;;	........@@.@@..@........	@@@@@@.....@@..@.@@@@@@@
	;;	......@@.@..@@@.@.......	@@@@@.......@@@...@@@@@@
	;;	.....@..@.@@...@........	@@@@....@.@@...@...@@@@@
	;;	....@.@@@@@@@@@@@@......	@@@...@@@@@@@@@@@@.@@@@@
	;;	...@.@@@.@@@.@.@@@......	@@...@@@.@@@.@.@@@.@@@@@
	;;	...@.@@@.@@.....@@@.....	@@...@@@.@@.....@@@.@@@@
	;;	...@.@@.@.@@@.@@@@@.....	@@...@@.@.@@@.@@@@@.@@@@
	;;	...@@.@@@@.@@@@@........	@@....@@@@.@@@@@....@@@@
	;;	..@@@@.@@.@.@@@..@@.....	@......@@.@.@@@..@@..@@@
	;;	..@@@@@..@@@...@.@@.....	@........@@@.....@@..@@@
	;;	..@@@@@@.@@.@@@....@....	@........@@..........@@@
	;;	..@@@@@@@...@@.@@.@@....	@..............@@....@@@
	;;	..@@@@@@.@@...@@@.@@....	@........@@...@@@....@@@
	;;	..@@@@@.@@@.@@.@@@.@....	@.......@@@....@@@...@@@
	;;	..@@@@@.@@.@..@.@@.@....	@.......@@......@@...@@@
	;;	..@@@@.@@......@@.@@@...	@......@@...@@.@@.....@@
	;;	..@@@..@@@@...@@@.......	@......@@@@.@.@@@....@@@
	;;	..@@....@@@..@@@........	@....@@.@@@..@@@..@@@@@@
	;;	..@@.....@@@..@@@@......	@....@@@.@@@..@@@@.@@@@@
	;;	...@@..........@@@......	@@....@@@...@@.@@@.@@@@@
	;;	................@@@.....	@@@..@@@@@@@@@@.@@@.@@@@
	;;	........................	@@@@@@@@@@@@@@@@...@@@@@

				;; SPR_BATMAN_B0 EQU &13
	8090 DEFB &00, &00, &00, &01, &01, &00, &01, &BE, &00, &01, &FF, &00, &01, &7F, &00, &01
	80A0 DEFB &7F, &00, &01, &7F, &00, &01, &7F, &00, &01, &FF, &00, &01, &FF, &00, &00, &F5
	80B0 DEFB &80, &01, &7B, &C0, &03, &FF, &E0, &07, &FF, &F0, &0F, &FF, &F0, &2F, &FF, &F0
	80C0 DEFB &5F, &FF, &F8, &5F, &FF, &F8, &1F, &FF, &F8, &1F, &FF, &FC, &1F, &FF, &FC, &1F
	80D0 DEFB &FF, &FC, &1F, &FF, &FC, &1F, &FF, &FC, &1F, &FF, &FC, &1F, &FF, &FC, &1F, &FF
	80E0 DEFB &FC, &3F, &FF, &38, &0C, &C6, &00, &00, &38, &00, &00, &00, &00, &00, &00, &00
	80F0 DEFB &FE, &FE, &FF, &FC, &40, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC
	8100 DEFB &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FE, &00
	8110 DEFB &3F, &FC, &00, &1F, &F8, &00, &0F, &F0, &00, &07, &C0, &00, &07, &A0, &00, &07
	8120 DEFB &40, &00, &03, &40, &00, &03, &80, &00, &03, &C0, &00, &01, &C0, &00, &01, &C0
	8130 DEFB &00, &01, &C0, &00, &01, &C0, &00, &01, &C0, &00, &01, &C0, &00, &01, &C0, &00
	8140 DEFB &01, &80, &00, &03, &C0, &00, &C7, &F3, &39, &FF, &FF, &C7, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@.@@@@@@@.@@@@@@@@
	;;	.......@.......@........	@@@@@@...@.......@@@@@@@
	;;	.......@@.@@@@@.........	@@@@@@...........@@@@@@@
	;;	.......@@@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@@@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@@@@@@@@@........	@@@@@@...........@@@@@@@
	;;	........@@@@.@.@@.......	@@@@@@@...........@@@@@@
	;;	.......@.@@@@.@@@@......	@@@@@@.............@@@@@
	;;	......@@@@@@@@@@@@@.....	@@@@@...............@@@@
	;;	.....@@@@@@@@@@@@@@@....	@@@@.................@@@
	;;	....@@@@@@@@@@@@@@@@....	@@...................@@@
	;;	..@.@@@@@@@@@@@@@@@@....	@.@..................@@@
	;;	.@.@@@@@@@@@@@@@@@@@@...	.@....................@@
	;;	.@.@@@@@@@@@@@@@@@@@@...	.@....................@@
	;;	...@@@@@@@@@@@@@@@@@@...	@.....................@@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	..@@@@@@@@@@@@@@..@@@...	@.....................@@
	;;	....@@..@@...@@.........	@@..............@@...@@@
	;;	..........@@@...........	@@@@..@@..@@@..@@@@@@@@@
	;;	........................	@@@@@@@@@@...@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_BATMAN_B1 EQU &14
	8150 DEFB &00, &00, &00, &01, &01, &00, &01, &BE, &00, &01, &FF, &00, &01, &7F, &00, &01
	8160 DEFB &7F, &00, &01, &7F, &00, &01, &7F, &00, &01, &FF, &00, &01, &FF, &00, &00, &F5
	8170 DEFB &80, &01, &7B, &C0, &03, &FF, &E0, &17, &FF, &F0, &2F, &FF, &F0, &2F, &FF, &F0
	8180 DEFB &1F, &FF, &F8, &1F, &FF, &F8, &1F, &FF, &F8, &1F, &FF, &FC, &1F, &FF, &FC, &1F
	8190 DEFB &FF, &FC, &1F, &FF, &FC, &1F, &FF, &FC, &1F, &FF, &FE, &3F, &FF, &FE, &7F, &FF
	81A0 DEFB &FE, &3F, &FF, &FC, &0F, &FE, &00, &03, &9C, &70, &00, &00, &00, &00, &00, &00
	81B0 DEFB &FE, &FE, &FF, &FC, &40, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC
	81C0 DEFB &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FC, &00, &7F, &FE, &00
	81D0 DEFB &3F, &FC, &00, &1F, &E8, &00, &0F, &D0, &00, &07, &A0, &00, &07, &A0, &00, &07
	81E0 DEFB &C0, &00, &03, &C0, &00, &03, &C0, &00, &03, &C0, &00, &01, &C0, &00, &01, &C0
	81F0 DEFB &00, &01, &C0, &00, &01, &C0, &00, &01, &C0, &00, &00, &80, &00, &00, &00, &00
	8200 DEFB &00, &80, &00, &01, &C0, &00, &03, &F0, &01, &77, &FC, &63, &8F, &FF, &FF, &FF
	;;	........................	@@@@@@@.@@@@@@@.@@@@@@@@
	;;	.......@.......@........	@@@@@@...@.......@@@@@@@
	;;	.......@@.@@@@@.........	@@@@@@...........@@@@@@@
	;;	.......@@@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@.@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@@@@@@@@@........	@@@@@@...........@@@@@@@
	;;	.......@@@@@@@@@........	@@@@@@...........@@@@@@@
	;;	........@@@@.@.@@.......	@@@@@@@...........@@@@@@
	;;	.......@.@@@@.@@@@......	@@@@@@.............@@@@@
	;;	......@@@@@@@@@@@@@.....	@@@.@...............@@@@
	;;	...@.@@@@@@@@@@@@@@@....	@@.@.................@@@
	;;	..@.@@@@@@@@@@@@@@@@....	@.@..................@@@
	;;	..@.@@@@@@@@@@@@@@@@....	@.@..................@@@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@..	@@.....................@
	;;	...@@@@@@@@@@@@@@@@@@@@.	@@......................
	;;	..@@@@@@@@@@@@@@@@@@@@@.	@.......................
	;;	.@@@@@@@@@@@@@@@@@@@@@@.	........................
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	....@@@@@@@@@@@.........	@@....................@@
	;;	......@@@..@@@...@@@....	@@@@...........@.@@@.@@@
	;;	........................	@@@@@@...@@...@@@...@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_BATMAN_FLY EQU &15
	8210 DEFB &00, &00, &00, &00, &00, &00, &00, &40, &40, &00, &6F, &40, &00, &7F, &C0, &00
	8220 DEFB &77, &40, &00, &7A, &C0, &00, &7F, &C0, &03, &73, &40, &0F, &6C, &D0, &1F, &AF
	8230 DEFB &F0, &10, &2C, &A8, &2E, &D7, &5C, &1D, &F8, &DC, &3B, &FF, &EC, &3B, &BA, &EC
	8240 DEFB &37, &70, &74, &37, &7D, &B4, &37, &7F, &A8, &1A, &1F, &1C, &1D, &A0, &9C, &0B
	8250 DEFB &9F, &28, &05, &6C, &80, &00, &33, &80, &00, &31, &80, &00, &73, &00, &00, &67
	8260 DEFB &80, &00, &F3, &00, &00, &63, &80, &00, &71, &80, &00, &30, &00, &00, &00, &00
	8270 DEFB &FF, &FF, &FF, &FF, &BF, &BF, &FF, &10, &1F, &FF, &00, &1F, &FF, &00, &1F, &FF
	8280 DEFB &00, &1F, &FF, &00, &1F, &FC, &00, &1F, &F0, &00, &0F, &E0, &0C, &87, &C0, &0F
	8290 DEFB &83, &C0, &0C, &83, &80, &D7, &41, &81, &F8, &C1, &83, &FF, &E1, &83, &BA, &E1
	82A0 DEFB &87, &70, &71, &87, &7D, &B1, &87, &7F, &A9, &C2, &1F, &1D, &C1, &80, &1D, &E3
	82B0 DEFB &80, &0B, &F1, &60, &87, &F8, &33, &BF, &FF, &B5, &BF, &FF, &73, &3F, &FF, &67
	82C0 DEFB &BF, &FE, &F3, &7F, &FF, &6B, &BF, &FF, &75, &BF, &FF, &B6, &7F, &FF, &CF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@.@@@@@@@.@@@@@@
	;;	.........@.......@......	@@@@@@@@...@.......@@@@@
	;;	.........@@.@@@@.@......	@@@@@@@@...........@@@@@
	;;	.........@@@@@@@@@......	@@@@@@@@...........@@@@@
	;;	.........@@@.@@@.@......	@@@@@@@@...........@@@@@
	;;	.........@@@@.@.@@......	@@@@@@@@...........@@@@@
	;;	.........@@@@@@@@@......	@@@@@@.............@@@@@
	;;	......@@.@@@..@@.@......	@@@@................@@@@
	;;	....@@@@.@@.@@..@@.@....	@@@.........@@..@....@@@
	;;	...@@@@@@.@.@@@@@@@@....	@@..........@@@@@.....@@
	;;	...@......@.@@..@.@.@...	@@..........@@..@.....@@
	;;	..@.@@@.@@.@.@@@.@.@@@..	@.......@@.@.@@@.@.....@
	;;	...@@@.@@@@@@...@@.@@@..	@......@@@@@@...@@.....@
	;;	..@@@.@@@@@@@@@@@@@.@@..	@.....@@@@@@@@@@@@@....@
	;;	..@@@.@@@.@@@.@.@@@.@@..	@.....@@@.@@@.@.@@@....@
	;;	..@@.@@@.@@@.....@@@.@..	@....@@@.@@@.....@@@...@
	;;	..@@.@@@.@@@@@.@@.@@.@..	@....@@@.@@@@@.@@.@@...@
	;;	..@@.@@@.@@@@@@@@.@.@...	@....@@@.@@@@@@@@.@.@..@
	;;	...@@.@....@@@@@...@@@..	@@....@....@@@@@...@@@.@
	;;	...@@@.@@.@.....@..@@@..	@@.....@@..........@@@.@
	;;	....@.@@@..@@@@@..@.@...	@@@...@@@...........@.@@
	;;	.....@.@.@@.@@..@.......	@@@@...@.@@.....@....@@@
	;;	..........@@..@@@.......	@@@@@.....@@..@@@.@@@@@@
	;;	..........@@...@@.......	@@@@@@@@@.@@.@.@@.@@@@@@
	;;	.........@@@..@@........	@@@@@@@@.@@@..@@..@@@@@@
	;;	.........@@..@@@@.......	@@@@@@@@.@@..@@@@.@@@@@@
	;;	........@@@@..@@........	@@@@@@@.@@@@..@@.@@@@@@@
	;;	.........@@...@@@.......	@@@@@@@@.@@.@.@@@.@@@@@@
	;;	.........@@@...@@.......	@@@@@@@@.@@@.@.@@.@@@@@@
	;;	..........@@............	@@@@@@@@@.@@.@@..@@@@@@@
	;;	........................	@@@@@@@@@@..@@@@@@@@@@@@

				;; SPR_BATMAN_FLYB EQU &16
	82D0 DEFB &00, &00, &00, &00, &00, &00, &02, &02, &00, &03, &7C, &00, &03, &FE, &00, &02
	82E0 DEFB &FE, &00, &02, &FE, &00, &02, &FE, &00, &00, &ED, &C0, &0F, &F3, &F0, &1F, &FF
	82F0 DEFB &F8, &1F, &FF, &F8, &3F, &FF, &FC, &3F, &FF, &FC, &3F, &FF, &FC, &3F, &FF, &FC
	8300 DEFB &3F, &FF, &FC, &3F, &FF, &FC, &3F, &FF, &FC, &1F, &FF, &F8, &1F, &FF, &F8, &0F
	8310 DEFB &F1, &F0, &02, &02, &00, &00, &4C, &00, &01, &8C, &00, &01, &98, &00, &03, &1C
	8320 DEFB &00, &03, &BC, &00, &07, &B8, &00, &07, &00, &00, &00, &00, &00, &00, &00, &00
	8330 DEFB &FF, &FF, &FF, &FD, &FD, &FF, &F8, &80, &FF, &F8, &00, &FF, &F8, &00, &FF, &F8
	8340 DEFB &00, &FF, &F8, &00, &FF, &F8, &00, &3F, &F0, &00, &0F, &E0, &00, &07, &C0, &00
	8350 DEFB &03, &C0, &00, &03, &80, &00, &01, &80, &00, &01, &80, &00, &01, &80, &00, &01
	8360 DEFB &80, &00, &01, &80, &00, &01, &80, &00, &01, &C0, &00, &03, &C0, &00, &03, &E0
	8370 DEFB &00, &07, &F0, &02, &0F, &FC, &4D, &FF, &FD, &AD, &FF, &FD, &9B, &FF, &FB, &5D
	8380 DEFB &FF, &FB, &BD, &FF, &F7, &BB, &FF, &F7, &47, &FF, &F8, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@.@@@@@@@.@@@@@@@@@
	;;	......@.......@.........	@@@@@...@.......@@@@@@@@
	;;	......@@.@@@@@..........	@@@@@...........@@@@@@@@
	;;	......@@@@@@@@@.........	@@@@@...........@@@@@@@@
	;;	......@.@@@@@@@.........	@@@@@...........@@@@@@@@
	;;	......@.@@@@@@@.........	@@@@@...........@@@@@@@@
	;;	......@.@@@@@@@.........	@@@@@.............@@@@@@
	;;	........@@@.@@.@@@......	@@@@................@@@@
	;;	....@@@@@@@@..@@@@@@....	@@@..................@@@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	....@@@@@@@@...@@@@@....	@@@..................@@@
	;;	......@.......@.........	@@@@..........@.....@@@@
	;;	.........@..@@..........	@@@@@@...@..@@.@@@@@@@@@
	;;	.......@@...@@..........	@@@@@@.@@.@.@@.@@@@@@@@@
	;;	.......@@..@@...........	@@@@@@.@@..@@.@@@@@@@@@@
	;;	......@@...@@@..........	@@@@@.@@.@.@@@.@@@@@@@@@
	;;	......@@@.@@@@..........	@@@@@.@@@.@@@@.@@@@@@@@@
	;;	.....@@@@.@@@...........	@@@@.@@@@.@@@.@@@@@@@@@@
	;;	.....@@@................	@@@@.@@@.@...@@@@@@@@@@@
	;;	........................	@@@@@...@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_BM_STANDING EQU &17
img_bm_standing_1:
	8390 DEFB &00, &00, &00, &00, &80, &80, &00, &BE, &80, &00, &FF, &80, &00, &DD, &80, &00
	83A0 DEFB &EB, &80, &00, &FF, &80, &00, &CC, &80, &00, &B3, &00, &00, &BF, &00, &01, &B3
	83B0 DEFB &00, &02, &5E, &80, &05, &A1, &40, &0B, &FF, &E0, &17, &75, &70, &2E, &E0, &B0
	83C0 DEFB &2E, &FB, &70, &2F, &7F, &20, &36, &3E, &40, &39, &80, &E0, &3B, &3E, &00, &3C
	83D0 DEFB &59, &60, &3E, &E7, &60, &3F, &6B, &60, &3F, &6B, &60, &3F, &63, &30, &3A, &66
	83E0 DEFB &98, &30, &C7, &C0, &30, &F1, &E0, &18, &78, &60, &00, &18, &00, &00, &00, &00
msk_bm_standing_1:
	83F0 DEFB &FF, &7F, &7F, &FE, &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE
	8400 DEFB &00, &3F, &FE, &00, &3F, &FE, &00, &3F, &FE, &33, &7F, &FE, &3F, &7F, &FC, &33
	8410 DEFB &7F, &F8, &1E, &3F, &F1, &A1, &5F, &E3, &FF, &EF, &C7, &75, &77, &8E, &E0, &B7
	8420 DEFB &8E, &FB, &77, &8F, &7F, &2F, &86, &3E, &5F, &81, &80, &EF, &83, &00, &0F, &80
	8430 DEFB &41, &0F, &80, &E7, &0F, &80, &63, &0F, &80, &63, &0F, &80, &63, &07, &80, &66
	8440 DEFB &83, &84, &C7, &C7, &86, &F1, &EF, &C3, &7A, &6F, &E7, &9B, &9F, &FF, &E7, &FF
	;;	........................	@@@@@@@@.@@@@@@@.@@@@@@@
	;;	........@.......@.......	@@@@@@@...........@@@@@@
	;;	........@.@@@@@.@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@.@@@.@@.......	@@@@@@@...........@@@@@@
	;;	........@@@.@.@@@.......	@@@@@@@...........@@@@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	........@@..@@..@.......	@@@@@@@...........@@@@@@
	;;	........@.@@..@@........	@@@@@@@...@@..@@.@@@@@@@
	;;	........@.@@@@@@........	@@@@@@@...@@@@@@.@@@@@@@
	;;	.......@@.@@..@@........	@@@@@@....@@..@@.@@@@@@@
	;;	......@..@.@@@@.@.......	@@@@@......@@@@...@@@@@@
	;;	.....@.@@.@....@.@......	@@@@...@@.@....@.@.@@@@@
	;;	....@.@@@@@@@@@@@@@.....	@@@...@@@@@@@@@@@@@.@@@@
	;;	...@.@@@.@@@.@.@.@@@....	@@...@@@.@@@.@.@.@@@.@@@
	;;	..@.@@@.@@@.....@.@@....	@...@@@.@@@.....@.@@.@@@
	;;	..@.@@@.@@@@@.@@.@@@....	@...@@@.@@@@@.@@.@@@.@@@
	;;	..@.@@@@.@@@@@@@..@.....	@...@@@@.@@@@@@@..@.@@@@
	;;	..@@.@@...@@@@@..@......	@....@@...@@@@@..@.@@@@@
	;;	..@@@..@@.......@@@.....	@......@@.......@@@.@@@@
	;;	..@@@.@@..@@@@@.........	@.....@@............@@@@
	;;	..@@@@...@.@@..@.@@.....	@........@.....@....@@@@
	;;	..@@@@@.@@@..@@@.@@.....	@.......@@@..@@@....@@@@
	;;	..@@@@@@.@@.@.@@.@@.....	@........@@...@@....@@@@
	;;	..@@@@@@.@@.@.@@.@@.....	@........@@...@@....@@@@
	;;	..@@@@@@.@@...@@..@@....	@........@@...@@.....@@@
	;;	..@@@.@..@@..@@.@..@@...	@........@@..@@.@.....@@
	;;	..@@....@@...@@@@@......	@....@..@@...@@@@@...@@@
	;;	..@@....@@@@...@@@@.....	@....@@.@@@@...@@@@.@@@@
	;;	...@@....@@@@....@@.....	@@....@@.@@@@.@..@@.@@@@
	;;	...........@@...........	@@@..@@@@..@@.@@@..@@@@@
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@

				;; SPR_WOLF_0 EQU &18
	8450 DEFB &00, &00, &00, &01, &F3, &80, &07, &FB, &C0, &0F, &FD, &E0, &1F, &1F, &D0, &07
	8460 DEFB &8F, &90, &0F, &95, &50, &0F, &C0, &20, &1F, &EF, &40, &03, &7F, &80, &06, &BF
	8470 DEFB &C0, &00, &7D, &40, &00, &3F, &C0, &01, &DC, &40, &03, &E8, &A0, &07, &AA, &A0
	8480 DEFB &0F, &77, &50, &0F, &9F, &C8, &07, &6F, &DC, &00, &ED, &D8, &00, &1F, &C0, &00
	8490 DEFB &FF, &80, &00, &71, &C0, &00, &7B, &C0, &00, &3B, &C0, &00, &7B, &80, &00, &F7
	84A0 DEFB &00, &01, &E7, &C0, &00, &FB, &E0, &00, &7D, &80, &00, &34, &00, &00, &00, &00
	84B0 DEFB &FE, &0C, &7F, &F9, &F3, &BF, &F7, &FB, &DF, &EF, &FD, &EF, &DF, &1F, &D7, &E7
	84C0 DEFB &8F, &97, &EF, &85, &17, &EF, &C0, &2F, &DF, &EF, &5F, &E3, &7F, &BF, &F6, &BF
	84D0 DEFB &DF, &F9, &7D, &5F, &FE, &3F, &DF, &FC, &1C, &5F, &F8, &08, &8F, &F0, &08, &8F
	84E0 DEFB &E0, &00, &07, &E0, &00, &0B, &F0, &60, &1D, &F8, &E0, &1B, &FF, &00, &07, &FE
	84F0 DEFB &00, &3F, &FF, &00, &1F, &FF, &00, &1F, &FF, &80, &1F, &FF, &00, &3F, &FE, &00
	8500 DEFB &3F, &FC, &00, &1F, &FE, &00, &0F, &FF, &00, &1F, &FF, &80, &7F, &FF, &CB, &FF
	;;	........................	@@@@@@@.....@@...@@@@@@@
	;;	.......@@@@@..@@@.......	@@@@@..@@@@@..@@@.@@@@@@
	;;	.....@@@@@@@@.@@@@......	@@@@.@@@@@@@@.@@@@.@@@@@
	;;	....@@@@@@@@@@.@@@@.....	@@@.@@@@@@@@@@.@@@@.@@@@
	;;	...@@@@@...@@@@@@@.@....	@@.@@@@@...@@@@@@@.@.@@@
	;;	.....@@@@...@@@@@..@....	@@@..@@@@...@@@@@..@.@@@
	;;	....@@@@@..@.@.@.@.@....	@@@.@@@@@....@.@...@.@@@
	;;	....@@@@@@........@.....	@@@.@@@@@@........@.@@@@
	;;	...@@@@@@@@.@@@@.@......	@@.@@@@@@@@.@@@@.@.@@@@@
	;;	......@@.@@@@@@@@.......	@@@...@@.@@@@@@@@.@@@@@@
	;;	.....@@.@.@@@@@@@@......	@@@@.@@.@.@@@@@@@@.@@@@@
	;;	.........@@@@@.@.@......	@@@@@..@.@@@@@.@.@.@@@@@
	;;	..........@@@@@@@@......	@@@@@@@...@@@@@@@@.@@@@@
	;;	.......@@@.@@@...@......	@@@@@@.....@@@...@.@@@@@
	;;	......@@@@@.@...@.@.....	@@@@@.......@...@...@@@@
	;;	.....@@@@.@.@.@.@.@.....	@@@@........@...@...@@@@
	;;	....@@@@.@@@.@@@.@.@....	@@@..................@@@
	;;	....@@@@@..@@@@@@@..@...	@@@.................@.@@
	;;	.....@@@.@@.@@@@@@.@@@..	@@@@.....@@........@@@.@
	;;	........@@@.@@.@@@.@@...	@@@@@...@@@........@@.@@
	;;	...........@@@@@@@......	@@@@@@@@.............@@@
	;;	........@@@@@@@@@.......	@@@@@@@...........@@@@@@
	;;	.........@@@...@@@......	@@@@@@@@...........@@@@@
	;;	.........@@@@.@@@@......	@@@@@@@@...........@@@@@
	;;	..........@@@.@@@@......	@@@@@@@@@..........@@@@@
	;;	.........@@@@.@@@.......	@@@@@@@@..........@@@@@@
	;;	........@@@@.@@@........	@@@@@@@...........@@@@@@
	;;	.......@@@@..@@@@@......	@@@@@@.............@@@@@
	;;	........@@@@@.@@@@@.....	@@@@@@@.............@@@@
	;;	.........@@@@@.@@.......	@@@@@@@@...........@@@@@
	;;	..........@@.@..........	@@@@@@@@@........@@@@@@@
	;;	........................	@@@@@@@@@@..@.@@@@@@@@@@

				;; SPR_WOLF_1 EQU &19
	8510 DEFB &00, &00, &00, &01, &F3, &80, &07, &FB, &C0, &0F, &FD, &E0, &1F, &1F, &D0, &07
	8520 DEFB &8F, &90, &0F, &95, &50, &0F, &C0, &20, &1F, &EF, &40, &03, &7F, &80, &06, &BF
	8530 DEFB &C0, &00, &7D, &40, &00, &3F, &C0, &01, &DC, &40, &03, &E8, &A0, &03, &EA, &A0
	8540 DEFB &03, &B7, &60, &03, &DF, &E0, &01, &E7, &F0, &00, &D9, &D8, &00, &3B, &D8, &00
	8550 DEFB &C5, &80, &00, &FB, &C0, &00, &F9, &E0, &01, &F0, &E0, &03, &C0, &E0, &07, &81
	8560 DEFB &C0, &03, &E1, &F0, &01, &F0, &F8, &00, &D0, &7C, &00, &00, &30, &00, &00, &00
	8570 DEFB &FE, &0C, &7F, &F9, &F3, &BF, &F7, &FB, &DF, &EF, &FD, &EF, &DF, &1F, &D7, &E7
	8580 DEFB &8F, &97, &EF, &85, &17, &EF, &C0, &2F, &DF, &EF, &5F, &E3, &7F, &BF, &F6, &BF
	8590 DEFB &DF, &F9, &7D, &5F, &FE, &3F, &DF, &FC, &1C, &5F, &F8, &08, &8F, &F8, &08, &8F
	85A0 DEFB &F8, &00, &0F, &F8, &00, &0F, &FC, &00, &07, &FE, &18, &1B, &FF, &38, &1B, &FE
	85B0 DEFB &00, &27, &FE, &00, &1F, &FE, &00, &0F, &FC, &06, &0F, &F8, &0E, &0F, &F0, &1C
	85C0 DEFB &0F, &F8, &0C, &07, &FC, &06, &03, &FE, &07, &01, &FF, &2F, &83, &FF, &FF, &CF
	;;	........................	@@@@@@@.....@@...@@@@@@@
	;;	.......@@@@@..@@@.......	@@@@@..@@@@@..@@@.@@@@@@
	;;	.....@@@@@@@@.@@@@......	@@@@.@@@@@@@@.@@@@.@@@@@
	;;	....@@@@@@@@@@.@@@@.....	@@@.@@@@@@@@@@.@@@@.@@@@
	;;	...@@@@@...@@@@@@@.@....	@@.@@@@@...@@@@@@@.@.@@@
	;;	.....@@@@...@@@@@..@....	@@@..@@@@...@@@@@..@.@@@
	;;	....@@@@@..@.@.@.@.@....	@@@.@@@@@....@.@...@.@@@
	;;	....@@@@@@........@.....	@@@.@@@@@@........@.@@@@
	;;	...@@@@@@@@.@@@@.@......	@@.@@@@@@@@.@@@@.@.@@@@@
	;;	......@@.@@@@@@@@.......	@@@...@@.@@@@@@@@.@@@@@@
	;;	.....@@.@.@@@@@@@@......	@@@@.@@.@.@@@@@@@@.@@@@@
	;;	.........@@@@@.@.@......	@@@@@..@.@@@@@.@.@.@@@@@
	;;	..........@@@@@@@@......	@@@@@@@...@@@@@@@@.@@@@@
	;;	.......@@@.@@@...@......	@@@@@@.....@@@...@.@@@@@
	;;	......@@@@@.@...@.@.....	@@@@@.......@...@...@@@@
	;;	......@@@@@.@.@.@.@.....	@@@@@.......@...@...@@@@
	;;	......@@@.@@.@@@.@@.....	@@@@@...............@@@@
	;;	......@@@@.@@@@@@@@.....	@@@@@...............@@@@
	;;	.......@@@@..@@@@@@@....	@@@@@@...............@@@
	;;	........@@.@@..@@@.@@...	@@@@@@@....@@......@@.@@
	;;	..........@@@.@@@@.@@...	@@@@@@@@..@@@......@@.@@
	;;	........@@...@.@@.......	@@@@@@@...........@..@@@
	;;	........@@@@@.@@@@......	@@@@@@@............@@@@@
	;;	........@@@@@..@@@@.....	@@@@@@@.............@@@@
	;;	.......@@@@@....@@@.....	@@@@@@.......@@.....@@@@
	;;	......@@@@......@@@.....	@@@@@.......@@@.....@@@@
	;;	.....@@@@......@@@......	@@@@.......@@@......@@@@
	;;	......@@@@@....@@@@@....	@@@@@.......@@.......@@@
	;;	.......@@@@@....@@@@@...	@@@@@@.......@@.......@@
	;;	........@@.@.....@@@@@..	@@@@@@@......@@@.......@
	;;	..................@@....	@@@@@@@@..@.@@@@@.....@@
	;;	........................	@@@@@@@@@@@@@@@@@@..@@@@

				;; SPR_WOLF_2 EQU &1A
	85D0 DEFB &00, &00, &00, &01, &F3, &80, &07, &FB, &C0, &0F, &FD, &E0, &1F, &1F, &D0, &07
	85E0 DEFB &8F, &90, &0F, &95, &50, &0F, &C0, &20, &1F, &EF, &40, &03, &7F, &80, &06, &BF
	85F0 DEFB &C0, &00, &7D, &40, &00, &3F, &C0, &01, &DC, &40, &03, &E8, &A0, &07, &EA, &A0
	8600 DEFB &0F, &77, &70, &0E, &FF, &D8, &07, &1F, &D6, &02, &ED, &D6, &00, &DF, &8C, &00
	8610 DEFB &3B, &00, &00, &7D, &80, &00, &BD, &00, &01, &DC, &00, &00, &B8, &00, &00, &3C
	8620 DEFB &00, &00, &3A, &00, &00, &1F, &00, &00, &0F, &80, &00, &06, &80, &00, &00, &00
	8630 DEFB &FE, &0C, &7F, &F9, &F3, &BF, &F7, &FB, &DF, &EF, &FD, &EF, &DF, &1F, &D7, &E7
	8640 DEFB &8F, &97, &EF, &85, &17, &EF, &C0, &2F, &DF, &EF, &5F, &E3, &7F, &BF, &F6, &BF
	8650 DEFB &DF, &F9, &7D, &5F, &FE, &3F, &DF, &FC, &1C, &5F, &F8, &08, &8F, &F0, &08, &8F
	8660 DEFB &E0, &00, &07, &E0, &00, &01, &F0, &00, &06, &F8, &E0, &06, &FC, &C0, &2D, &FF
	8670 DEFB &00, &73, &FF, &00, &3F, &FE, &00, &7F, &FC, &00, &FF, &FE, &03, &FF, &FF, &01
	8680 DEFB &FF, &FF, &80, &FF, &FF, &C0, &7F, &FF, &E0, &3F, &FF, &F0, &3F, &FF, &F9, &7F
	;;	........................	@@@@@@@.....@@...@@@@@@@
	;;	.......@@@@@..@@@.......	@@@@@..@@@@@..@@@.@@@@@@
	;;	.....@@@@@@@@.@@@@......	@@@@.@@@@@@@@.@@@@.@@@@@
	;;	....@@@@@@@@@@.@@@@.....	@@@.@@@@@@@@@@.@@@@.@@@@
	;;	...@@@@@...@@@@@@@.@....	@@.@@@@@...@@@@@@@.@.@@@
	;;	.....@@@@...@@@@@..@....	@@@..@@@@...@@@@@..@.@@@
	;;	....@@@@@..@.@.@.@.@....	@@@.@@@@@....@.@...@.@@@
	;;	....@@@@@@........@.....	@@@.@@@@@@........@.@@@@
	;;	...@@@@@@@@.@@@@.@......	@@.@@@@@@@@.@@@@.@.@@@@@
	;;	......@@.@@@@@@@@.......	@@@...@@.@@@@@@@@.@@@@@@
	;;	.....@@.@.@@@@@@@@......	@@@@.@@.@.@@@@@@@@.@@@@@
	;;	.........@@@@@.@.@......	@@@@@..@.@@@@@.@.@.@@@@@
	;;	..........@@@@@@@@......	@@@@@@@...@@@@@@@@.@@@@@
	;;	.......@@@.@@@...@......	@@@@@@.....@@@...@.@@@@@
	;;	......@@@@@.@...@.@.....	@@@@@.......@...@...@@@@
	;;	.....@@@@@@.@.@.@.@.....	@@@@........@...@...@@@@
	;;	....@@@@.@@@.@@@.@@@....	@@@..................@@@
	;;	....@@@.@@@@@@@@@@.@@...	@@@....................@
	;;	.....@@@...@@@@@@@.@.@@.	@@@@.................@@.
	;;	......@.@@@.@@.@@@.@.@@.	@@@@@...@@@..........@@.
	;;	........@@.@@@@@@...@@..	@@@@@@..@@........@.@@.@
	;;	..........@@@.@@........	@@@@@@@@.........@@@..@@
	;;	.........@@@@@.@@.......	@@@@@@@@..........@@@@@@
	;;	........@.@@@@.@........	@@@@@@@..........@@@@@@@
	;;	.......@@@.@@@..........	@@@@@@..........@@@@@@@@
	;;	........@.@@@...........	@@@@@@@.......@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@.......@@@@@@@@@
	;;	..........@@@.@.........	@@@@@@@@@.......@@@@@@@@
	;;	...........@@@@@........	@@@@@@@@@@.......@@@@@@@
	;;	............@@@@@.......	@@@@@@@@@@@.......@@@@@@
	;;	.............@@.@.......	@@@@@@@@@@@@......@@@@@@
	;;	........................	@@@@@@@@@@@@@..@.@@@@@@@

				;; SPR_WOLF_B0 EQU &1B
	8690 DEFB &00, &00, &00, &01, &CF, &80, &03, &F3, &E0, &07, &F9, &F0, &0F, &EE, &F8, &0F
	86A0 DEFB &E1, &A0, &0F, &F7, &B0, &07, &9B, &B0, &0B, &C7, &78, &0D, &BF, &C0, &07, &BF
	86B0 DEFB &60, &05, &5F, &00, &01, &7B, &C0, &03, &FF, &E0, &03, &9F, &A0, &03, &BF, &A0
	86C0 DEFB &07, &BF, &A0, &17, &7F, &A0, &36, &FF, &40, &19, &FF, &80, &03, &FB, &80, &03
	86D0 DEFB &E7, &00, &03, &EF, &00, &03, &CF, &00, &01, &D6, &00, &02, &EF, &00, &07, &EF
	86E0 DEFB &00, &07, &EF, &00, &01, &E7, &00, &00, &E0, &00, &00, &00, &00, &00, &00, &00
	86F0 DEFB &FE, &30, &7F, &FD, &CF, &9F, &FB, &F3, &EF, &F7, &F8, &F7, &EF, &EE, &7B, &EF
	8700 DEFB &E0, &27, &EF, &F0, &37, &F7, &98, &37, &EB, &C0, &7B, &ED, &80, &C7, &F7, &80
	8710 DEFB &6F, &F5, &00, &1F, &F8, &00, &1F, &F8, &00, &0F, &F8, &00, &0F, &F8, &00, &0F
	8720 DEFB &E0, &00, &0F, &D0, &00, &0F, &B0, &00, &1F, &D8, &00, &3F, &E0, &00, &3F, &F8
	8730 DEFB &00, &7F, &F8, &00, &7F, &F8, &00, &7F, &FC, &00, &FF, &F8, &00, &7F, &F0, &00
	8740 DEFB &7F, &F0, &00, &7F, &F8, &00, &7F, &FE, &08, &FF, &FF, &1F, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@...@@.....@@@@@@@
	;;	.......@@@..@@@@@.......	@@@@@@.@@@..@@@@@..@@@@@
	;;	......@@@@@@..@@@@@.....	@@@@@.@@@@@@..@@@@@.@@@@
	;;	.....@@@@@@@@..@@@@@....	@@@@.@@@@@@@@...@@@@.@@@
	;;	....@@@@@@@.@@@.@@@@@...	@@@.@@@@@@@.@@@..@@@@.@@
	;;	....@@@@@@@....@@.@.....	@@@.@@@@@@@.......@..@@@
	;;	....@@@@@@@@.@@@@.@@....	@@@.@@@@@@@@......@@.@@@
	;;	.....@@@@..@@.@@@.@@....	@@@@.@@@@..@@.....@@.@@@
	;;	....@.@@@@...@@@.@@@@...	@@@.@.@@@@.......@@@@.@@
	;;	....@@.@@.@@@@@@@@......	@@@.@@.@@.......@@...@@@
	;;	.....@@@@.@@@@@@.@@.....	@@@@.@@@@........@@.@@@@
	;;	.....@.@.@.@@@@@........	@@@@.@.@...........@@@@@
	;;	.......@.@@@@.@@@@......	@@@@@..............@@@@@
	;;	......@@@@@@@@@@@@@.....	@@@@@...............@@@@
	;;	......@@@..@@@@@@.@.....	@@@@@...............@@@@
	;;	......@@@.@@@@@@@.@.....	@@@@@...............@@@@
	;;	.....@@@@.@@@@@@@.@.....	@@@.................@@@@
	;;	...@.@@@.@@@@@@@@.@.....	@@.@................@@@@
	;;	..@@.@@.@@@@@@@@.@......	@.@@...............@@@@@
	;;	...@@..@@@@@@@@@@.......	@@.@@.............@@@@@@
	;;	......@@@@@@@.@@@.......	@@@...............@@@@@@
	;;	......@@@@@..@@@........	@@@@@............@@@@@@@
	;;	......@@@@@.@@@@........	@@@@@............@@@@@@@
	;;	......@@@@..@@@@........	@@@@@............@@@@@@@
	;;	.......@@@.@.@@.........	@@@@@@..........@@@@@@@@
	;;	......@.@@@.@@@@........	@@@@@............@@@@@@@
	;;	.....@@@@@@.@@@@........	@@@@.............@@@@@@@
	;;	.....@@@@@@.@@@@........	@@@@.............@@@@@@@
	;;	.......@@@@..@@@........	@@@@@............@@@@@@@
	;;	........@@@.............	@@@@@@@.....@...@@@@@@@@
	;;	........................	@@@@@@@@...@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_WOLF_B1 EQU &1C
	8750 DEFB &00, &00, &00, &01, &CF, &80, &03, &F3, &E0, &07, &F9, &F0, &0F, &EE, &F8, &0F
	8760 DEFB &E1, &A0, &0F, &F7, &B0, &07, &9B, &B0, &0B, &C7, &78, &0D, &BF, &C0, &07, &BF
	8770 DEFB &60, &05, &5E, &00, &01, &7B, &C0, &02, &BF, &E0, &03, &DF, &A0, &01, &EF, &A0
	8780 DEFB &02, &EF, &80, &02, &EF, &80, &02, &9F, &00, &01, &6F, &80, &07, &6F, &80, &0F
	8790 DEFB &97, &00, &0F, &EF, &00, &0E, &1E, &00, &37, &1C, &00, &3E, &0E, &00, &1F, &0F
	87A0 DEFB &00, &07, &37, &00, &00, &3E, &00, &00, &0D, &00, &00, &00, &00, &00, &00, &00
	87B0 DEFB &FE, &30, &7F, &FD, &CF, &9F, &FB, &F3, &EF, &F7, &F8, &F7, &EF, &EE, &7B, &EF
	87C0 DEFB &E0, &27, &EF, &F0, &37, &F7, &98, &37, &EB, &C0, &7B, &ED, &80, &C7, &F7, &80
	87D0 DEFB &6F, &F5, &00, &1F, &F9, &00, &1F, &F8, &00, &0F, &F8, &00, &0F, &FC, &00, &0F
	87E0 DEFB &F8, &00, &1F, &F8, &00, &3F, &F8, &00, &7F, &F8, &60, &3F, &F0, &60, &3F, &E0
	87F0 DEFB &00, &7F, &E0, &00, &7F, &C0, &00, &FF, &80, &41, &FF, &80, &E0, &FF, &C0, &40
	8800 DEFB &7F, &E0, &00, &7F, &F8, &80, &FF, &FF, &C0, &7F, &FF, &F2, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@...@@.....@@@@@@@
	;;	.......@@@..@@@@@.......	@@@@@@.@@@..@@@@@..@@@@@
	;;	......@@@@@@..@@@@@.....	@@@@@.@@@@@@..@@@@@.@@@@
	;;	.....@@@@@@@@..@@@@@....	@@@@.@@@@@@@@...@@@@.@@@
	;;	....@@@@@@@.@@@.@@@@@...	@@@.@@@@@@@.@@@..@@@@.@@
	;;	....@@@@@@@....@@.@.....	@@@.@@@@@@@.......@..@@@
	;;	....@@@@@@@@.@@@@.@@....	@@@.@@@@@@@@......@@.@@@
	;;	.....@@@@..@@.@@@.@@....	@@@@.@@@@..@@.....@@.@@@
	;;	....@.@@@@...@@@.@@@@...	@@@.@.@@@@.......@@@@.@@
	;;	....@@.@@.@@@@@@@@......	@@@.@@.@@.......@@...@@@
	;;	.....@@@@.@@@@@@.@@.....	@@@@.@@@@........@@.@@@@
	;;	.....@.@.@.@@@@.........	@@@@.@.@...........@@@@@
	;;	.......@.@@@@.@@@@......	@@@@@..@...........@@@@@
	;;	......@.@.@@@@@@@@@.....	@@@@@...............@@@@
	;;	......@@@@.@@@@@@.@.....	@@@@@...............@@@@
	;;	.......@@@@.@@@@@.@.....	@@@@@@..............@@@@
	;;	......@.@@@.@@@@@.......	@@@@@..............@@@@@
	;;	......@.@@@.@@@@@.......	@@@@@.............@@@@@@
	;;	......@.@..@@@@@........	@@@@@............@@@@@@@
	;;	.......@.@@.@@@@@.......	@@@@@....@@.......@@@@@@
	;;	.....@@@.@@.@@@@@.......	@@@@.....@@.......@@@@@@
	;;	....@@@@@..@.@@@........	@@@..............@@@@@@@
	;;	....@@@@@@@.@@@@........	@@@..............@@@@@@@
	;;	....@@@....@@@@.........	@@..............@@@@@@@@
	;;	..@@.@@@...@@@..........	@........@.....@@@@@@@@@
	;;	..@@@@@.....@@@.........	@.......@@@.....@@@@@@@@
	;;	...@@@@@....@@@@........	@@.......@.......@@@@@@@
	;;	.....@@@..@@.@@@........	@@@..............@@@@@@@
	;;	..........@@@@@.........	@@@@@...@.......@@@@@@@@
	;;	............@@.@........	@@@@@@@@@@.......@@@@@@@
	;;	........................	@@@@@@@@@@@@..@.@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_WOLF_B2 EQU &1D
	8810 DEFB &00, &00, &00, &01, &CF, &80, &03, &F3, &E0, &07, &F9, &F0, &0F, &EE, &F8, &0F
	8820 DEFB &E1, &A0, &0F, &F7, &B0, &07, &9B, &B0, &0B, &C7, &78, &0D, &BF, &C0, &07, &BF
	8830 DEFB &60, &05, &5F, &00, &00, &7B, &C0, &03, &FF, &E0, &03, &DF, &B0, &07, &DF, &B8
	8840 DEFB &0F, &BF, &B8, &17, &7F, &B8, &34, &FF, &88, &3B, &FF, &B0, &03, &FD, &B0, &03
	8850 DEFB &FB, &00, &01, &E0, &00, &01, &D8, &00, &00, &F0, &00, &03, &7C, &00, &00, &3E
	8860 DEFB &00, &00, &D8, &00, &00, &F6, &00, &00, &34, &00, &00, &00, &00, &00, &00, &00
	8870 DEFB &FE, &30, &7F, &FD, &CF, &9F, &FB, &F3, &EF, &F7, &F8, &F7, &EF, &EE, &7B, &EF
	8880 DEFB &E0, &27, &EF, &F0, &37, &F7, &98, &37, &EB, &C0, &7B, &ED, &80, &C7, &F7, &80
	8890 DEFB &6F, &F5, &00, &1F, &F8, &00, &1F, &F8, &00, &0F, &F8, &00, &07, &F0, &00, &03
	88A0 DEFB &E0, &00, &03, &D0, &00, &03, &B0, &00, &03, &B8, &00, &37, &C0, &00, &37, &F8
	88B0 DEFB &00, &4F, &FC, &00, &FF, &FC, &03, &FF, &FC, &03, &FF, &F8, &01, &FF, &FC, &00
	88C0 DEFB &FF, &FE, &01, &FF, &FE, &00, &FF, &FF, &01, &FF, &FF, &CB, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@...@@.....@@@@@@@
	;;	.......@@@..@@@@@.......	@@@@@@.@@@..@@@@@..@@@@@
	;;	......@@@@@@..@@@@@.....	@@@@@.@@@@@@..@@@@@.@@@@
	;;	.....@@@@@@@@..@@@@@....	@@@@.@@@@@@@@...@@@@.@@@
	;;	....@@@@@@@.@@@.@@@@@...	@@@.@@@@@@@.@@@..@@@@.@@
	;;	....@@@@@@@....@@.@.....	@@@.@@@@@@@.......@..@@@
	;;	....@@@@@@@@.@@@@.@@....	@@@.@@@@@@@@......@@.@@@
	;;	.....@@@@..@@.@@@.@@....	@@@@.@@@@..@@.....@@.@@@
	;;	....@.@@@@...@@@.@@@@...	@@@.@.@@@@.......@@@@.@@
	;;	....@@.@@.@@@@@@@@......	@@@.@@.@@.......@@...@@@
	;;	.....@@@@.@@@@@@.@@.....	@@@@.@@@@........@@.@@@@
	;;	.....@.@.@.@@@@@........	@@@@.@.@...........@@@@@
	;;	.........@@@@.@@@@......	@@@@@..............@@@@@
	;;	......@@@@@@@@@@@@@.....	@@@@@...............@@@@
	;;	......@@@@.@@@@@@.@@....	@@@@@................@@@
	;;	.....@@@@@.@@@@@@.@@@...	@@@@..................@@
	;;	....@@@@@.@@@@@@@.@@@...	@@@...................@@
	;;	...@.@@@.@@@@@@@@.@@@...	@@.@..................@@
	;;	..@@.@..@@@@@@@@@...@...	@.@@..................@@
	;;	..@@@.@@@@@@@@@@@.@@....	@.@@@.............@@.@@@
	;;	......@@@@@@@@.@@.@@....	@@................@@.@@@
	;;	......@@@@@@@.@@........	@@@@@............@..@@@@
	;;	.......@@@@.............	@@@@@@..........@@@@@@@@
	;;	.......@@@.@@...........	@@@@@@........@@@@@@@@@@
	;;	........@@@@............	@@@@@@........@@@@@@@@@@
	;;	......@@.@@@@@..........	@@@@@..........@@@@@@@@@
	;;	..........@@@@@.........	@@@@@@..........@@@@@@@@
	;;	........@@.@@...........	@@@@@@@........@@@@@@@@@
	;;	........@@@@.@@.........	@@@@@@@.........@@@@@@@@
	;;	..........@@.@..........	@@@@@@@@.......@@@@@@@@@
	;;	........................	@@@@@@@@@@..@.@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_DEMON EQU &1E
	88D0 DEFB &00, &00, &00, &00, &7F, &40, &01, &FE, &C0, &03, &FD, &C0, &03, &FB, &D0, &07
	88E0 DEFB &FB, &D8, &07, &FD, &D8, &07, &FE, &38, &0F, &E3, &E4, &0F, &9D, &CC, &0F, &E2
	88F0 DEFB &90, &0F, &C0, &08, &0F, &EE, &DA, &13, &F0, &42, &3F, &FC, &EE, &2F, &F8, &82
	8900 DEFB &37, &F7, &74, &3F, &E7, &FC, &1F, &C6, &FA, &0F, &88, &76, &06, &1F, &8C, &0E
	8910 DEFB &80, &F0, &0F, &C1, &0A, &0F, &E1, &DA, &1F, &D1, &D4, &1E, &EC, &0C, &1E, &F7
	8920 DEFB &FA, &3C, &3F, &10, &3C, &0F, &F0, &30, &03, &E0, &00, &00, &00, &00, &00, &00
	8930 DEFB &FF, &80, &BF, &FE, &00, &5F, &FC, &00, &DF, &F8, &01, &CF, &F8, &03, &C7, &F0
	8940 DEFB &03, &C3, &F0, &01, &C3, &F0, &00, &03, &E0, &00, &01, &E0, &00, &01, &E0, &00
	8950 DEFB &03, &E0, &00, &09, &E0, &0E, &18, &C0, &00, &00, &80, &00, &00, &80, &00, &00
	8960 DEFB &80, &00, &01, &80, &00, &01, &C0, &00, &00, &E0, &00, &00, &F0, &00, &01, &E0
	8970 DEFB &00, &01, &E0, &01, &08, &E0, &01, &D8, &C0, &01, &D1, &C0, &00, &01, &C0, &00
	8980 DEFB &00, &81, &00, &05, &81, &C0, &07, &83, &F0, &0F, &CF, &FC, &1F, &FF, &FF, &FF
	;;	........................	@@@@@@@@@.......@.@@@@@@
	;;	.........@@@@@@@.@......	@@@@@@@..........@.@@@@@
	;;	.......@@@@@@@@.@@......	@@@@@@..........@@.@@@@@
	;;	......@@@@@@@@.@@@......	@@@@@..........@@@..@@@@
	;;	......@@@@@@@.@@@@.@....	@@@@@.........@@@@...@@@
	;;	.....@@@@@@@@.@@@@.@@...	@@@@..........@@@@....@@
	;;	.....@@@@@@@@@.@@@.@@...	@@@@...........@@@....@@
	;;	.....@@@@@@@@@@...@@@...	@@@@..................@@
	;;	....@@@@@@@...@@@@@..@..	@@@....................@
	;;	....@@@@@..@@@.@@@..@@..	@@@....................@
	;;	....@@@@@@@...@.@..@....	@@@...................@@
	;;	....@@@@@@..........@...	@@@.................@..@
	;;	....@@@@@@@.@@@.@@.@@.@.	@@@.........@@@....@@...
	;;	...@..@@@@@@.....@....@.	@@......................
	;;	..@@@@@@@@@@@@..@@@.@@@.	@.......................
	;;	..@.@@@@@@@@@...@.....@.	@.......................
	;;	..@@.@@@@@@@.@@@.@@@.@..	@......................@
	;;	..@@@@@@@@@..@@@@@@@@@..	@......................@
	;;	...@@@@@@@...@@.@@@@@.@.	@@......................
	;;	....@@@@@...@....@@@.@@.	@@@.....................
	;;	.....@@....@@@@@@...@@..	@@@@...................@
	;;	....@@@.@.......@@@@....	@@@....................@
	;;	....@@@@@@.....@....@.@.	@@@............@....@...
	;;	....@@@@@@@....@@@.@@.@.	@@@............@@@.@@...
	;;	...@@@@@@@.@...@@@.@.@..	@@.............@@@.@...@
	;;	...@@@@.@@@.@@......@@..	@@.....................@
	;;	...@@@@.@@@@.@@@@@@@@.@.	@@......................
	;;	..@@@@....@@@@@@...@....	@......@.............@.@
	;;	..@@@@......@@@@@@@@....	@......@@@...........@@@
	;;	..@@..........@@@@@.....	@.....@@@@@@........@@@@
	;;	........................	@@..@@@@@@@@@@.....@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_DEMONB EQU &1F
	8990 DEFB &00, &00, &00, &1C, &FE, &00, &13, &FF, &80, &0F, &F9, &E0, &1F, &FE, &F0, &3F
	89A0 DEFB &FF, &F8, &3F, &FF, &F8, &7F, &FF, &FC, &7F, &FF, &F4, &3F, &BF, &1C, &3F, &EA
	89B0 DEFB &0A, &31, &FE, &06, &6E, &D4, &06, &7B, &7F, &26, &75, &3F, &C6, &77, &7F, &0E
	89C0 DEFB &77, &7E, &1E, &3E, &FE, &7C, &79, &FE, &6C, &73, &FF, &1C, &7B, &FF, &F8, &37
	89D0 DEFB &FF, &F8, &17, &FF, &F4, &17, &FF, &D6, &0F, &FE, &2E, &0F, &EF, &40, &0F, &DE
	89E0 DEFB &00, &1F, &C0, &00, &1F, &80, &00, &1F, &00, &00, &0C, &00, &00, &00, &00, &00
	89F0 DEFB &E3, &01, &FF, &DC, &00, &7F, &D0, &00, &1F, &E0, &00, &0F, &C0, &00, &07, &80
	8A00 DEFB &00, &03, &80, &00, &03, &00, &00, &01, &00, &00, &01, &80, &00, &01, &80, &00
	8A10 DEFB &00, &80, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	8A20 DEFB &00, &00, &00, &80, &00, &01, &00, &00, &01, &00, &00, &01, &00, &00, &03, &80
	8A30 DEFB &00, &03, &C0, &00, &01, &C0, &00, &00, &E0, &00, &00, &E0, &00, &11, &E0, &00
	8A40 DEFB &BF, &C0, &01, &FF, &C0, &3F, &FF, &C0, &7F, &FF, &E0, &FF, &FF, &F3, &FF, &FF
	;;	........................	@@@...@@.......@@@@@@@@@
	;;	...@@@..@@@@@@@.........	@@.@@@...........@@@@@@@
	;;	...@..@@@@@@@@@@@.......	@@.@...............@@@@@
	;;	....@@@@@@@@@..@@@@.....	@@@.................@@@@
	;;	...@@@@@@@@@@@@.@@@@....	@@...................@@@
	;;	..@@@@@@@@@@@@@@@@@@@...	@.....................@@
	;;	..@@@@@@@@@@@@@@@@@@@...	@.....................@@
	;;	.@@@@@@@@@@@@@@@@@@@@@..	.......................@
	;;	.@@@@@@@@@@@@@@@@@@@.@..	.......................@
	;;	..@@@@@@@.@@@@@@...@@@..	@......................@
	;;	..@@@@@@@@@.@.@.....@.@.	@.......................
	;;	..@@...@@@@@@@@......@@.	@.......................
	;;	.@@.@@@.@@.@.@.......@@.	........................
	;;	.@@@@.@@.@@@@@@@..@..@@.	........................
	;;	.@@@.@.@..@@@@@@@@...@@.	........................
	;;	.@@@.@@@.@@@@@@@....@@@.	........................
	;;	.@@@.@@@.@@@@@@....@@@@.	........................
	;;	..@@@@@.@@@@@@@..@@@@@..	@......................@
	;;	.@@@@..@@@@@@@@..@@.@@..	.......................@
	;;	.@@@..@@@@@@@@@@...@@@..	.......................@
	;;	.@@@@.@@@@@@@@@@@@@@@...	......................@@
	;;	..@@.@@@@@@@@@@@@@@@@...	@.....................@@
	;;	...@.@@@@@@@@@@@@@@@.@..	@@.....................@
	;;	...@.@@@@@@@@@@@@@.@.@@.	@@......................
	;;	....@@@@@@@@@@@...@.@@@.	@@@.....................
	;;	....@@@@@@@.@@@@.@......	@@@................@...@
	;;	....@@@@@@.@@@@.........	@@@.............@.@@@@@@
	;;	...@@@@@@@..............	@@.............@@@@@@@@@
	;;	...@@@@@@...............	@@........@@@@@@@@@@@@@@
	;;	...@@@@@................	@@.......@@@@@@@@@@@@@@@
	;;	....@@..................	@@@.....@@@@@@@@@@@@@@@@
	;;	........................	@@@@..@@@@@@@@@@@@@@@@@@

				;; SPR_SHARK_0 EQU &20
	8A50 DEFB &00, &00, &00, &00, &3E, &00, &01, &C1, &C0, &06, &00, &30, &18, &00, &88, &26
	8A60 DEFB &00, &04, &41, &08, &08, &40, &80, &1C, &80, &80, &BC, &90, &41, &C4, &B8, &4B
	8A70 DEFB &C0, &A0, &1C, &40, &A4, &7C, &00, &BC, &44, &80, &98, &C1, &80, &81, &C0, &50
	8A80 DEFB &82, &07, &30, &86, &39, &90, &8E, &7E, &D4, &90, &FF, &DC, &94, &3F, &D8, &8C
	8A90 DEFB &80, &10, &87, &C8, &9C, &41, &FD, &F8, &40, &1F, &C6, &80, &42, &09, &C0, &30
	8AA0 DEFB &13, &30, &0E, &6C, &0C, &01, &B0, &03, &00, &C0, &00, &C3, &00, &00, &3C, &00
	8AB0 DEFB &FF, &FF, &FF, &FF, &C1, &FF, &FE, &00, &3F, &F8, &00, &0F, &E0, &00, &07, &C0
	8AC0 DEFB &00, &03, &80, &00, &03, &80, &00, &09, &00, &00, &1D, &10, &00, &85, &38, &01
	8AD0 DEFB &DB, &20, &08, &5F, &24, &1C, &3F, &3C, &04, &BF, &18, &40, &2F, &00, &C0, &17
	8AE0 DEFB &00, &00, &17, &02, &00, &03, &06, &00, &05, &00, &00, &0D, &04, &00, &0B, &04
	8AF0 DEFB &80, &03, &01, &C8, &8D, &80, &1D, &CB, &80, &00, &01, &00, &00, &00, &00, &00
	8B00 DEFB &00, &C0, &00, &03, &F0, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C3, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	..........@@@@@.........	@@@@@@@@@@.....@@@@@@@@@
	;;	.......@@@.....@@@......	@@@@@@@...........@@@@@@
	;;	.....@@...........@@....	@@@@@...............@@@@
	;;	...@@...........@...@...	@@@..................@@@
	;;	..@..@@..............@..	@@....................@@
	;;	.@.....@....@.......@...	@.....................@@
	;;	.@......@..........@@@..	@...................@..@
	;;	@.......@.......@.@@@@..	...................@@@.@
	;;	@..@.....@.....@@@...@..	...@............@....@.@
	;;	@.@@@....@..@.@@@@......	..@@@..........@@@.@@.@@
	;;	@.@........@@@...@......	..@.........@....@.@@@@@
	;;	@.@..@...@@@@@..........	..@..@.....@@@....@@@@@@
	;;	@.@@@@...@...@..@.......	..@@@@.......@..@.@@@@@@
	;;	@..@@...@@.....@@.......	...@@....@........@.@@@@
	;;	@......@@@.......@.@....	........@@.........@.@@@
	;;	@.....@......@@@..@@....	...................@.@@@
	;;	@....@@...@@@..@@..@....	......@...............@@
	;;	@...@@@..@@@@@@.@@.@.@..	.....@@..............@.@
	;;	@..@....@@@@@@@@@@.@@@..	....................@@.@
	;;	@..@.@....@@@@@@@@.@@...	.....@..............@.@@
	;;	@...@@..@..........@....	.....@..@.............@@
	;;	@....@@@@@..@...@..@@@..	.......@@@..@...@...@@.@
	;;	.@.....@@@@@@@.@@@@@@...	@..........@@@.@@@..@.@@
	;;	.@.........@@@@@@@...@@.	@......................@
	;;	@........@....@.....@..@	........................
	;;	@@........@@.......@..@@	........................
	;;	..@@........@@@..@@.@@..	@@....................@@
	;;	....@@.........@@.@@....	@@@@................@@@@
	;;	......@@........@@......	@@@@@@............@@@@@@
	;;	........@@....@@........	@@@@@@@@........@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@

				;; SPR_SHARK_1 EQU &21
	8B10 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &78, &00, &03
	8B20 DEFB &87, &00, &0C, &00, &C0, &10, &00, &20, &20, &00, &10, &46, &00, &08, &41, &00
	8B30 DEFB &08, &48, &80, &24, &9C, &40, &04, &90, &44, &0C, &92, &20, &78, &9E, &03, &B0
	8B40 DEFB &8C, &3D, &90, &81, &EC, &88, &87, &25, &58, &8D, &53, &68, &8C, &AA, &9C, &83
	8B50 DEFB &DD, &F4, &80, &3F, &C4, &40, &00, &08, &40, &20, &16, &80, &18, &61, &C0, &07
	8B60 DEFB &83, &30, &00, &0C, &0C, &00, &30, &03, &00, &C0, &00, &C3, &00, &00, &3C, &00
	8B70 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &87, &FF, &FC
	8B80 DEFB &00, &FF, &F0, &00, &3F, &E0, &00, &1F, &C0, &00, &0F, &80, &00, &07, &80, &00
	8B90 DEFB &07, &88, &00, &03, &1C, &00, &03, &10, &00, &03, &12, &00, &0B, &1E, &00, &37
	8BA0 DEFB &0C, &01, &97, &00, &2C, &8B, &01, &24, &0B, &01, &00, &03, &00, &88, &8D, &00
	8BB0 DEFB &1D, &C3, &00, &00, &03, &80, &00, &07, &80, &00, &01, &00, &00, &00, &00, &00
	8BC0 DEFB &00, &C0, &00, &03, &F0, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C3, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.........@@@@...........	@@@@@@@@@....@@@@@@@@@@@
	;;	......@@@....@@@........	@@@@@@..........@@@@@@@@
	;;	....@@..........@@......	@@@@..............@@@@@@
	;;	...@..............@.....	@@@................@@@@@
	;;	..@................@....	@@..................@@@@
	;;	.@...@@.............@...	@....................@@@
	;;	.@.....@............@...	@....................@@@
	;;	.@..@...@.........@..@..	@...@.................@@
	;;	@..@@@...@...........@..	...@@@................@@
	;;	@..@.....@...@......@@..	...@..................@@
	;;	@..@..@...@......@@@@...	...@..@.............@.@@
	;;	@..@@@@.......@@@.@@....	...@@@@...........@@.@@@
	;;	@...@@....@@@@.@@..@....	....@@.........@@..@.@@@
	;;	@......@@@@.@@..@...@...	..........@.@@..@...@.@@
	;;	@....@@@..@..@.@.@.@@...	.......@..@..@......@.@@
	;;	@...@@.@.@.@..@@.@@.@...	.......@..............@@
	;;	@...@@..@.@.@.@.@..@@@..	........@...@...@...@@.@
	;;	@.....@@@@.@@@.@@@@@.@..	...........@@@.@@@....@@
	;;	@.........@@@@@@@@...@..	......................@@
	;;	.@..................@...	@....................@@@
	;;	.@........@........@.@@.	@......................@
	;;	@..........@@....@@....@	........................
	;;	@@...........@@@@.....@@	........................
	;;	..@@................@@..	@@....................@@
	;;	....@@............@@....	@@@@................@@@@
	;;	......@@........@@......	@@@@@@............@@@@@@
	;;	........@@....@@........	@@@@@@@@........@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@

				;; SPR_SHARK_B0 EQU &22
	8BD0 DEFB &00, &00, &00, &00, &00, &00, &00, &7E, &00, &03, &81, &C0, &0C, &00, &30, &10
	8BE0 DEFB &00, &08, &23, &A0, &04, &4C, &08, &02, &50, &04, &02, &60, &00, &01, &60, &C4
	8BF0 DEFB &01, &51, &20, &01, &31, &20, &01, &39, &E0, &01, &28, &C4, &01, &0C, &04, &01
	8C00 DEFB &2C, &00, &01, &32, &04, &01, &2A, &00, &01, &59, &04, &01, &4F, &84, &01, &40
	8C10 DEFB &00, &01, &20, &04, &39, &30, &00, &C2, &4C, &09, &02, &80, &10, &01, &C0, &10
	8C20 DEFB &03, &30, &00, &0C, &0C, &10, &30, &03, &00, &C0, &00, &C3, &00, &00, &3C, &00
	8C30 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &81, &FF, &FC, &00, &3F, &F0, &00, &0F, &E0
	8C40 DEFB &00, &07, &C0, &00, &03, &80, &00, &01, &00, &00, &01, &40, &00, &00, &40, &C0
	8C50 DEFB &00, &41, &20, &00, &A1, &20, &00, &B1, &E0, &00, &A0, &C0, &00, &C8, &00, &00
	8C60 DEFB &A8, &00, &00, &B0, &00, &00, &A8, &00, &00, &98, &00, &00, &80, &00, &00, &80
	8C70 DEFB &00, &00, &C0, &00, &00, &C0, &00, &01, &80, &00, &01, &00, &00, &00, &00, &00
	8C80 DEFB &00, &C0, &00, &03, &F0, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C3, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.........@@@@@@.........	@@@@@@@@@......@@@@@@@@@
	;;	......@@@......@@@......	@@@@@@............@@@@@@
	;;	....@@............@@....	@@@@................@@@@
	;;	...@................@...	@@@..................@@@
	;;	..@...@@@.@..........@..	@@....................@@
	;;	.@..@@......@.........@.	@......................@
	;;	.@.@.........@........@.	.......................@
	;;	.@@....................@	.@......................
	;;	.@@.....@@...@.........@	.@......@@..............
	;;	.@.@...@..@............@	.@.....@..@.............
	;;	..@@...@..@............@	@.@....@..@.............
	;;	..@@@..@@@@............@	@.@@...@@@@.............
	;;	..@.@...@@...@.........@	@.@.....@@..............
	;;	....@@.......@.........@	@@..@...................
	;;	..@.@@.................@	@.@.@...................
	;;	..@@..@......@.........@	@.@@....................
	;;	..@.@.@................@	@.@.@...................
	;;	.@.@@..@.....@.........@	@..@@...................
	;;	.@..@@@@@....@.........@	@.......................
	;;	.@.....................@	@.......................
	;;	..@..........@....@@@..@	@@......................
	;;	..@@............@@....@.	@@.....................@
	;;	.@..@@......@..@......@.	@......................@
	;;	@..........@...........@	........................
	;;	@@.........@..........@@	........................
	;;	..@@................@@..	@@....................@@
	;;	....@@.....@......@@....	@@@@................@@@@
	;;	......@@........@@......	@@@@@@............@@@@@@
	;;	........@@....@@........	@@@@@@@@........@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@

				;; SPR_SHARK_B1 EQU &23
	8C90 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &3C, &00, &01, &C3, &80, &06
	8CA0 DEFB &00, &60, &08, &00, &10, &10, &00, &08, &26, &C0, &04, &58, &30, &04, &60, &00
	8CB0 DEFB &02, &81, &84, &02, &82, &40, &02, &42, &40, &01, &23, &C4, &01, &31, &84, &01
	8CC0 DEFB &28, &00, &01, &0C, &04, &01, &32, &00, &01, &55, &04, &01, &4F, &04, &01, &43
	8CD0 DEFB &80, &01, &20, &04, &39, &30, &00, &C2, &4C, &09, &02, &80, &10, &01, &C0, &10
	8CE0 DEFB &03, &30, &00, &0C, &0C, &10, &30, &03, &00, &C0, &00, &C3, &00, &00, &3C, &00
	8CF0 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &C3, &FF, &FE, &00, &7F, &F8
	8D00 DEFB &00, &1F, &F0, &00, &0F, &E0, &00, &07, &C0, &00, &03, &80, &00, &03, &80, &00
	8D10 DEFB &01, &01, &80, &01, &02, &40, &01, &82, &40, &00, &83, &C0, &00, &A1, &80, &00
	8D20 DEFB &A0, &00, &00, &C8, &00, &00, &90, &00, &00, &84, &00, &00, &80, &00, &00, &80
	8D30 DEFB &00, &00, &C0, &00, &00, &C0, &00, &01, &80, &00, &01, &00, &00, &00, &00, &00
	8D40 DEFB &00, &C0, &00, &03, &F0, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C3, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@
	;;	.......@@@....@@@.......	@@@@@@@..........@@@@@@@
	;;	.....@@..........@@.....	@@@@@..............@@@@@
	;;	....@..............@....	@@@@................@@@@
	;;	...@................@...	@@@..................@@@
	;;	..@..@@.@@...........@..	@@....................@@
	;;	.@.@@.....@@.........@..	@.....................@@
	;;	.@@...................@.	@......................@
	;;	@......@@....@........@.	.......@@..............@
	;;	@.....@..@............@.	......@..@.............@
	;;	.@....@..@.............@	@.....@..@..............
	;;	..@...@@@@...@.........@	@.....@@@@..............
	;;	..@@...@@....@.........@	@.@....@@...............
	;;	..@.@..................@	@.@.....................
	;;	....@@.......@.........@	@@..@...................
	;;	..@@..@................@	@..@....................
	;;	.@.@.@.@.....@.........@	@....@..................
	;;	.@..@@@@.....@.........@	@.......................
	;;	.@....@@@..............@	@.......................
	;;	..@..........@....@@@..@	@@......................
	;;	..@@............@@....@.	@@.....................@
	;;	.@..@@......@..@......@.	@......................@
	;;	@..........@...........@	........................
	;;	@@.........@..........@@	........................
	;;	..@@................@@..	@@....................@@
	;;	....@@.....@......@@....	@@@@................@@@@
	;;	......@@........@@......	@@@@@@............@@@@@@
	;;	........@@....@@........	@@@@@@@@........@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@

				;; SPR_DOG_0 EQU &24
	8D50 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &07, &C0, &70, &18, &30, &1B
	8D60 DEFB &F8, &88, &16, &19, &44, &0C, &0E, &84, &08, &8F, &C6, &19, &5E, &36, &68, &98
	8D70 DEFB &1E, &58, &30, &5A, &7C, &33, &7C, &1C, &33, &C4, &3E, &1E, &06, &7F, &FC, &1A
	8D80 DEFB &7E, &78, &6A, &7F, &71, &A2, &3F, &66, &92, &37, &62, &3A, &3B, &B1, &DA, &7B
	8D90 DEFB &DB, &FA, &71, &6C, &F4, &70, &76, &78, &78, &7B, &86, &28, &70, &0A, &00, &70
	8DA0 DEFB &00, &00, &70, &00, &00, &30, &00, &00, &70, &00, &00, &50, &00, &00, &00, &00
	8DB0 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F8, &3F, &8F, &E0, &0F, &04, &00, &07, &80
	8DC0 DEFB &00, &83, &C0, &01, &41, &E0, &00, &81, &E0, &80, &00, &81, &40, &00, &00, &80
	8DD0 DEFB &00, &00, &00, &00, &00, &00, &01, &80, &00, &01, &80, &00, &00, &00, &00, &18
	8DE0 DEFB &00, &00, &68, &00, &01, &A0, &80, &06, &80, &80, &02, &00, &80, &00, &00, &00
	8DF0 DEFB &00, &00, &04, &00, &01, &06, &00, &03, &03, &00, &01, &83, &04, &00, &D7, &07
	8E00 DEFB &E0, &FF, &07, &F5, &FF, &07, &FF, &FF, &07, &FF, &FF, &07, &FF, &FF, &AF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@.....@@@@@@
	;;	.............@@@@@......	@...@@@@@@@.........@@@@
	;;	.@@@.......@@.....@@....	.....@...............@@@
	;;	...@@.@@@@@@@...@...@...	@...............@.....@@
	;;	...@.@@....@@..@.@...@..	@@.............@.@.....@
	;;	....@@......@@@.@....@..	@@@.............@......@
	;;	....@...@...@@@@@@...@@.	@@@.....@...............
	;;	...@@..@.@.@@@@...@@.@@.	@......@.@..............
	;;	.@@.@...@..@@......@@@@.	........@...............
	;;	.@.@@.....@@.....@.@@.@.	........................
	;;	.@@@@@....@@..@@.@@@@@..	.......................@
	;;	...@@@....@@..@@@@...@..	@......................@
	;;	..@@@@@....@@@@......@@.	@.......................
	;;	.@@@@@@@@@@@@@.....@@.@.	...................@@...
	;;	.@@@@@@..@@@@....@@.@.@.	.................@@.@...
	;;	.@@@@@@@.@@@...@@.@...@.	...............@@.@.....
	;;	..@@@@@@.@@..@@.@..@..@.	@............@@.@.......
	;;	..@@.@@@.@@...@...@@@.@.	@.............@.........
	;;	..@@@.@@@.@@...@@@.@@.@.	@.......................
	;;	.@@@@.@@@@.@@.@@@@@@@.@.	........................
	;;	.@@@...@.@@.@@..@@@@.@..	.....@.................@
	;;	.@@@.....@@@.@@..@@@@...	.....@@...............@@
	;;	.@@@@....@@@@.@@@....@@.	......@@...............@
	;;	..@.@....@@@........@.@.	@.....@@.....@..........
	;;	.........@@@............	@@.@.@@@.....@@@@@@.....
	;;	.........@@@............	@@@@@@@@.....@@@@@@@.@.@
	;;	..........@@............	@@@@@@@@.....@@@@@@@@@@@
	;;	.........@@@............	@@@@@@@@.....@@@@@@@@@@@
	;;	.........@.@............	@@@@@@@@.....@@@@@@@@@@@
	;;	........................	@@@@@@@@@.@.@@@@@@@@@@@@

				;; SPR_DOG_1 EQU &25
	8E10 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &06, &07, &C0, &0C, &18, &30, &0B
	8E20 DEFB &F8, &88, &06, &19, &44, &0C, &0E, &84, &08, &8F, &C6, &19, &5E, &36, &68, &98
	8E30 DEFB &1E, &58, &30, &5A, &7C, &33, &7C, &1C, &33, &C4, &3E, &1E, &06, &7F, &FC, &1A
	8E40 DEFB &7E, &78, &6A, &7F, &71, &A2, &3F, &66, &82, &37, &62, &72, &3B, &B1, &F2, &1B
	8E50 DEFB &DB, &F2, &39, &6C, &64, &38, &F6, &18, &31, &DB, &E4, &3D, &C0, &00, &15, &C0
	8E60 DEFB &00, &00, &C0, &00, &01, &C0, &00, &01, &40, &00, &00, &00, &00, &00, &00, &00
	8E70 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &F9, &F8, &3F, &F0, &E0, &0F, &E0, &00, &07, &E0
	8E80 DEFB &00, &83, &F0, &01, &41, &E0, &00, &81, &E0, &80, &00, &81, &40, &00, &00, &80
	8E90 DEFB &00, &00, &00, &00, &00, &00, &01, &80, &00, &01, &80, &00, &00, &00, &00, &18
	8EA0 DEFB &00, &00, &68, &00, &01, &A0, &80, &06, &80, &80, &02, &00, &80, &00, &00, &C0
	8EB0 DEFB &00, &00, &80, &00, &01, &82, &00, &03, &80, &00, &01, &80, &04, &1B, &C0, &1F
	8EC0 DEFB &FF, &EA, &1F, &FF, &FC, &1F, &FF, &FC, &1F, &FF, &FE, &BF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@..@@@@@@.....@@@@@@
	;;	.....@@......@@@@@......	@@@@....@@@.........@@@@
	;;	....@@.....@@.....@@....	@@@..................@@@
	;;	....@.@@@@@@@...@...@...	@@@.............@.....@@
	;;	.....@@....@@..@.@...@..	@@@@...........@.@.....@
	;;	....@@......@@@.@....@..	@@@.............@......@
	;;	....@...@...@@@@@@...@@.	@@@.....@...............
	;;	...@@..@.@.@@@@...@@.@@.	@......@.@..............
	;;	.@@.@...@..@@......@@@@.	........@...............
	;;	.@.@@.....@@.....@.@@.@.	........................
	;;	.@@@@@....@@..@@.@@@@@..	.......................@
	;;	...@@@....@@..@@@@...@..	@......................@
	;;	..@@@@@....@@@@......@@.	@.......................
	;;	.@@@@@@@@@@@@@.....@@.@.	...................@@...
	;;	.@@@@@@..@@@@....@@.@.@.	.................@@.@...
	;;	.@@@@@@@.@@@...@@.@...@.	...............@@.@.....
	;;	..@@@@@@.@@..@@.@.....@.	@............@@.@.......
	;;	..@@.@@@.@@...@..@@@..@.	@.............@.........
	;;	..@@@.@@@.@@...@@@@@..@.	@.......................
	;;	...@@.@@@@.@@.@@@@@@..@.	@@......................
	;;	..@@@..@.@@.@@...@@..@..	@......................@
	;;	..@@@...@@@@.@@....@@...	@.....@...............@@
	;;	..@@...@@@.@@.@@@@@..@..	@......................@
	;;	..@@@@.@@@..............	@............@.....@@.@@
	;;	...@.@.@@@..............	@@.........@@@@@@@@@@@@@
	;;	........@@..............	@@@.@.@....@@@@@@@@@@@@@
	;;	.......@@@..............	@@@@@@.....@@@@@@@@@@@@@
	;;	.......@.@..............	@@@@@@.....@@@@@@@@@@@@@
	;;	........................	@@@@@@@.@.@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_DOG_B0 EQU &26
	8ED0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &07, &C0, &00
	8EE0 DEFB &1F, &F0, &03, &EF, &F0, &07, &FF, &F8, &0F, &FF, &F8, &07, &FF, &F8, &1B, &FE
	8EF0 DEFB &F0, &3F, &F9, &90, &3F, &FF, &E0, &1F, &FE, &10, &07, &FC, &08, &07, &F8, &06
	8F00 DEFB &03, &F8, &0C, &07, &F8, &1A, &07, &FC, &1A, &0E, &FF, &5A, &0D, &FF, &F6, &1C
	8F10 DEFB &FF, &FC, &38, &6F, &FC, &70, &1F, &EA, &70, &3D, &C6, &50, &30, &0A, &00, &38
	8F20 DEFB &00, &00, &38, &00, &00, &38, &00, &00, &1C, &00, &00, &34, &00, &00, &00, &00
	8F30 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F8, &3F, &FF, &E0, &0F, &FC
	8F40 DEFB &00, &07, &F8, &00, &07, &F0, &00, &03, &E0, &00, &03, &E0, &00, &03, &C0, &00
	8F50 DEFB &07, &80, &00, &07, &80, &00, &0F, &C0, &00, &07, &E0, &00, &01, &F0, &00, &00
	8F60 DEFB &F8, &00, &01, &F0, &00, &00, &F0, &00, &00, &E0, &00, &00, &E0, &00, &00, &C0
	8F70 DEFB &00, &01, &83, &00, &01, &07, &80, &00, &07, &80, &10, &07, &82, &20, &AF, &83
	8F80 DEFB &F5, &FF, &83, &FF, &FF, &83, &FF, &FF, &C1, &FF, &FF, &81, &FF, &FF, &CB, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@.....@@@@@@
	;;	.............@@@@@......	@@@@@@@@@@@.........@@@@
	;;	...........@@@@@@@@@....	@@@@@@...............@@@
	;;	......@@@@@.@@@@@@@@....	@@@@@................@@@
	;;	.....@@@@@@@@@@@@@@@@...	@@@@..................@@
	;;	....@@@@@@@@@@@@@@@@@...	@@@...................@@
	;;	.....@@@@@@@@@@@@@@@@...	@@@...................@@
	;;	...@@.@@@@@@@@@.@@@@....	@@...................@@@
	;;	..@@@@@@@@@@@..@@..@....	@....................@@@
	;;	..@@@@@@@@@@@@@@@@@.....	@...................@@@@
	;;	...@@@@@@@@@@@@....@....	@@...................@@@
	;;	.....@@@@@@@@@......@...	@@@....................@
	;;	.....@@@@@@@@........@@.	@@@@....................
	;;	......@@@@@@@.......@@..	@@@@@..................@
	;;	.....@@@@@@@@......@@.@.	@@@@....................
	;;	.....@@@@@@@@@.....@@.@.	@@@@....................
	;;	....@@@.@@@@@@@@.@.@@.@.	@@@.....................
	;;	....@@.@@@@@@@@@@@@@.@@.	@@@.....................
	;;	...@@@..@@@@@@@@@@@@@@..	@@.....................@
	;;	..@@@....@@.@@@@@@@@@@..	@.....@@...............@
	;;	.@@@.......@@@@@@@@.@.@.	.....@@@@...............
	;;	.@@@......@@@@.@@@...@@.	.....@@@@..........@....
	;;	.@.@......@@........@.@.	.....@@@@.....@...@.....
	;;	..........@@@...........	@.@.@@@@@.....@@@@@@.@.@
	;;	..........@@@...........	@@@@@@@@@.....@@@@@@@@@@
	;;	..........@@@...........	@@@@@@@@@.....@@@@@@@@@@
	;;	...........@@@..........	@@@@@@@@@@.....@@@@@@@@@
	;;	..........@@.@..........	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@..@.@@@@@@@@@@

				;; SPR_DOG_B1 EQU &27
	8F90 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &07, &C0, &00
	8FA0 DEFB &1F, &F0, &03, &EF, &F0, &07, &FF, &F8, &0F, &FF, &F8, &07, &FF, &F8, &1B, &FE
	8FB0 DEFB &F0, &3F, &F9, &90, &3F, &FF, &E0, &1F, &FE, &10, &07, &FC, &08, &07, &F8, &04
	8FC0 DEFB &03, &F8, &E4, &07, &F8, &32, &07, &FC, &16, &07, &7F, &5A, &07, &7F, &D2, &07
	8FD0 DEFB &7F, &FC, &06, &6F, &FC, &0E, &1F, &E8, &0C, &3D, &D4, &0E, &70, &00, &0C, &70
	8FE0 DEFB &00, &00, &E0, &00, &00, &A0, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	8FF0 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F8, &3F, &FF, &E0, &0F, &FC
	9000 DEFB &00, &07, &F8, &00, &07, &F0, &00, &03, &E0, &00, &03, &E0, &00, &03, &C0, &00
	9010 DEFB &07, &80, &00, &07, &80, &00, &0F, &C0, &00, &07, &E0, &00, &03, &F0, &00, &01
	9020 DEFB &F8, &00, &01, &F0, &00, &00, &F0, &00, &00, &F0, &00, &00, &F0, &00, &00, &F0
	9030 DEFB &00, &01, &F0, &00, &01, &E0, &80, &03, &E1, &80, &01, &E0, &02, &2B, &E1, &07
	9040 DEFB &FF, &F2, &0F, &FF, &FE, &0F, &FF, &FF, &5F, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@.....@@@@@@
	;;	.............@@@@@......	@@@@@@@@@@@.........@@@@
	;;	...........@@@@@@@@@....	@@@@@@...............@@@
	;;	......@@@@@.@@@@@@@@....	@@@@@................@@@
	;;	.....@@@@@@@@@@@@@@@@...	@@@@..................@@
	;;	....@@@@@@@@@@@@@@@@@...	@@@...................@@
	;;	.....@@@@@@@@@@@@@@@@...	@@@...................@@
	;;	...@@.@@@@@@@@@.@@@@....	@@...................@@@
	;;	..@@@@@@@@@@@..@@..@....	@....................@@@
	;;	..@@@@@@@@@@@@@@@@@.....	@...................@@@@
	;;	...@@@@@@@@@@@@....@....	@@...................@@@
	;;	.....@@@@@@@@@......@...	@@@...................@@
	;;	.....@@@@@@@@........@..	@@@@...................@
	;;	......@@@@@@@...@@@..@..	@@@@@..................@
	;;	.....@@@@@@@@.....@@..@.	@@@@....................
	;;	.....@@@@@@@@@.....@.@@.	@@@@....................
	;;	.....@@@.@@@@@@@.@.@@.@.	@@@@....................
	;;	.....@@@.@@@@@@@@@.@..@.	@@@@....................
	;;	.....@@@.@@@@@@@@@@@@@..	@@@@...................@
	;;	.....@@..@@.@@@@@@@@@@..	@@@@...................@
	;;	....@@@....@@@@@@@@.@...	@@@.....@.............@@
	;;	....@@....@@@@.@@@.@.@..	@@@....@@..............@
	;;	....@@@..@@@............	@@@...........@...@.@.@@
	;;	....@@...@@@............	@@@....@.....@@@@@@@@@@@
	;;	........@@@.............	@@@@..@.....@@@@@@@@@@@@
	;;	........@.@.............	@@@@@@@.....@@@@@@@@@@@@
	;;	........................	@@@@@@@@.@.@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

				;; SPR_JOKER EQU &28
	9050 DEFB &00, &00, &00, &01, &F7, &80, &07, &FB, &C0, &0F, &9F, &20, &3E, &46, &50, &0D
	9060 DEFB &91, &C0, &1D, &E3, &F0, &23, &3F, &10, &1A, &CC, &B8, &0E, &66, &D8, &12, &8B
	9070 DEFB &14, &17, &F5, &B4, &0F, &C3, &98, &03, &B8, &50, &03, &88, &B0, &05, &E7, &60
	9080 DEFB &08, &F8, &C0, &09, &1F, &28, &09, &20, &5C, &08, &65, &58, &04, &B0, &C0, &05
	9090 DEFB &DF, &80, &01, &B2, &C0, &00, &79, &C0, &00, &3B, &C0, &00, &7B, &00, &00, &63
	90A0 DEFB &40, &01, &A8, &E0, &01, &9D, &10, &00, &61, &A0, &00, &76, &00, &00, &00, &00
	90B0 DEFB &FE, &08, &7F, &F8, &00, &3F, &F0, &00, &1F, &C0, &00, &0F, &80, &40, &47, &C1
	90C0 DEFB &91, &CF, &C1, &E3, &F7, &83, &3F, &17, &DA, &CC, &BB, &EE, &66, &DB, &D2, &8B
	90D0 DEFB &15, &D7, &F5, &B5, &EF, &C3, &9B, &F3, &B8, &57, &FB, &88, &B7, &FD, &E7, &6F
	90E0 DEFB &F8, &F8, &D7, &F9, &1F, &2B, &F9, &00, &1D, &F8, &05, &1B, &FC, &80, &07, &FD
	90F0 DEFB &C0, &3F, &FD, &80, &1F, &FE, &00, &1F, &FF, &80, &1F, &FF, &42, &3F, &FE, &43
	9100 DEFB &5F, &FD, &A8, &EF, &FD, &9D, &17, &FE, &61, &AF, &FF, &76, &5F, &FF, &89, &FF
	;;	........................	@@@@@@@.....@....@@@@@@@
	;;	.......@@@@@.@@@@.......	@@@@@.............@@@@@@
	;;	.....@@@@@@@@.@@@@......	@@@@...............@@@@@
	;;	....@@@@@..@@@@@..@.....	@@..................@@@@
	;;	..@@@@@..@...@@..@.@....	@........@.......@...@@@
	;;	....@@.@@..@...@@@......	@@.....@@..@...@@@..@@@@
	;;	...@@@.@@@@...@@@@@@....	@@.....@@@@...@@@@@@.@@@
	;;	..@...@@..@@@@@@...@....	@.....@@..@@@@@@...@.@@@
	;;	...@@.@.@@..@@..@.@@@...	@@.@@.@.@@..@@..@.@@@.@@
	;;	....@@@..@@..@@.@@.@@...	@@@.@@@..@@..@@.@@.@@.@@
	;;	...@..@.@...@.@@...@.@..	@@.@..@.@...@.@@...@.@.@
	;;	...@.@@@@@@@.@.@@.@@.@..	@@.@.@@@@@@@.@.@@.@@.@.@
	;;	....@@@@@@....@@@..@@...	@@@.@@@@@@....@@@..@@.@@
	;;	......@@@.@@@....@.@....	@@@@..@@@.@@@....@.@.@@@
	;;	......@@@...@...@.@@....	@@@@@.@@@...@...@.@@.@@@
	;;	.....@.@@@@..@@@.@@.....	@@@@@@.@@@@..@@@.@@.@@@@
	;;	....@...@@@@@...@@......	@@@@@...@@@@@...@@.@.@@@
	;;	....@..@...@@@@@..@.@...	@@@@@..@...@@@@@..@.@.@@
	;;	....@..@..@......@.@@@..	@@@@@..@...........@@@.@
	;;	....@....@@..@.@.@.@@...	@@@@@........@.@...@@.@@
	;;	.....@..@.@@....@@......	@@@@@@..@............@@@
	;;	.....@.@@@.@@@@@@.......	@@@@@@.@@@........@@@@@@
	;;	.......@@.@@..@.@@......	@@@@@@.@@..........@@@@@
	;;	.........@@@@..@@@......	@@@@@@@............@@@@@
	;;	..........@@@.@@@@......	@@@@@@@@@..........@@@@@
	;;	.........@@@@.@@........	@@@@@@@@.@....@...@@@@@@
	;;	.........@@...@@.@......	@@@@@@@..@....@@.@.@@@@@
	;;	.......@@.@.@...@@@.....	@@@@@@.@@.@.@...@@@.@@@@
	;;	.......@@..@@@.@...@....	@@@@@@.@@..@@@.@...@.@@@
	;;	.........@@....@@.@.....	@@@@@@@..@@....@@.@.@@@@
	;;	.........@@@.@@.........	@@@@@@@@.@@@.@@..@.@@@@@
	;;	........................	@@@@@@@@@...@..@@@@@@@@@

				;; SPR_JOKERB EQU &29
	9110 DEFB &00, &00, &00, &01, &CF, &80, &03, &F3, &E0, &07, &F9, &70, &0F, &EE, &FC, &0F
	9120 DEFB &E1, &A0, &0F, &F7, &B0, &07, &9B, &B8, &1B, &C7, &44, &18, &1F, &0C, &08, &00
	9130 DEFB &08, &0C, &00, &10, &06, &04, &20, &02, &3E, &C0, &01, &DE, &80, &02, &6D, &40
	9140 DEFB &06, &21, &20, &18, &61, &20, &18, &73, &20, &06, &FF, &20, &01, &FE, &C0, &00
	9150 DEFB &FF, &40, &01, &F7, &00, &01, &EF, &00, &03, &CE, &00, &03, &EF, &00, &05, &E9
	9160 DEFB &00, &0B, &26, &00, &0C, &D5, &00, &02, &AB, &00, &03, &60, &00, &00, &00, &00
	9170 DEFB &FE, &30, &7F, &FC, &00, &1F, &F8, &00, &0F, &F0, &00, &03, &E0, &00, &01, &E0
	9180 DEFB &00, &03, &E0, &00, &07, &E0, &00, &03, &D8, &00, &05, &D8, &00, &0D, &E8, &00
	9190 DEFB &0B, &EC, &00, &1F, &F6, &04, &3F, &FA, &3E, &FF, &FC, &1E, &FF, &FE, &0C, &7F
	91A0 DEFB &E6, &00, &3F, &D8, &40, &3F, &D8, &40, &3F, &E6, &80, &3F, &FF, &00, &DF, &FE
	91B0 DEFB &00, &5F, &FC, &00, &3F, &FC, &00, &7F, &F8, &00, &FF, &F8, &00, &7F, &F4, &08
	91C0 DEFB &7F, &EB, &06, &FF, &EC, &D5, &7F, &F2, &AB, &7F, &FB, &64, &FF, &FC, &9F, &FF
	;;	........................	@@@@@@@...@@.....@@@@@@@
	;;	.......@@@..@@@@@.......	@@@@@@.............@@@@@
	;;	......@@@@@@..@@@@@.....	@@@@@...............@@@@
	;;	.....@@@@@@@@..@.@@@....	@@@@..................@@
	;;	....@@@@@@@.@@@.@@@@@@..	@@@....................@
	;;	....@@@@@@@....@@.@.....	@@@...................@@
	;;	....@@@@@@@@.@@@@.@@....	@@@..................@@@
	;;	.....@@@@..@@.@@@.@@@...	@@@...................@@
	;;	...@@.@@@@...@@@.@...@..	@@.@@................@.@
	;;	...@@......@@@@@....@@..	@@.@@...............@@.@
	;;	....@...............@...	@@@.@...............@.@@
	;;	....@@.............@....	@@@.@@.............@@@@@
	;;	.....@@......@....@.....	@@@@.@@......@....@@@@@@
	;;	......@...@@@@@.@@......	@@@@@.@...@@@@@.@@@@@@@@
	;;	.......@@@.@@@@.@.......	@@@@@@.....@@@@.@@@@@@@@
	;;	......@..@@.@@.@.@......	@@@@@@@.....@@...@@@@@@@
	;;	.....@@...@....@..@.....	@@@..@@...........@@@@@@
	;;	...@@....@@....@..@.....	@@.@@....@........@@@@@@
	;;	...@@....@@@..@@..@.....	@@.@@....@........@@@@@@
	;;	.....@@.@@@@@@@@..@.....	@@@..@@.@.........@@@@@@
	;;	.......@@@@@@@@.@@......	@@@@@@@@........@@.@@@@@
	;;	........@@@@@@@@.@......	@@@@@@@..........@.@@@@@
	;;	.......@@@@@.@@@........	@@@@@@............@@@@@@
	;;	.......@@@@.@@@@........	@@@@@@...........@@@@@@@
	;;	......@@@@..@@@.........	@@@@@...........@@@@@@@@
	;;	......@@@@@.@@@@........	@@@@@............@@@@@@@
	;;	.....@.@@@@.@..@........	@@@@.@......@....@@@@@@@
	;;	....@.@@..@..@@.........	@@@.@.@@.....@@.@@@@@@@@
	;;	....@@..@@.@.@.@........	@@@.@@..@@.@.@.@.@@@@@@@
	;;	......@.@.@.@.@@........	@@@@..@.@.@.@.@@.@@@@@@@
	;;	......@@.@@.............	@@@@@.@@.@@..@..@@@@@@@@
	;;	........................	@@@@@@..@..@@@@@@@@@@@@@

				;; SPR_JOKER_B1 EQU &2A
	91D0 DEFB &00, &00, &00, &01, &CF, &80, &03, &F3, &E0, &07, &F9, &70, &0F, &EE, &FC, &0F
	91E0 DEFB &E1, &A0, &0F, &F7, &B0, &07, &9B, &B8, &1B, &C7, &44, &18, &1F, &0C, &08, &00
	91F0 DEFB &08, &0C, &00, &10, &06, &04, &20, &02, &3E, &C0, &03, &DE, &80, &04, &ED, &40
	9200 DEFB &04, &61, &40, &04, &61, &40, &04, &73, &40, &08, &7E, &80, &04, &FF, &00, &0E
	9210 DEFB &F7, &00, &05, &F6, &00, &01, &E9, &00, &03, &D6, &C0, &03, &D6, &C0, &05, &E9
	9220 DEFB &00, &0B, &29, &00, &0C, &C6, &C0, &02, &A6, &C0, &03, &60, &00, &00, &00, &00
	9230 DEFB &FE, &30, &7F, &FC, &00, &1F, &F8, &00, &0F, &F0, &00, &03, &E0, &00, &01, &E0
	9240 DEFB &00, &03, &E0, &00, &07, &E0, &00, &03, &D8, &00, &05, &D8, &00, &0D, &E8, &00
	9250 DEFB &0B, &EC, &00, &1F, &F6, &04, &3F, &FA, &3E, &FF, &F8, &1E, &FF, &FC, &0C, &7F
	9260 DEFB &FC, &40, &7F, &FC, &40, &7F, &FC, &40, &7F, &F8, &40, &FF, &F4, &80, &7F, &EE
	9270 DEFB &00, &7F, &F4, &00, &FF, &F8, &00, &3F, &F8, &06, &DF, &F8, &06, &DF, &F4, &09
	9280 DEFB &3F, &EB, &09, &3F, &EC, &D6, &DF, &F2, &A6, &DF, &FB, &69, &3F, &FC, &9F, &FF
	;;	........................	@@@@@@@...@@.....@@@@@@@
	;;	.......@@@..@@@@@.......	@@@@@@.............@@@@@
	;;	......@@@@@@..@@@@@.....	@@@@@...............@@@@
	;;	.....@@@@@@@@..@.@@@....	@@@@..................@@
	;;	....@@@@@@@.@@@.@@@@@@..	@@@....................@
	;;	....@@@@@@@....@@.@.....	@@@...................@@
	;;	....@@@@@@@@.@@@@.@@....	@@@..................@@@
	;;	.....@@@@..@@.@@@.@@@...	@@@...................@@
	;;	...@@.@@@@...@@@.@...@..	@@.@@................@.@
	;;	...@@......@@@@@....@@..	@@.@@...............@@.@
	;;	....@...............@...	@@@.@...............@.@@
	;;	....@@.............@....	@@@.@@.............@@@@@
	;;	.....@@......@....@.....	@@@@.@@......@....@@@@@@
	;;	......@...@@@@@.@@......	@@@@@.@...@@@@@.@@@@@@@@
	;;	......@@@@.@@@@.@.......	@@@@@......@@@@.@@@@@@@@
	;;	.....@..@@@.@@.@.@......	@@@@@@......@@...@@@@@@@
	;;	.....@...@@....@.@......	@@@@@@...@.......@@@@@@@
	;;	.....@...@@....@.@......	@@@@@@...@.......@@@@@@@
	;;	.....@...@@@..@@.@......	@@@@@@...@.......@@@@@@@
	;;	....@....@@@@@@.@.......	@@@@@....@......@@@@@@@@
	;;	.....@..@@@@@@@@........	@@@@.@..@........@@@@@@@
	;;	....@@@.@@@@.@@@........	@@@.@@@..........@@@@@@@
	;;	.....@.@@@@@.@@.........	@@@@.@..........@@@@@@@@
	;;	.......@@@@.@..@........	@@@@@.............@@@@@@
	;;	......@@@@.@.@@.@@......	@@@@@........@@.@@.@@@@@
	;;	......@@@@.@.@@.@@......	@@@@@........@@.@@.@@@@@
	;;	.....@.@@@@.@..@........	@@@@.@......@..@..@@@@@@
	;;	....@.@@..@.@..@........	@@@.@.@@....@..@..@@@@@@
	;;	....@@..@@...@@.@@......	@@@.@@..@@.@.@@.@@.@@@@@
	;;	......@.@.@..@@.@@......	@@@@..@.@.@..@@.@@.@@@@@
	;;	......@@.@@.............	@@@@@.@@.@@.@..@..@@@@@@
	;;	........................	@@@@@@..@..@@@@@@@@@@@@@

				;; SPR_RIDDLER EQU &2B
	9290 DEFB &00, &E0, &00, &07, &9E, &00, &18, &69, &80, &20, &14, &40, &20, &0B, &E0, &43
	92A0 DEFB &FE, &30, &44, &00, &00, &4F, &F4, &08, &4C, &04, &08, &2D, &0A, &1C, &4B, &4B
	92B0 DEFB &7C, &7B, &9B, &AE, &3D, &F7, &CE, &5A, &09, &E6, &7F, &F7, &EE, &39, &F8, &F4
	92C0 DEFB &32, &06, &74, &39, &B1, &B4, &3C, &86, &08, &1F, &31, &F8, &07, &C7, &B0, &19
	92D0 DEFB &FF, &88, &1E, &7E, &78, &23, &81, &C4, &50, &E7, &0A, &50, &3C, &0A, &4C, &10
	92E0 DEFB &32, &23, &10, &C4, &10, &F7, &08, &0C, &18, &30, &03, &91, &C0, &00, &7E, &00
	92F0 DEFB &FF, &1F, &FF, &F8, &01, &FF, &E0, &00, &7F, &C0, &00, &1F, &C0, &00, &0F, &80
	9300 DEFB &00, &07, &80, &00, &07, &80, &00, &03, &80, &00, &03, &81, &08, &01, &03, &48
	9310 DEFB &01, &03, &98, &00, &81, &F0, &00, &00, &00, &00, &00, &00, &00, &80, &00, &01
	9320 DEFB &82, &06, &01, &81, &B1, &81, &80, &86, &03, &C0, &30, &03, &E0, &00, &07, &C0
	9330 DEFB &00, &03, &C0, &00, &03, &C0, &00, &03, &80, &00, &01, &80, &00, &01, &80, &00
	9340 DEFB &01, &C0, &00, &03, &E0, &00, &07, &F0, &00, &0F, &FC, &00, &3F, &FF, &81, &FF
	;;	........@@@.............	@@@@@@@@...@@@@@@@@@@@@@
	;;	.....@@@@..@@@@.........	@@@@@..........@@@@@@@@@
	;;	...@@....@@.@..@@.......	@@@..............@@@@@@@
	;;	..@........@.@...@......	@@.................@@@@@
	;;	..@.........@.@@@@@.....	@@..................@@@@
	;;	.@....@@@@@@@@@...@@....	@....................@@@
	;;	.@...@..................	@....................@@@
	;;	.@..@@@@@@@@.@......@...	@.....................@@
	;;	.@..@@.......@......@...	@.....................@@
	;;	..@.@@.@....@.@....@@@..	@......@....@..........@
	;;	.@..@.@@.@..@.@@.@@@@@..	......@@.@..@..........@
	;;	.@@@@.@@@..@@.@@@.@.@@@.	......@@@..@@...........
	;;	..@@@@.@@@@@.@@@@@..@@@.	@......@@@@@............
	;;	.@.@@.@.....@..@@@@..@@.	........................
	;;	.@@@@@@@@@@@.@@@@@@.@@@.	........................
	;;	..@@@..@@@@@@...@@@@.@..	@......................@
	;;	..@@..@......@@..@@@.@..	@.....@......@@........@
	;;	..@@@..@@.@@...@@.@@.@..	@......@@.@@...@@......@
	;;	..@@@@..@....@@.....@...	@.......@....@@.......@@
	;;	...@@@@@..@@...@@@@@@...	@@........@@..........@@
	;;	.....@@@@@...@@@@.@@....	@@@..................@@@
	;;	...@@..@@@@@@@@@@...@...	@@....................@@
	;;	...@@@@..@@@@@@..@@@@...	@@....................@@
	;;	..@...@@@......@@@...@..	@@....................@@
	;;	.@.@....@@@..@@@....@.@.	@......................@
	;;	.@.@......@@@@......@.@.	@......................@
	;;	.@..@@.....@......@@..@.	@......................@
	;;	..@...@@...@....@@...@..	@@....................@@
	;;	...@....@@@@.@@@....@...	@@@..................@@@
	;;	....@@.....@@.....@@....	@@@@................@@@@
	;;	......@@@..@...@@@......	@@@@@@............@@@@@@
	;;	.........@@@@@@.........	@@@@@@@@@......@@@@@@@@@

				;; SPR_RIDDLERB EQU &2C
	9350 DEFB &00, &3C, &00, &00, &43, &E0, &01, &F8, &D8, &02, &06, &24, &07, &01, &14, &0C
	9360 DEFB &00, &92, &08, &00, &52, &10, &00, &52, &10, &00, &52, &30, &00, &52, &30, &00
	9370 DEFB &52, &23, &00, &54, &27, &10, &A2, &19, &0E, &A2, &3B, &00, &52, &3B, &08, &56
	9380 DEFB &3E, &80, &58, &3D, &40, &F4, &1B, &B3, &0C, &1F, &CC, &F8, &0F, &F3, &E0, &11
	9390 DEFB &FF, &98, &1E, &7E, &78, &23, &81, &C4, &50, &E7, &0A, &50, &3C, &0A, &4C, &08
	93A0 DEFB &32, &23, &08, &C4, &10, &EF, &08, &0C, &18, &30, &03, &89, &C0, &00, &7E, &00
	93B0 DEFB &FF, &C3, &FF, &FF, &80, &1F, &FC, &00, &07, &F8, &00, &03, &F0, &00, &03, &E0
	93C0 DEFB &00, &01, &E0, &00, &01, &C0, &00, &01, &C0, &00, &01, &80, &00, &01, &80, &00
	93D0 DEFB &01, &80, &00, &03, &80, &00, &01, &C0, &00, &01, &80, &00, &01, &80, &00, &01
	93E0 DEFB &80, &00, &03, &80, &00, &01, &C0, &00, &01, &C0, &00, &03, &E0, &00, &07, &C0
	93F0 DEFB &00, &03, &C0, &00, &03, &C0, &00, &03, &80, &00, &01, &80, &00, &01, &80, &00
	9400 DEFB &01, &C0, &00, &03, &E0, &00, &07, &F0, &00, &0F, &FC, &00, &3F, &FF, &81, &FF
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@
	;;	.........@....@@@@@.....	@@@@@@@@@..........@@@@@
	;;	.......@@@@@@...@@.@@...	@@@@@@...............@@@
	;;	......@......@@...@..@..	@@@@@.................@@
	;;	.....@@@.......@...@.@..	@@@@..................@@
	;;	....@@..........@..@..@.	@@@....................@
	;;	....@............@.@..@.	@@@....................@
	;;	...@.............@.@..@.	@@.....................@
	;;	...@.............@.@..@.	@@.....................@
	;;	..@@.............@.@..@.	@......................@
	;;	..@@.............@.@..@.	@......................@
	;;	..@...@@.........@.@.@..	@.....................@@
	;;	..@..@@@...@....@.@...@.	@......................@
	;;	...@@..@....@@@.@.@...@.	@@.....................@
	;;	..@@@.@@.........@.@..@.	@......................@
	;;	..@@@.@@....@....@.@.@@.	@......................@
	;;	..@@@@@.@........@.@@...	@.....................@@
	;;	..@@@@.@.@......@@@@.@..	@......................@
	;;	...@@.@@@.@@..@@....@@..	@@.....................@
	;;	...@@@@@@@..@@..@@@@@...	@@....................@@
	;;	....@@@@@@@@..@@@@@.....	@@@..................@@@
	;;	...@...@@@@@@@@@@..@@...	@@....................@@
	;;	...@@@@..@@@@@@..@@@@...	@@....................@@
	;;	..@...@@@......@@@...@..	@@....................@@
	;;	.@.@....@@@..@@@....@.@.	@......................@
	;;	.@.@......@@@@......@.@.	@......................@
	;;	.@..@@......@.....@@..@.	@......................@
	;;	..@...@@....@...@@...@..	@@....................@@
	;;	...@....@@@.@@@@....@...	@@@..................@@@
	;;	....@@.....@@.....@@....	@@@@................@@@@
	;;	......@@@...@..@@@......	@@@@@@............@@@@@@
	;;	.........@@@@@@.........	@@@@@@@@@......@@@@@@@@@

;; -----------------------------------------------------------------------------------------------------------
SPR_BATTHRUSTER		EQU		&30
SPR_BATBELT			EQU		&31
SPR_BATBOOTS		EQU		&32
SPR_BATBAG			EQU		&33
SPR_BONUS			EQU		&34
SPR_BATSIGNAL		EQU		&35
SPR_S_CUSHION		EQU		&36
SPR_VAPE_0			EQU		&37
SPR_VAPE_1			EQU		&38
SPR_VAPE_2			EQU		&39
SPR_WORM_0			EQU		&3A
SPR_WORM_1			EQU		&3B
SPR_PRESENT			EQU		&3C
SPR_WELL			EQU		&3D
SPR_PAWDRUM			EQU		&3E
SPR_STOOL			EQU		&3F
SPR_SHROOM			EQU		&40
SPR_SWITCH			EQU		&41
SPR_KETTLE			EQU		&42
SPR_SUGARBOX		EQU		&43
SPR_BATCRAFT_FINS	EQU		&44
SPR_QBALL			EQU		&45
SPR_SALT			EQU		&46
SPR_PILLAR			EQU		&47
SPR_BUNDLE			EQU		&48
SPR_BEACON			EQU		&49
SPR_BUBBLE			EQU		&4A
SPR_BATCRAFT_RBLF	EQU		&4B
SPR_BATCRAFT_RFNT	EQU		&4C
SPR_BATCRAFT_LBCK	EQU		&4D
SPR_BATCRAFT_CKPIT	EQU		&4E
SPR_1st_3x24_sprite	EQU		SPR_BATTHRUSTER

;; -----------------------------------------------------------------------------------------------------------
img_3x24_bin:		;; SPR_BATTHRUSTER EQU &30
	9410 DEFB &00, &00, &00, &00, &3C, &00, &00, &7F, &00, &0F, &86, &C0, &1F, &E3, &20, &38
	9420 DEFB &F4, &D0, &31, &2B, &18, &70, &94, &74, &69, &29, &B4, &88, &AB, &5C, &51, &2B
	9430 DEFB &54, &90, &AB, &D4, &50, &53, &54, &90, &53, &54, &50, &53, &54, &20, &53, &54
	9440 DEFB &00, &53, &54, &00, &53, &5C, &00, &53, &42, &00, &51, &DE, &00, &3A, &28, &00
	9450 DEFB &07, &E0, &00, &01, &80, &00, &00, &00, &FF, &C3, &FF, &FF, &BC, &FF, &F0, &7F
	9460 DEFB &7F, &EF, &86, &FF, &DF, &EB, &1F, &B8, &F4, &07, &B6, &28, &1B, &77, &10, &35
	9470 DEFB &66, &21, &B5, &07, &23, &5D, &8E, &23, &55, &0F, &23, &D5, &8F, &C3, &55, &0F
	9480 DEFB &C3, &55, &8F, &C3, &55, &DF, &C3, &55, &FF, &C3, &55, &FF, &C3, &5D, &FF, &C3
	9490 DEFB &40, &FF, &C1, &C0, &FF, &F0, &01, &FF, &F0, &07, &FF, &F8, &1F, &FF, &FE, &7F
	;;	........................	@@@@@@@@@@....@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@.@@@@..@@@@@@@@
	;;	.........@@@@@@@........	@@@@.....@@@@@@@.@@@@@@@
	;;	....@@@@@....@@.@@......	@@@.@@@@@....@@.@@@@@@@@
	;;	...@@@@@@@@...@@..@.....	@@.@@@@@@@@.@.@@...@@@@@
	;;	..@@@...@@@@.@..@@.@....	@.@@@...@@@@.@.......@@@
	;;	..@@...@..@.@.@@...@@...	@.@@.@@...@.@......@@.@@
	;;	.@@@....@..@.@...@@@.@..	.@@@.@@@...@......@@.@.@
	;;	.@@.@..@..@.@..@@.@@.@..	.@@..@@...@....@@.@@.@.@
	;;	@...@...@.@.@.@@.@.@@@..	.....@@@..@...@@.@.@@@.@
	;;	.@.@...@..@.@.@@.@.@.@..	@...@@@...@...@@.@.@.@.@
	;;	@..@....@.@.@.@@@@.@.@..	....@@@@..@...@@@@.@.@.@
	;;	.@.@.....@.@..@@.@.@.@..	@...@@@@@@....@@.@.@.@.@
	;;	@..@.....@.@..@@.@.@.@..	....@@@@@@....@@.@.@.@.@
	;;	.@.@.....@.@..@@.@.@.@..	@...@@@@@@....@@.@.@.@.@
	;;	..@......@.@..@@.@.@.@..	@@.@@@@@@@....@@.@.@.@.@
	;;	.........@.@..@@.@.@.@..	@@@@@@@@@@....@@.@.@.@.@
	;;	.........@.@..@@.@.@@@..	@@@@@@@@@@....@@.@.@@@.@
	;;	.........@.@..@@.@....@.	@@@@@@@@@@....@@.@......
	;;	.........@.@...@@@.@@@@.	@@@@@@@@@@.....@@@......
	;;	..........@@@.@...@.@...	@@@@@@@@@@@@...........@
	;;	.............@@@@@@.....	@@@@@@@@@@@@.........@@@
	;;	...............@@.......	@@@@@@@@@@@@@......@@@@@
	;;	........................	@@@@@@@@@@@@@@@..@@@@@@@

		;; SPR_BATBELT : EQU &31
	94A0 DEFB &00, &00, &00, &00, &00, &00, &00, &0E, &00, &00, &11, &00, &00, &20, &B0, &00
	94B0 DEFB &30, &A0, &0E, &28, &58, &11, &B4, &50, &20, &44, &2C, &30, &38, &14, &30, &04
	94C0 DEFB &08, &2C, &04, &14, &35, &84, &E4, &2A, &B3, &54, &2D, &55, &14, &2D, &AC, &38
	94D0 DEFB &2D, &B0, &74, &2D, &AB, &6C, &15, &B7, &C0, &0A, &B1, &00, &0D, &56, &00, &01
	94E0 DEFB &A0, &00, &00, &30, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F1
	94F0 DEFB &FF, &FF, &E0, &CF, &FF, &C0, &37, &FF, &80, &27, &F1, &80, &1B, &E0, &00, &13
	9500 DEFB &C0, &00, &0D, &80, &00, &05, &80, &00, &03, &8C, &00, &05, &85, &80, &E5, &88
	9510 DEFB &B3, &55, &8D, &15, &15, &8D, &AC, &33, &8D, &B0, &75, &8D, &AB, &6D, &C5, &B7
	9520 DEFB &D3, &E8, &B1, &3F, &ED, &10, &FF, &F1, &A9, &FF, &FE, &37, &FF, &FF, &CF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	............@@@.........	@@@@@@@@@@@@...@@@@@@@@@
	;;	...........@...@........	@@@@@@@@@@@.....@@..@@@@
	;;	..........@.....@.@@....	@@@@@@@@@@........@@.@@@
	;;	..........@@....@.@.....	@@@@@@@@@.........@..@@@
	;;	....@@@...@.@....@.@@...	@@@@...@@..........@@.@@
	;;	...@...@@.@@.@...@.@....	@@@................@..@@
	;;	..@......@...@....@.@@..	@@..................@@.@
	;;	..@@......@@@......@.@..	@....................@.@
	;;	..@@.........@......@...	@.....................@@
	;;	..@.@@.......@.....@.@..	@...@@...............@.@
	;;	..@@.@.@@....@..@@@..@..	@....@.@@.......@@@..@.@
	;;	..@.@.@.@.@@..@@.@.@.@..	@...@...@.@@..@@.@.@.@.@
	;;	..@.@@.@.@.@.@.@...@.@..	@...@@.@...@.@.@...@.@.@
	;;	..@.@@.@@.@.@@....@@@...	@...@@.@@.@.@@....@@..@@
	;;	..@.@@.@@.@@.....@@@.@..	@...@@.@@.@@.....@@@.@.@
	;;	..@.@@.@@.@.@.@@.@@.@@..	@...@@.@@.@.@.@@.@@.@@.@
	;;	...@.@.@@.@@.@@@@@......	@@...@.@@.@@.@@@@@.@..@@
	;;	....@.@.@.@@...@........	@@@.@...@.@@...@..@@@@@@
	;;	....@@.@.@.@.@@.........	@@@.@@.@...@....@@@@@@@@
	;;	.......@@.@.............	@@@@...@@.@.@..@@@@@@@@@
	;;	..........@@............	@@@@@@@...@@.@@@@@@@@@@@
	;;	........................	@@@@@@@@@@..@@@@@@@@@@@@

		;; SPR_BATBOOTS : EQU &32
	9530 DEFB &00, &00, &00, &00, &C0, &00, &00, &70, &00, &00, &DC, &00, &0C, &67, &00, &07
	9540 DEFB &30, &80, &0D, &CC, &80, &06, &77, &80, &0F, &08, &00, &03, &CB, &00, &06, &7A
	9550 DEFB &00, &07, &87, &00, &07, &F6, &00, &07, &ED, &C0, &0B, &F6, &F0, &0B, &E2, &F8
	9560 DEFB &0D, &DC, &F8, &05, &EF, &70, &09, &EF, &88, &06, &DF, &B0, &01, &3F, &00, &00
	9570 DEFB &C0, &80, &00, &3F, &00, &00, &00, &00, &FF, &3F, &FF, &FE, &CF, &FF, &FF, &73
	9580 DEFB &FF, &F2, &DC, &FF, &EC, &67, &7F, &F7, &30, &BF, &ED, &CC, &BF, &F6, &77, &BF
	9590 DEFB &EB, &08, &7F, &F1, &C8, &7F, &F0, &78, &FF, &F0, &00, &7F, &F0, &00, &3F, &F0
	95A0 DEFB &01, &CF, &E8, &00, &F7, &E8, &00, &FB, &EC, &1C, &FB, &F4, &0F, &77, &E0, &0F
	95B0 DEFB &83, &F0, &1F, &87, &F8, &3F, &0F, &FE, &00, &3F, &FF, &00, &7F, &FF, &C0, &FF
	;;	........................	@@@@@@@@..@@@@@@@@@@@@@@
	;;	........@@..............	@@@@@@@.@@..@@@@@@@@@@@@
	;;	.........@@@............	@@@@@@@@.@@@..@@@@@@@@@@
	;;	........@@.@@@..........	@@@@..@.@@.@@@..@@@@@@@@
	;;	....@@...@@..@@@........	@@@.@@...@@..@@@.@@@@@@@
	;;	.....@@@..@@....@.......	@@@@.@@@..@@....@.@@@@@@
	;;	....@@.@@@..@@..@.......	@@@.@@.@@@..@@..@.@@@@@@
	;;	.....@@..@@@.@@@@.......	@@@@.@@..@@@.@@@@.@@@@@@
	;;	....@@@@....@...........	@@@.@.@@....@....@@@@@@@
	;;	......@@@@..@.@@........	@@@@...@@@..@....@@@@@@@
	;;	.....@@..@@@@.@.........	@@@@.....@@@@...@@@@@@@@
	;;	.....@@@@....@@@........	@@@@.............@@@@@@@
	;;	.....@@@@@@@.@@.........	@@@@..............@@@@@@
	;;	.....@@@@@@.@@.@@@......	@@@@...........@@@..@@@@
	;;	....@.@@@@@@.@@.@@@@....	@@@.@...........@@@@.@@@
	;;	....@.@@@@@...@.@@@@@...	@@@.@...........@@@@@.@@
	;;	....@@.@@@.@@@..@@@@@...	@@@.@@.....@@@..@@@@@.@@
	;;	.....@.@@@@.@@@@.@@@....	@@@@.@......@@@@.@@@.@@@
	;;	....@..@@@@.@@@@@...@...	@@@.........@@@@@.....@@
	;;	.....@@.@@.@@@@@@.@@....	@@@@.......@@@@@@....@@@
	;;	.......@..@@@@@@........	@@@@@.....@@@@@@....@@@@
	;;	........@@......@.......	@@@@@@@...........@@@@@@
	;;	..........@@@@@@........	@@@@@@@@.........@@@@@@@
	;;	........................	@@@@@@@@@@......@@@@@@@@

		;; SPR_BATBAG EQU &33
	95C0 DEFB &00, &00, &00, &00, &F0, &00, &0F, &38, &00, &13, &DD, &80, &39, &E2, &40, &36
	95D0 DEFB &95, &40, &28, &2A, &D0, &17, &D5, &48, &30, &7E, &A4, &25, &03, &6C, &4A, &B4
	95E0 DEFB &92, &55, &52, &6A, &4A, &95, &22, &55, &52, &8A, &4A, &95, &52, &55, &52, &AA
	95F0 DEFB &4A, &95, &52, &55, &52, &AA, &22, &95, &44, &18, &5A, &98, &07, &24, &60, &00
	9600 DEFB &CB, &80, &00, &3C, &00, &00, &00, &00, &FF, &0F, &FF, &F0, &F7, &FF, &EF, &3A
	9610 DEFB &7F, &D3, &DD, &BF, &B9, &E0, &5F, &B6, &80, &4F, &A8, &00, &57, &D7, &80, &4B
	9620 DEFB &B8, &7C, &25, &A0, &03, &65, &40, &30, &92, &40, &10, &62, &40, &10, &22, &40
	9630 DEFB &10, &02, &40, &10, &02, &40, &10, &02, &40, &10, &02, &40, &10, &02, &A0, &10
	9640 DEFB &05, &D8, &18, &1B, &E7, &24, &67, &F8, &CB, &9F, &FF, &3C, &7F, &FF, &C3, &FF
	;;	........................	@@@@@@@@....@@@@@@@@@@@@
	;;	........@@@@............	@@@@....@@@@.@@@@@@@@@@@
	;;	....@@@@..@@@...........	@@@.@@@@..@@@.@..@@@@@@@
	;;	...@..@@@@.@@@.@@.......	@@.@..@@@@.@@@.@@.@@@@@@
	;;	..@@@..@@@@...@..@......	@.@@@..@@@@......@.@@@@@
	;;	..@@.@@.@..@.@.@.@......	@.@@.@@.@........@..@@@@
	;;	..@.@.....@.@.@.@@.@....	@.@.@............@.@.@@@
	;;	...@.@@@@@.@.@.@.@..@...	@@.@.@@@@........@..@.@@
	;;	..@@.....@@@@@@.@.@..@..	@.@@@....@@@@@....@..@.@
	;;	..@..@.@......@@.@@.@@..	@.@...........@@.@@..@.@
	;;	.@..@.@.@.@@.@..@..@..@.	.@........@@....@..@..@.
	;;	.@.@.@.@.@.@..@..@@.@.@.	.@.........@.....@@...@.
	;;	.@..@.@.@..@.@.@..@...@.	.@.........@......@...@.
	;;	.@.@.@.@.@.@..@.@...@.@.	.@.........@..........@.
	;;	.@..@.@.@..@.@.@.@.@..@.	.@.........@..........@.
	;;	.@.@.@.@.@.@..@.@.@.@.@.	.@.........@..........@.
	;;	.@..@.@.@..@.@.@.@.@..@.	.@.........@..........@.
	;;	.@.@.@.@.@.@..@.@.@.@.@.	.@.........@..........@.
	;;	..@...@.@..@.@.@.@...@..	@.@........@.........@.@
	;;	...@@....@.@@.@.@..@@...	@@.@@......@@......@@.@@
	;;	.....@@@..@..@...@@.....	@@@..@@@..@..@...@@..@@@
	;;	........@@..@.@@@.......	@@@@@...@@..@.@@@..@@@@@
	;;	..........@@@@..........	@@@@@@@@..@@@@...@@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@

		;; SPR_BONUS EQU &34
	9650 DEFB &00, &00, &00, &00, &81, &00, &01, &7E, &80, &01, &00, &80, &01, &00, &80, &01
	9660 DEFB &12, &80, &01, &00, &80, &01, &32, &80, &01, &3E, &80, &02, &0C, &40, &04, &A1
	9670 DEFB &A0, &05, &FF, &A0, &09, &B1, &50, &09, &BB, &20, &08, &5E, &60, &08, &C0, &10
	9680 DEFB &08, &21, &10, &08, &33, &10, &08, &33, &10, &08, &B6, &48, &09, &63, &B0, &04
	9690 DEFB &B8, &C0, &03, &18, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &7E, &FF, &FE, &00
	96A0 DEFB &7F, &FE, &00, &7F, &FE, &00, &7F, &FE, &12, &7F, &FE, &00, &7F, &FE, &32, &7F
	96B0 DEFB &FE, &3E, &7F, &FC, &0C, &3F, &F8, &00, &1F, &F8, &00, &1F, &F0, &00, &0F, &F0
	96C0 DEFB &21, &2F, &F0, &5A, &6F, &F0, &C0, &0F, &F0, &00, &0F, &F0, &00, &0F, &F0, &00
	96D0 DEFB &0F, &F0, &00, &07, &F0, &00, &0F, &F8, &00, &1F, &FC, &C3, &3F, &FF, &E7, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........@......@........	@@@@@@@@.@@@@@@.@@@@@@@@
	;;	.......@.@@@@@@.@.......	@@@@@@@..........@@@@@@@
	;;	.......@........@.......	@@@@@@@..........@@@@@@@
	;;	.......@........@.......	@@@@@@@..........@@@@@@@
	;;	.......@...@..@.@.......	@@@@@@@....@..@..@@@@@@@
	;;	.......@........@.......	@@@@@@@..........@@@@@@@
	;;	.......@..@@..@.@.......	@@@@@@@...@@..@..@@@@@@@
	;;	.......@..@@@@@.@.......	@@@@@@@...@@@@@..@@@@@@@
	;;	......@.....@@...@......	@@@@@@......@@....@@@@@@
	;;	.....@..@.@....@@.@.....	@@@@@..............@@@@@
	;;	.....@.@@@@@@@@@@.@.....	@@@@@..............@@@@@
	;;	....@..@@.@@...@.@.@....	@@@@................@@@@
	;;	....@..@@.@@@.@@..@.....	@@@@......@....@..@.@@@@
	;;	....@....@.@@@@..@@.....	@@@@.....@.@@.@..@@.@@@@
	;;	....@...@@.........@....	@@@@....@@..........@@@@
	;;	....@.....@....@...@....	@@@@................@@@@
	;;	....@.....@@..@@...@....	@@@@................@@@@
	;;	....@.....@@..@@...@....	@@@@................@@@@
	;;	....@...@.@@.@@..@..@...	@@@@.................@@@
	;;	....@..@.@@...@@@.@@....	@@@@................@@@@
	;;	.....@..@.@@@...@@......	@@@@@..............@@@@@
	;;	......@@...@@...........	@@@@@@..@@....@@..@@@@@@
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@

		;; SPR_BATSIGNAL EQU &35
	96E0 DEFB &00, &00, &00, &00, &7E, &00, &01, &81, &80, &02, &20, &40, &04, &00, &20, &09
	96F0 DEFB &80, &10, &2B, &00, &14, &62, &00, &06, &10, &00, &08, &60, &00, &06, &48, &00
	9700 DEFB &12, &3E, &00, &7C, &6B, &81, &D6, &62, &DB, &46, &30, &E7, &0C, &38, &66, &1C
	9710 DEFB &5B, &66, &DA, &6F, &E7, &F6, &13, &DB, &C8, &04, &3C, &20, &01, &99, &80, &00
	9720 DEFB &66, &00, &00, &18, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &81
	9730 DEFB &FF, &FE, &20, &7F, &FC, &00, &3F, &D9, &80, &1B, &8B, &00, &11, &02, &00, &00
	9740 DEFB &80, &00, &01, &00, &00, &00, &08, &00, &10, &BE, &00, &7D, &6B, &81, &D6, &62
	9750 DEFB &C3, &46, &B0, &E7, &0D, &B8, &66, &1D, &1B, &66, &D8, &0F, &E7, &F0, &83, &C3
	9760 DEFB &C1, &E0, &00, &07, &F8, &00, &1F, &FE, &00, &7F, &FF, &81, &FF, &FF, &E7, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.........@@@@@@.........	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.......@@......@@.......	@@@@@@@@@......@@@@@@@@@
	;;	......@...@......@......	@@@@@@@...@......@@@@@@@
	;;	.....@............@.....	@@@@@@............@@@@@@
	;;	....@..@@..........@....	@@.@@..@@..........@@.@@
	;;	..@.@.@@...........@.@..	@...@.@@...........@...@
	;;	.@@...@..............@@.	......@.................
	;;	...@................@...	@......................@
	;;	.@@..................@@.	........................
	;;	.@..@..............@..@.	....@..............@....
	;;	..@@@@@..........@@@@@..	@.@@@@@..........@@@@@.@
	;;	.@@.@.@@@......@@@.@.@@.	.@@.@.@@@......@@@.@.@@.
	;;	.@@...@.@@.@@.@@.@...@@.	.@@...@.@@....@@.@...@@.
	;;	..@@....@@@..@@@....@@..	@.@@....@@@..@@@....@@.@
	;;	..@@@....@@..@@....@@@..	@.@@@....@@..@@....@@@.@
	;;	.@.@@.@@.@@..@@.@@.@@.@.	...@@.@@.@@..@@.@@.@@...
	;;	.@@.@@@@@@@..@@@@@@@.@@.	....@@@@@@@..@@@@@@@....
	;;	...@..@@@@.@@.@@@@..@...	@.....@@@@....@@@@.....@
	;;	.....@....@@@@....@.....	@@@..................@@@
	;;	.......@@..@@..@@.......	@@@@@..............@@@@@
	;;	.........@@..@@.........	@@@@@@@..........@@@@@@@
	;;	...........@@...........	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@

		;; SPR_S_CUSHION EQU &36
	9770 DEFB &00, &00, &00, &00, &20, &00, &00, &F8, &00, &03, &F8, &00, &0F, &66, &00, &1E
	9780 DEFB &1F, &C0, &3E, &7F, &F0, &3F, &F9, &F8, &1F, &E1, &F8, &27, &9B, &F4, &38, &7F
	9790 DEFB &CC, &1E, &FC, &38, &24, &3D, &EC, &1E, &D8, &18, &24, &E5, &EC, &1E, &38, &18
	97A0 DEFB &24, &CD, &EC, &1E, &38, &18, &06, &CD, &F0, &00, &38, &40, &00, &CC, &00, &00
	97B0 DEFB &7C, &00, &00, &18, &00, &00, &00, &00, &FF, &DF, &FF, &FF, &27, &FF, &FC, &FB
	97C0 DEFB &FF, &F3, &F9, &FF, &EF, &66, &3F, &DE, &1F, &CF, &BE, &7F, &F7, &BF, &F9, &FB
	97D0 DEFB &DF, &E1, &FB, &87, &9B, &F1, &80, &7F, &C1, &C0, &FC, &03, &A0, &3C, &05, &DA
	97E0 DEFB &18, &13, &A0, &01, &E5, &DA, &00, &11, &80, &C5, &E1, &C0, &30, &03, &E0, &C4
	97F0 DEFB &07, &F8, &32, &0F, &FE, &01, &BF, &FF, &01, &FF, &FF, &83, &FF, &FF, &E7, &FF
	;;	........................	@@@@@@@@@@.@@@@@@@@@@@@@
	;;	..........@.............	@@@@@@@@..@..@@@@@@@@@@@
	;;	........@@@@@...........	@@@@@@..@@@@@.@@@@@@@@@@
	;;	......@@@@@@@...........	@@@@..@@@@@@@..@@@@@@@@@
	;;	....@@@@.@@..@@.........	@@@.@@@@.@@..@@...@@@@@@
	;;	...@@@@....@@@@@@@......	@@.@@@@....@@@@@@@..@@@@
	;;	..@@@@@..@@@@@@@@@@@....	@.@@@@@..@@@@@@@@@@@.@@@
	;;	..@@@@@@@@@@@..@@@@@@...	@.@@@@@@@@@@@..@@@@@@.@@
	;;	...@@@@@@@@....@@@@@@...	@@.@@@@@@@@....@@@@@@.@@
	;;	..@..@@@@..@@.@@@@@@.@..	@....@@@@..@@.@@@@@@...@
	;;	..@@@....@@@@@@@@@..@@..	@........@@@@@@@@@.....@
	;;	...@@@@.@@@@@@....@@@...	@@......@@@@@@........@@
	;;	..@..@....@@@@.@@@@.@@..	@.@.......@@@@.......@.@
	;;	...@@@@.@@.@@......@@...	@@.@@.@....@@......@..@@
	;;	..@..@..@@@..@.@@@@.@@..	@.@............@@@@..@.@
	;;	...@@@@...@@@......@@...	@@.@@.@............@...@
	;;	..@..@..@@..@@.@@@@.@@..	@.......@@...@.@@@@....@
	;;	...@@@@...@@@......@@...	@@........@@..........@@
	;;	.....@@.@@..@@.@@@@@....	@@@.....@@...@.......@@@
	;;	..........@@@....@......	@@@@@.....@@..@.....@@@@
	;;	........@@..@@..........	@@@@@@@........@@.@@@@@@
	;;	.........@@@@@..........	@@@@@@@@.......@@@@@@@@@
	;;	...........@@...........	@@@@@@@@@.....@@@@@@@@@@
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@

		;; SPR_VAPE_0 EQU &37
	9800 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	9810 DEFB &28, &00, &00, &1E, &00, &00, &BC, &00, &00, &67, &80, &06, &D9, &00, &01, &E6
	9820 DEFB &80, &03, &91, &C0, &0D, &FD, &F0, &0A, &D5, &C0, &03, &EB, &60, &00, &5C, &C0
	9830 DEFB &00, &66, &10, &00, &00, &00, &00, &00, &40, &00, &00, &00, &00, &00, &00, &00
	9840 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	9850 DEFB &FF, &FF, &FF, &FF, &FF, &D7, &FF, &FF, &A9, &FF, &FF, &5E, &FF, &FE, &BC, &7F
	9860 DEFB &F9, &67, &BF, &F6, &D9, &7F, &F9, &E6, &BF, &F3, &91, &CF, &ED, &FD, &F7, &EA
	9870 DEFB &D5, &CF, &F3, &EB, &6F, &FC, &5C, &CF, &FF, &66, &17, &FF, &99, &AF, &FF, &FF
	9880 DEFB &5F, &FF, &FF, &BF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@.@.@@@@@@@@@@@
	;;	..........@.@...........	@@@@@@@@@.@.@..@@@@@@@@@
	;;	...........@@@@.........	@@@@@@@@.@.@@@@.@@@@@@@@
	;;	........@.@@@@..........	@@@@@@@.@.@@@@...@@@@@@@
	;;	.........@@..@@@@.......	@@@@@..@.@@..@@@@.@@@@@@
	;;	.....@@.@@.@@..@........	@@@@.@@.@@.@@..@.@@@@@@@
	;;	.......@@@@..@@.@.......	@@@@@..@@@@..@@.@.@@@@@@
	;;	......@@@..@...@@@......	@@@@..@@@..@...@@@..@@@@
	;;	....@@.@@@@@@@.@@@@@....	@@@.@@.@@@@@@@.@@@@@.@@@
	;;	....@.@.@@.@.@.@@@......	@@@.@.@.@@.@.@.@@@..@@@@
	;;	......@@@@@.@.@@.@@.....	@@@@..@@@@@.@.@@.@@.@@@@
	;;	.........@.@@@..@@......	@@@@@@...@.@@@..@@..@@@@
	;;	.........@@..@@....@....	@@@@@@@@.@@..@@....@.@@@
	;;	........................	@@@@@@@@@..@@..@@.@.@@@@
	;;	.................@......	@@@@@@@@@@@@@@@@.@.@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@.@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_VAPE_1 EQU &38
	9890 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &38, &00, &00
	98A0 DEFB &D4, &40, &06, &7D, &00, &05, &BF, &00, &03, &E6, &60, &01, &BB, &60, &01, &67
	98B0 DEFB &A8, &03, &9D, &D8, &0F, &BF, &A0, &03, &BB, &58, &06, &C7, &E8, &03, &3E, &40
	98C0 DEFB &18, &77, &20, &00, &02, &00, &07, &00, &00, &02, &00, &00, &00, &00, &00, &00
	98D0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	98E0 DEFB &FF, &FF, &C7, &FF, &FF, &3B, &BF, &F8, &D4, &5F, &F6, &7D, &3F, &F5, &BF, &1F
	98F0 DEFB &FB, &E6, &6F, &FD, &BB, &67, &FD, &67, &AB, &F3, &9D, &DB, &EF, &BF, &A7, &F3
	9900 DEFB &BB, &5B, &F6, &C7, &EB, &E3, &3E, &57, &D8, &77, &2F, &E0, &8A, &DF, &F7, &7D
	9910 DEFB &FF, &FA, &FF, &FF, &FD, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@...@@@@@@@@@@@
	;;	..........@@@...........	@@@@@@@@..@@@.@@@.@@@@@@
	;;	........@@.@.@...@......	@@@@@...@@.@.@...@.@@@@@
	;;	.....@@..@@@@@.@........	@@@@.@@..@@@@@.@..@@@@@@
	;;	.....@.@@.@@@@@@........	@@@@.@.@@.@@@@@@...@@@@@
	;;	......@@@@@..@@..@@.....	@@@@@.@@@@@..@@..@@.@@@@
	;;	.......@@.@@@.@@.@@.....	@@@@@@.@@.@@@.@@.@@..@@@
	;;	.......@.@@..@@@@.@.@...	@@@@@@.@.@@..@@@@.@.@.@@
	;;	......@@@..@@@.@@@.@@...	@@@@..@@@..@@@.@@@.@@.@@
	;;	....@@@@@.@@@@@@@.@.....	@@@.@@@@@.@@@@@@@.@..@@@
	;;	......@@@.@@@.@@.@.@@...	@@@@..@@@.@@@.@@.@.@@.@@
	;;	.....@@.@@...@@@@@@.@...	@@@@.@@.@@...@@@@@@.@.@@
	;;	......@@..@@@@@..@......	@@@...@@..@@@@@..@.@.@@@
	;;	...@@....@@@.@@@..@.....	@@.@@....@@@.@@@..@.@@@@
	;;	..............@.........	@@@.....@...@.@.@@.@@@@@
	;;	.....@@@................	@@@@.@@@.@@@@@.@@@@@@@@@
	;;	......@.................	@@@@@.@.@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@.@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_VAPE_2 EQU &39
	9920 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &1C, &00, &02, &5C, &70, &0D
	9930 DEFB &BB, &90, &09, &FE, &60, &06, &FD, &B0, &0F, &E7, &F0, &0F, &DD, &F0, &15, &FE
	9940 DEFB &E0, &1B, &BE, &F8, &05, &FF, &F8, &1F, &DF, &E0, &3F, &E3, &70, &36, &FC, &EC
	9950 DEFB &19, &FF, &DC, &05, &ED, &28, &02, &73, &F0, &00, &01, &F0, &00, &00, &E0, &00
	9960 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &E3
	9970 DEFB &FF, &FD, &9D, &8F, &F2, &5C, &77, &ED, &BB, &97, &E9, &FE, &6F, &F6, &FD, &B7
	9980 DEFB &EF, &E7, &F7, &EF, &DD, &F7, &D5, &FE, &E7, &DB, &BE, &FB, &E5, &FF, &FB, &DF
	9990 DEFB &DF, &E7, &BF, &E3, &73, &B6, &FC, &ED, &D9, &FF, &DD, &E5, &ED, &2B, &FA, &73
	99A0 DEFB &F7, &FD, &8D, &F7, &FF, &FE, &EF, &FF, &FF, &1F, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@...@@@@@@@@@@
	;;	...........@@@..........	@@@@@@.@@..@@@.@@...@@@@
	;;	......@..@.@@@...@@@....	@@@@..@..@.@@@...@@@.@@@
	;;	....@@.@@.@@@.@@@..@....	@@@.@@.@@.@@@.@@@..@.@@@
	;;	....@..@@@@@@@@..@@.....	@@@.@..@@@@@@@@..@@.@@@@
	;;	.....@@.@@@@@@.@@.@@....	@@@@.@@.@@@@@@.@@.@@.@@@
	;;	....@@@@@@@..@@@@@@@....	@@@.@@@@@@@..@@@@@@@.@@@
	;;	....@@@@@@.@@@.@@@@@....	@@@.@@@@@@.@@@.@@@@@.@@@
	;;	...@.@.@@@@@@@@.@@@.....	@@.@.@.@@@@@@@@.@@@..@@@
	;;	...@@.@@@.@@@@@.@@@@@...	@@.@@.@@@.@@@@@.@@@@@.@@
	;;	.....@.@@@@@@@@@@@@@@...	@@@..@.@@@@@@@@@@@@@@.@@
	;;	...@@@@@@@.@@@@@@@@.....	@@.@@@@@@@.@@@@@@@@..@@@
	;;	..@@@@@@@@@...@@.@@@....	@.@@@@@@@@@...@@.@@@..@@
	;;	..@@.@@.@@@@@@..@@@.@@..	@.@@.@@.@@@@@@..@@@.@@.@
	;;	...@@..@@@@@@@@@@@.@@@..	@@.@@..@@@@@@@@@@@.@@@.@
	;;	.....@.@@@@.@@.@..@.@...	@@@..@.@@@@.@@.@..@.@.@@
	;;	......@..@@@..@@@@@@....	@@@@@.@..@@@..@@@@@@.@@@
	;;	...............@@@@@....	@@@@@@.@@...@@.@@@@@.@@@
	;;	................@@@.....	@@@@@@@@@@@@@@@.@@@.@@@@
	;;	........................	@@@@@@@@@@@@@@@@...@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_WORM_0 EQU &3A
	99B0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &1E, &7E, &78, &0D
	99C0 DEFB &81, &B0, &0A, &7E, &50, &05, &81, &A0, &05, &00, &A0, &06, &18, &60, &03, &81
	99D0 DEFB &C0, &0E, &FF, &70, &1F, &00, &F8, &1C, &FF, &38, &10, &00, &08, &02, &00, &40
	99E0 DEFB &0A, &18, &50, &05, &BD, &A0, &02, &7E, &40, &01, &91, &80, &00, &7E, &00, &00
	99F0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	9A00 DEFB &FF, &E1, &81, &87, &DE, &7E, &7B, &ED, &81, &B7, &EA, &00, &57, &F4, &00, &2F
	9A10 DEFB &F4, &66, &2F, &F6, &5A, &6F, &F3, &81, &CF, &EE, &FF, &77, &DF, &00, &FB, &DC
	9A20 DEFB &00, &3B, &D0, &00, &0B, &E0, &E7, &07, &E8, &5A, &17, &F4, &3C, &2F, &FA, &7E
	9A30 DEFB &5F, &FD, &91, &BF, &FE, &7E, &7F, &FF, &81, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@....@@......@@....@@@
	;;	...@@@@..@@@@@@..@@@@...	@@.@@@@..@@@@@@..@@@@.@@
	;;	....@@.@@......@@.@@....	@@@.@@.@@......@@.@@.@@@
	;;	....@.@..@@@@@@..@.@....	@@@.@.@..........@.@.@@@
	;;	.....@.@@......@@.@.....	@@@@.@............@.@@@@
	;;	.....@.@........@.@.....	@@@@.@...@@..@@...@.@@@@
	;;	.....@@....@@....@@.....	@@@@.@@..@.@@.@..@@.@@@@
	;;	......@@@......@@@......	@@@@..@@@......@@@..@@@@
	;;	....@@@.@@@@@@@@.@@@....	@@@.@@@.@@@@@@@@.@@@.@@@
	;;	...@@@@@........@@@@@...	@@.@@@@@........@@@@@.@@
	;;	...@@@..@@@@@@@@..@@@...	@@.@@@............@@@.@@
	;;	...@................@...	@@.@................@.@@
	;;	......@..........@......	@@@.....@@@..@@@.....@@@
	;;	....@.@....@@....@.@....	@@@.@....@.@@.@....@.@@@
	;;	.....@.@@.@@@@.@@.@.....	@@@@.@....@@@@....@.@@@@
	;;	......@..@@@@@@..@......	@@@@@.@..@@@@@@..@.@@@@@
	;;	.......@@..@...@@.......	@@@@@@.@@..@...@@.@@@@@@
	;;	.........@@@@@@.........	@@@@@@@..@@@@@@..@@@@@@@
	;;	........................	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_WORM_1 EQU &3B
	9A40 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &1E
	9A50 DEFB &7E, &78, &0D, &81, &B0, &0A, &7E, &50, &05, &81, &A0, &05, &3C, &A0, &16, &00
	9A60 DEFB &68, &13, &81, &C8, &0E, &FF, &70, &1F, &00, &F8, &1C, &E7, &38, &10, &18, &08
	9A70 DEFB &05, &BD, &A0, &02, &7E, &40, &01, &91, &80, &00, &7E, &00, &00, &00, &00, &00
	9A80 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	9A90 DEFB &FF, &FF, &FF, &FF, &E1, &81, &87, &DE, &7E, &7B, &ED, &81, &B7, &EA, &00, &57
	9AA0 DEFB &F4, &00, &2F, &E4, &3C, &27, &D6, &00, &6B, &D3, &81, &CB, &EE, &FF, &77, &DF
	9AB0 DEFB &00, &FB, &DC, &00, &3B, &D0, &18, &0B, &E4, &3C, &27, &FA, &7E, &5F, &FD, &91
	9AC0 DEFB &BF, &FE, &7E, &7F, &FF, &81, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@....@@......@@....@@@
	;;	...@@@@..@@@@@@..@@@@...	@@.@@@@..@@@@@@..@@@@.@@
	;;	....@@.@@......@@.@@....	@@@.@@.@@......@@.@@.@@@
	;;	....@.@..@@@@@@..@.@....	@@@.@.@..........@.@.@@@
	;;	.....@.@@......@@.@.....	@@@@.@............@.@@@@
	;;	.....@.@..@@@@..@.@.....	@@@..@....@@@@....@..@@@
	;;	...@.@@..........@@.@...	@@.@.@@..........@@.@.@@
	;;	...@..@@@......@@@..@...	@@.@..@@@......@@@..@.@@
	;;	....@@@.@@@@@@@@.@@@....	@@@.@@@.@@@@@@@@.@@@.@@@
	;;	...@@@@@........@@@@@...	@@.@@@@@........@@@@@.@@
	;;	...@@@..@@@..@@@..@@@...	@@.@@@............@@@.@@
	;;	...@.......@@.......@...	@@.@.......@@.......@.@@
	;;	.....@.@@.@@@@.@@.@.....	@@@..@....@@@@....@..@@@
	;;	......@..@@@@@@..@......	@@@@@.@..@@@@@@..@.@@@@@
	;;	.......@@..@...@@.......	@@@@@@.@@..@...@@.@@@@@@
	;;	.........@@@@@@.........	@@@@@@@..@@@@@@..@@@@@@@
	;;	........................	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_PRESENT EQU &3C
	9AD0 DEFB &00, &00, &00, &07, &1C, &00, &0F, &A3, &00, &09, &C0, &80, &0A, &E1, &E0, &17
	9AE0 DEFB &52, &18, &61, &B9, &E6, &40, &77, &72, &60, &B4, &36, &5B, &C3, &B2, &47, &00
	9AF0 DEFB &C2, &46, &81, &22, &46, &66, &64, &46, &18, &62, &26, &00, &62, &46, &18, &64
	9B00 DEFB &46, &08, &62, &46, &00, &62, &36, &18, &6C, &0E, &00, &70, &03, &10, &C0, &00
	9B10 DEFB &C3, &00, &00, &3C, &00, &00, &00, &00, &F8, &FF, &FF, &F7, &63, &FF, &EF, &80
	9B20 DEFB &7F, &E9, &C0, &BF, &EA, &E1, &DF, &E7, &52, &07, &81, &B9, &E1, &80, &77, &71
	9B30 DEFB &80, &B4, &31, &83, &C3, &B1, &87, &00, &C1, &86, &00, &21, &86, &00, &63, &86
	9B40 DEFB &00, &61, &C6, &00, &61, &86, &00, &63, &86, &00, &61, &86, &00, &61, &C6, &00
	9B50 DEFB &63, &F6, &00, &6F, &FA, &00, &5F, &FD, &00, &BF, &FF, &C3, &FF, &FF, &FF, &FF
	;;	........................	@@@@@...@@@@@@@@@@@@@@@@
	;;	.....@@@...@@@..........	@@@@.@@@.@@...@@@@@@@@@@
	;;	....@@@@@.@...@@........	@@@.@@@@@........@@@@@@@
	;;	....@..@@@......@.......	@@@.@..@@@......@.@@@@@@
	;;	....@.@.@@@....@@@@.....	@@@.@.@.@@@....@@@.@@@@@
	;;	...@.@@@.@.@..@....@@...	@@@..@@@.@.@..@......@@@
	;;	.@@....@@.@@@..@@@@..@@.	@......@@.@@@..@@@@....@
	;;	.@.......@@@.@@@.@@@..@.	@........@@@.@@@.@@@...@
	;;	.@@.....@.@@.@....@@.@@.	@.......@.@@.@....@@...@
	;;	.@.@@.@@@@....@@@.@@..@.	@.....@@@@....@@@.@@...@
	;;	.@...@@@........@@....@.	@....@@@........@@.....@
	;;	.@...@@.@......@..@...@.	@....@@...........@....@
	;;	.@...@@..@@..@@..@@..@..	@....@@..........@@...@@
	;;	.@...@@....@@....@@...@.	@....@@..........@@....@
	;;	..@..@@..........@@...@.	@@...@@..........@@....@
	;;	.@...@@....@@....@@..@..	@....@@..........@@...@@
	;;	.@...@@.....@....@@...@.	@....@@..........@@....@
	;;	.@...@@..........@@...@.	@....@@..........@@....@
	;;	..@@.@@....@@....@@.@@..	@@...@@..........@@...@@
	;;	....@@@..........@@@....	@@@@.@@..........@@.@@@@
	;;	......@@...@....@@......	@@@@@.@..........@.@@@@@
	;;	........@@....@@........	@@@@@@.@........@.@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@....@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_WELL EQU &3D
	9B60 DEFB &00, &00, &00, &00, &00, &00, &00, &FF, &00, &07, &00, &E0, &18, &6D, &18, &26
	9B70 DEFB &DB, &64, &2D, &B6, &D4, &23, &6D, &A4, &18, &DB, &18, &27, &00, &E4, &30, &FF
	9B80 DEFB &0C, &37, &00, &EC, &37, &F7, &EC, &37, &F7, &EC, &17, &F7, &E8, &27, &F7, &E4
	9B90 DEFB &31, &F7, &8C, &3E, &00, &7C, &3E, &FF, &7C, &3E, &FF, &7C, &1E, &FF, &78, &06
	9BA0 DEFB &FF, &60, &00, &FF, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &00, &FF, &F8, &00
	9BB0 DEFB &1F, &E0, &00, &07, &C0, &49, &03, &82, &49, &21, &8D, &B6, &D1, &82, &49, &21
	9BC0 DEFB &C0, &49, &03, &80, &00, &01, &80, &00, &01, &80, &00, &01, &80, &00, &01, &80
	9BD0 DEFB &00, &01, &C0, &00, &03, &80, &00, &01, &80, &00, &01, &80, &00, &01, &80, &00
	9BE0 DEFB &01, &80, &00, &01, &C0, &00, &03, &E0, &00, &07, &F8, &00, &1F, &FF, &00, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@........@@@@@@@@
	;;	........@@@@@@@@........	@@@@@..............@@@@@
	;;	.....@@@........@@@.....	@@@..................@@@
	;;	...@@....@@.@@.@...@@...	@@.......@..@..@......@@
	;;	..@..@@.@@.@@.@@.@@..@..	@.....@..@..@..@..@....@
	;;	..@.@@.@@.@@.@@.@@.@.@..	@...@@.@@.@@.@@.@@.@...@
	;;	..@...@@.@@.@@.@@.@..@..	@.....@..@..@..@..@....@
	;;	...@@...@@.@@.@@...@@...	@@.......@..@..@......@@
	;;	..@..@@@........@@@..@..	@......................@
	;;	..@@....@@@@@@@@....@@..	@......................@
	;;	..@@.@@@........@@@.@@..	@......................@
	;;	..@@.@@@@@@@.@@@@@@.@@..	@......................@
	;;	..@@.@@@@@@@.@@@@@@.@@..	@......................@
	;;	...@.@@@@@@@.@@@@@@.@...	@@....................@@
	;;	..@..@@@@@@@.@@@@@@..@..	@......................@
	;;	..@@...@@@@@.@@@@...@@..	@......................@
	;;	..@@@@@..........@@@@@..	@......................@
	;;	..@@@@@.@@@@@@@@.@@@@@..	@......................@
	;;	..@@@@@.@@@@@@@@.@@@@@..	@......................@
	;;	...@@@@.@@@@@@@@.@@@@...	@@....................@@
	;;	.....@@.@@@@@@@@.@@.....	@@@..................@@@
	;;	........@@@@@@@@........	@@@@@..............@@@@@
	;;	........................	@@@@@@@@........@@@@@@@@

		;; SPR_PAWDRUM EQU &3E
	9BF0 DEFB &00, &00, &00, &00, &FF, &00, &03, &00, &C0, &0C, &B6, &30, &13, &6D, &88, &16
	9C00 DEFB &DB, &68, &2D, &B6, &D4, &33, &6D, &AC, &5A, &DB, &5A, &6C, &36, &36, &7F, &81
	9C10 DEFB &FE, &3F, &FF, &FC, &5F, &FF, &FA, &7F, &FF, &FE, &7E, &BD, &7E, &33, &7E, &CC
	9C20 DEFB &6D, &E7, &B6, &5E, &DB, &7A, &5F, &3C, &FA, &1F, &7E, &F8, &0F, &7E, &F0, &02
	9C30 DEFB &7E, &40, &00, &3C, &00, &00, &00, &00, &FF, &00, &FF, &FC, &00, &3F, &F0, &00
	9C40 DEFB &0F, &E0, &24, &07, &C1, &24, &83, &C4, &92, &43, &84, &92, &41, &82, &49, &21
	9C50 DEFB &02, &49, &00, &00, &24, &00, &00, &00, &00, &80, &00, &01, &00, &00, &00, &00
	9C60 DEFB &00, &00, &00, &00, &00, &80, &00, &01, &0C, &00, &30, &1E, &18, &78, &1F, &3C
	9C70 DEFB &F8, &9F, &7E, &F9, &EF, &7E, &F7, &F2, &7E, &4F, &FD, &BD, &BF, &FF, &C3, &FF
	;;	........................	@@@@@@@@........@@@@@@@@
	;;	........@@@@@@@@........	@@@@@@............@@@@@@
	;;	......@@........@@......	@@@@................@@@@
	;;	....@@..@.@@.@@...@@....	@@@.......@..@.......@@@
	;;	...@..@@.@@.@@.@@...@...	@@.....@..@..@..@.....@@
	;;	...@.@@.@@.@@.@@.@@.@...	@@...@..@..@..@..@....@@
	;;	..@.@@.@@.@@.@@.@@.@.@..	@....@..@..@..@..@.....@
	;;	..@@..@@.@@.@@.@@.@.@@..	@.....@..@..@..@..@....@
	;;	.@.@@.@.@@.@@.@@.@.@@.@.	......@..@..@..@........
	;;	.@@.@@....@@.@@...@@.@@.	..........@..@..........
	;;	.@@@@@@@@......@@@@@@@@.	........................
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	.@.@@@@@@@@@@@@@@@@@@.@.	........................
	;;	.@@@@@@@@@@@@@@@@@@@@@@.	........................
	;;	.@@@@@@.@.@@@@.@.@@@@@@.	........................
	;;	..@@..@@.@@@@@@.@@..@@..	@......................@
	;;	.@@.@@.@@@@..@@@@.@@.@@.	....@@............@@....
	;;	.@.@@@@.@@.@@.@@.@@@@.@.	...@@@@....@@....@@@@...
	;;	.@.@@@@@..@@@@..@@@@@.@.	...@@@@@..@@@@..@@@@@...
	;;	...@@@@@.@@@@@@.@@@@@...	@..@@@@@.@@@@@@.@@@@@..@
	;;	....@@@@.@@@@@@.@@@@....	@@@.@@@@.@@@@@@.@@@@.@@@
	;;	......@..@@@@@@..@......	@@@@..@..@@@@@@..@..@@@@
	;;	..........@@@@..........	@@@@@@.@@.@@@@.@@.@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@

		;; SPR_STOOL EQU &3F
	9C80 DEFB &00, &00, &00, &00, &18, &00, &00, &66, &00, &01, &99, &80, &06, &24, &60, &18
	9C90 DEFB &34, &18, &64, &34, &26, &18, &34, &18, &66, &34, &66, &19, &91, &98, &26, &66
	9CA0 DEFB &64, &31, &99, &94, &34, &66, &34, &34, &18, &34, &34, &24, &34, &34, &34, &34
	9CB0 DEFB &34, &34, &34, &18, &34, &18, &00, &34, &00, &00, &34, &00, &00, &34, &00, &00
	9CC0 DEFB &34, &00, &00, &18, &00, &00, &00, &00, &FF, &E7, &FF, &FF, &99, &FF, &FE, &66
	9CD0 DEFB &7F, &F9, &81, &9F, &E6, &20, &67, &99, &B1, &99, &61, &B1, &86, &19, &B1, &98
	9CE0 DEFB &06, &30, &60, &81, &91, &81, &A0, &66, &01, &B0, &18, &11, &B0, &00, &31, &B1
	9CF0 DEFB &81, &B1, &B1, &A1, &B1, &B1, &B1, &B1, &B1, &B1, &B1, &DB, &B1, &DB, &E7, &B1
	9D00 DEFB &E7, &FF, &B1, &FF, &FF, &B1, &FF, &FF, &B1, &FF, &FF, &DB, &FF, &FF, &E7, &FF
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@
	;;	...........@@...........	@@@@@@@@@..@@..@@@@@@@@@
	;;	.........@@..@@.........	@@@@@@@..@@..@@..@@@@@@@
	;;	.......@@..@@..@@.......	@@@@@..@@......@@..@@@@@
	;;	.....@@...@..@...@@.....	@@@..@@...@......@@..@@@
	;;	...@@.....@@.@.....@@...	@..@@..@@.@@...@@..@@..@
	;;	.@@..@....@@.@....@..@@.	.@@....@@.@@...@@....@@.
	;;	...@@.....@@.@.....@@...	...@@..@@.@@...@@..@@...
	;;	.@@..@@...@@.@...@@..@@.	.....@@...@@.....@@.....
	;;	...@@..@@..@...@@..@@...	@......@@..@...@@......@
	;;	..@..@@..@@..@@..@@..@..	@.@......@@..@@........@
	;;	..@@...@@..@@..@@..@.@..	@.@@.......@@......@...@
	;;	..@@.@...@@..@@...@@.@..	@.@@..............@@...@
	;;	..@@.@.....@@.....@@.@..	@.@@...@@......@@.@@...@
	;;	..@@.@....@..@....@@.@..	@.@@...@@.@....@@.@@...@
	;;	..@@.@....@@.@....@@.@..	@.@@...@@.@@...@@.@@...@
	;;	..@@.@....@@.@....@@.@..	@.@@...@@.@@...@@.@@...@
	;;	...@@.....@@.@.....@@...	@@.@@.@@@.@@...@@@.@@.@@
	;;	..........@@.@..........	@@@..@@@@.@@...@@@@..@@@
	;;	..........@@.@..........	@@@@@@@@@.@@...@@@@@@@@@
	;;	..........@@.@..........	@@@@@@@@@.@@...@@@@@@@@@
	;;	..........@@.@..........	@@@@@@@@@.@@...@@@@@@@@@
	;;	...........@@...........	@@@@@@@@@@.@@.@@@@@@@@@@
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@

		;; SPR_SHROOM EQU &40
	9D10 DEFB &00, &00, &00, &00, &3C, &00, &00, &C3, &00, &03, &81, &C0, &06, &C3, &60, &0C
	9D20 DEFB &24, &30, &14, &3C, &28, &26, &24, &64, &39, &42, &9C, &50, &C3, &0A, &50, &C3
	9D30 DEFB &0A, &49, &24, &92, &36, &18, &6C, &22, &18, &44, &1A, &66, &58, &07, &C3, &E0
	9D40 DEFB &00, &FF, &00, &0A, &00, &50, &0A, &DB, &50, &07, &FF, &E0, &01, &BD, &80, &00
	9D50 DEFB &34, &00, &00, &00, &00, &00, &00, &00, &FF, &C3, &FF, &FF, &00, &FF, &FC, &00
	9D60 DEFB &3F, &F8, &00, &1F, &F0, &00, &0F, &E0, &00, &07, &C0, &00, &03, &80, &00, &01
	9D70 DEFB &80, &00, &01, &00, &00, &00, &00, &00, &00, &00, &00, &00, &80, &00, &01, &80
	9D80 DEFB &00, &01, &C0, &00, &03, &E0, &00, &07, &F0, &00, &0F, &EA, &00, &57, &EA, &DB
	9D90 DEFB &57, &F7, &FF, &EF, &F9, &BD, &9F, &FE, &34, &7F, &FF, &CB, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@....@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@........@@@@@@@@
	;;	........@@....@@........	@@@@@@............@@@@@@
	;;	......@@@......@@@......	@@@@@..............@@@@@
	;;	.....@@.@@....@@.@@.....	@@@@................@@@@
	;;	....@@....@..@....@@....	@@@..................@@@
	;;	...@.@....@@@@....@.@...	@@....................@@
	;;	..@..@@...@..@...@@..@..	@......................@
	;;	..@@@..@.@....@.@..@@@..	@......................@
	;;	.@.@....@@....@@....@.@.	........................
	;;	.@.@....@@....@@....@.@.	........................
	;;	.@..@..@..@..@..@..@..@.	........................
	;;	..@@.@@....@@....@@.@@..	@......................@
	;;	..@...@....@@....@...@..	@......................@
	;;	...@@.@..@@..@@..@.@@...	@@....................@@
	;;	.....@@@@@....@@@@@.....	@@@..................@@@
	;;	........@@@@@@@@........	@@@@................@@@@
	;;	....@.@..........@.@....	@@@.@.@..........@.@.@@@
	;;	....@.@.@@.@@.@@.@.@....	@@@.@.@.@@.@@.@@.@.@.@@@
	;;	.....@@@@@@@@@@@@@@.....	@@@@.@@@@@@@@@@@@@@.@@@@
	;;	.......@@.@@@@.@@.......	@@@@@..@@.@@@@.@@..@@@@@
	;;	..........@@.@..........	@@@@@@@...@@.@...@@@@@@@
	;;	........................	@@@@@@@@@@..@.@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_SWITCH EQU &41
	9DA0 DEFB &00, &00, &00, &00, &7E, &00, &01, &BF, &C0, &0B, &CF, &F0, &1A, &F0, &78, &3A
	9DB0 DEFB &FF, &BC, &3B, &7F, &BC, &3D, &BF, &BC, &1C, &00, &38, &2F, &FF, &F4, &33, &FF
	9DC0 DEFB &CC, &3C, &7E, &3C, &5F, &81, &FA, &4F, &FF, &F2, &73, &FF, &CE, &3C, &7E, &3C
	9DD0 DEFB &4F, &00, &F2, &73, &C3, &CE, &3C, &FF, &3C, &0F, &3C, &F0, &03, &C3, &C0, &00
	9DE0 DEFB &FF, &00, &00, &3C, &00, &00, &00, &00, &FF, &81, &FF, &FE, &00, &3F, &F5, &80
	9DF0 DEFB &0F, &E3, &C0, &07, &C2, &F0, &03, &82, &FF, &81, &83, &7F, &81, &81, &BF, &81
	9E00 DEFB &C0, &00, &03, &80, &00, &01, &80, &00, &01, &80, &00, &01, &40, &00, &02, &40
	9E10 DEFB &00, &02, &70, &00, &0E, &BC, &00, &3D, &0F, &00, &F0, &03, &C3, &C0, &80, &FF
	9E20 DEFB &01, &C0, &3C, &03, &F0, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C3, &FF
	;;	........................	@@@@@@@@@......@@@@@@@@@
	;;	.........@@@@@@.........	@@@@@@@...........@@@@@@
	;;	.......@@.@@@@@@@@......	@@@@.@.@@...........@@@@
	;;	....@.@@@@..@@@@@@@@....	@@@...@@@@...........@@@
	;;	...@@.@.@@@@.....@@@@...	@@....@.@@@@..........@@
	;;	..@@@.@.@@@@@@@@@.@@@@..	@.....@.@@@@@@@@@......@
	;;	..@@@.@@.@@@@@@@@.@@@@..	@.....@@.@@@@@@@@......@
	;;	..@@@@.@@.@@@@@@@.@@@@..	@......@@.@@@@@@@......@
	;;	...@@@............@@@...	@@....................@@
	;;	..@.@@@@@@@@@@@@@@@@.@..	@......................@
	;;	..@@..@@@@@@@@@@@@..@@..	@......................@
	;;	..@@@@...@@@@@@...@@@@..	@......................@
	;;	.@.@@@@@@......@@@@@@.@.	.@....................@.
	;;	.@..@@@@@@@@@@@@@@@@..@.	.@....................@.
	;;	.@@@..@@@@@@@@@@@@..@@@.	.@@@................@@@.
	;;	..@@@@...@@@@@@...@@@@..	@.@@@@............@@@@.@
	;;	.@..@@@@........@@@@..@.	....@@@@........@@@@....
	;;	.@@@..@@@@....@@@@..@@@.	......@@@@....@@@@......
	;;	..@@@@..@@@@@@@@..@@@@..	@.......@@@@@@@@.......@
	;;	....@@@@..@@@@..@@@@....	@@........@@@@........@@
	;;	......@@@@....@@@@......	@@@@................@@@@
	;;	........@@@@@@@@........	@@@@@@............@@@@@@
	;;	..........@@@@..........	@@@@@@@@........@@@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@

		;; SPR_KETTLE EQU &42
	9E30 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &3C, &00, &00, &76, &00, &18, &E2, &00
	9E40 DEFB &BD, &26, &03, &CB, &C2, &05, &D3, &A6, &3B, &E7, &AC, &5D, &3C, &68, &3E, &C3
	9E50 DEFB &90, &0F, &3C, &50, &07, &43, &60, &0F, &9B, &E0, &0F, &BF, &F0, &0F, &BF, &F0
	9E60 DEFB &17, &BF, &F8, &11, &7F, &E8, &16, &FF, &68, &08, &DB, &10, &06, &18, &60, &01
	9E70 DEFB &C3, &80, &00, &3C, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &C3, &FF, &FF
	9E80 DEFB &81, &FF, &E7, &00, &FF, &00, &00, &FC, &81, &00, &FB, &C3, &D0, &C5, &C3, &A0
	9E90 DEFB &83, &E7, &A1, &01, &3C, &63, &80, &C3, &97, &C0, &3C, &57, &E0, &43, &6F, &E0
	9EA0 DEFB &1B, &EF, &E0, &3F, &F7, &E0, &3F, &F7, &D0, &3F, &FB, &D0, &7F, &EB, &D6, &FF
	9EB0 DEFB &6B, &E8, &DB, &17, &F6, &18, &6F, &F9, &C3, &9F, &FE, &3C, &7F, &FF, &C3, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@....@@
	;;	..................@@@@..	@@@@@@@@@@@@@@@@@......@
	;;	.................@@@.@@.	@@@@@@@@@@@..@@@........
	;;	...........@@...@@@...@.	@@@@@@@@................
	;;	........@.@@@@.@..@..@@.	@@@@@@..@......@........
	;;	......@@@@..@.@@@@....@.	@@@@@.@@@@....@@@@.@....
	;;	.....@.@@@.@..@@@.@..@@.	@@...@.@@@....@@@.@.....
	;;	..@@@.@@@@@..@@@@.@.@@..	@.....@@@@@..@@@@.@....@
	;;	.@.@@@.@..@@@@...@@.@...	.......@..@@@@...@@...@@
	;;	..@@@@@.@@....@@@..@....	@.......@@....@@@..@.@@@
	;;	....@@@@..@@@@...@.@....	@@........@@@@...@.@.@@@
	;;	.....@@@.@....@@.@@.....	@@@......@....@@.@@.@@@@
	;;	....@@@@@..@@.@@@@@.....	@@@........@@.@@@@@.@@@@
	;;	....@@@@@.@@@@@@@@@@....	@@@.......@@@@@@@@@@.@@@
	;;	....@@@@@.@@@@@@@@@@....	@@@.......@@@@@@@@@@.@@@
	;;	...@.@@@@.@@@@@@@@@@@...	@@.@......@@@@@@@@@@@.@@
	;;	...@...@.@@@@@@@@@@.@...	@@.@.....@@@@@@@@@@.@.@@
	;;	...@.@@.@@@@@@@@.@@.@...	@@.@.@@.@@@@@@@@.@@.@.@@
	;;	....@...@@.@@.@@...@....	@@@.@...@@.@@.@@...@.@@@
	;;	.....@@....@@....@@.....	@@@@.@@....@@....@@.@@@@
	;;	.......@@@....@@@.......	@@@@@..@@@....@@@..@@@@@
	;;	..........@@@@..........	@@@@@@@...@@@@...@@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@

		;; SPR_SUGARBOX EQU &43
	9EC0 DEFB &00, &00, &00, &00, &3C, &00, &01, &E7, &80, &07, &DB, &E0, &1F, &BD, &F8, &2F
	9ED0 DEFB &A5, &F4, &2F, &DB, &F4, &37, &E7, &EC, &19, &FF, &98, &2E, &3C, &72, &35, &C3
	9EE0 DEFB &CA, &36, &7E, &3A, &3B, &01, &F6, &7D, &8F, &EC, &6E, &E7, &9C, &7F, &38, &72
	9EF0 DEFB &5F, &CF, &CA, &57, &F0, &2A, &26, &FF, &64, &10, &DB, &08, &0E, &18, &70, &03
	9F00 DEFB &C3, &C0, &00, &7E, &00, &00, &00, &00, &FF, &C3, &FF, &FE, &3C, &7F, &F9, &E7
	9F10 DEFB &9F, &E7, &C3, &E7, &DF, &81, &FB, &AF, &81, &F5, &AF, &C3, &F5, &B7, &E7, &ED
	9F20 DEFB &D9, &FF, &99, &A2, &3C, &70, &B1, &C3, &C8, &B0, &7E, &38, &B8, &01, &F0, &7C
	9F30 DEFB &0F, &E1, &6E, &07, &81, &7F, &00, &02, &5F, &C0, &0A, &57, &F0, &2A, &A6, &FF
	9F40 DEFB &65, &D0, &DB, &0B, &EE, &18, &77, &F3, &C3, &CF, &FC, &7E, &3F, &FF, &81, &FF
	;;	........................	@@@@@@@@@@....@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@...@@@@...@@@@@@@
	;;	.......@@@@..@@@@.......	@@@@@..@@@@..@@@@..@@@@@
	;;	.....@@@@@.@@.@@@@@.....	@@@..@@@@@....@@@@@..@@@
	;;	...@@@@@@.@@@@.@@@@@@...	@@.@@@@@@......@@@@@@.@@
	;;	..@.@@@@@.@..@.@@@@@.@..	@.@.@@@@@......@@@@@.@.@
	;;	..@.@@@@@@.@@.@@@@@@.@..	@.@.@@@@@@....@@@@@@.@.@
	;;	..@@.@@@@@@..@@@@@@.@@..	@.@@.@@@@@@..@@@@@@.@@.@
	;;	...@@..@@@@@@@@@@..@@...	@@.@@..@@@@@@@@@@..@@..@
	;;	..@.@@@...@@@@...@@@..@.	@.@...@...@@@@...@@@....
	;;	..@@.@.@@@....@@@@..@.@.	@.@@...@@@....@@@@..@...
	;;	..@@.@@..@@@@@@...@@@.@.	@.@@.....@@@@@@...@@@...
	;;	..@@@.@@.......@@@@@.@@.	@.@@@..........@@@@@....
	;;	.@@@@@.@@...@@@@@@@.@@..	.@@@@@......@@@@@@@....@
	;;	.@@.@@@.@@@..@@@@..@@@..	.@@.@@@......@@@@......@
	;;	.@@@@@@@..@@@....@@@..@.	.@@@@@@@..............@.
	;;	.@.@@@@@@@..@@@@@@..@.@.	.@.@@@@@@@..........@.@.
	;;	.@.@.@@@@@@@......@.@.@.	.@.@.@@@@@@@......@.@.@.
	;;	..@..@@.@@@@@@@@.@@..@..	@.@..@@.@@@@@@@@.@@..@.@
	;;	...@....@@.@@.@@....@...	@@.@....@@.@@.@@....@.@@
	;;	....@@@....@@....@@@....	@@@.@@@....@@....@@@.@@@
	;;	......@@@@....@@@@......	@@@@..@@@@....@@@@..@@@@
	;;	.........@@@@@@.........	@@@@@@...@@@@@@...@@@@@@
	;;	........................	@@@@@@@@@......@@@@@@@@@

		;; SPR_BATCRAFT_FINS EQU &44
	9F50 DEFB &00, &00, &00, &00, &60, &00, &00, &70, &00, &00, &38, &00, &00, &3C, &40, &00
	9F60 DEFB &3E, &C0, &00, &1F, &40, &00, &1F, &40, &00, &27, &80, &00, &78, &80, &01, &FF
	9F70 DEFB &40, &00, &00, &C0, &00, &0F, &C0, &00, &0F, &E0, &00, &0F, &E0, &00, &0D, &E0
	9F80 DEFB &00, &09, &70, &00, &0C, &70, &00, &0E, &B0, &00, &07, &F0, &00, &07, &F0, &00
	9F90 DEFB &01, &F0, &00, &00, &60, &00, &00, &00, &FF, &9F, &FF, &FF, &0F, &FF, &FF, &07
	9FA0 DEFB &FF, &FF, &83, &BF, &FF, &81, &5F, &FF, &80, &DF, &FF, &C0, &5F, &FF, &C0, &5F
	9FB0 DEFB &FF, &A0, &3F, &FE, &78, &3F, &FD, &FF, &1F, &FE, &00, &1F, &FF, &E0, &1F, &FF
	9FC0 DEFB &E0, &0F, &FF, &E7, &0F, &FF, &ED, &CF, &FF, &E9, &47, &FF, &EC, &67, &FF, &E6
	9FD0 DEFB &A7, &FF, &F3, &C7, &FF, &F0, &07, &FF, &F8, &07, &FF, &FE, &0F, &FF, &FF, &9F
	;;	........................	@@@@@@@@@..@@@@@@@@@@@@@
	;;	.........@@.............	@@@@@@@@....@@@@@@@@@@@@
	;;	.........@@@............	@@@@@@@@.....@@@@@@@@@@@
	;;	..........@@@...........	@@@@@@@@@.....@@@.@@@@@@
	;;	..........@@@@...@......	@@@@@@@@@......@.@.@@@@@
	;;	..........@@@@@.@@......	@@@@@@@@@.......@@.@@@@@
	;;	...........@@@@@.@......	@@@@@@@@@@.......@.@@@@@
	;;	...........@@@@@.@......	@@@@@@@@@@.......@.@@@@@
	;;	..........@..@@@@.......	@@@@@@@@@.@.......@@@@@@
	;;	.........@@@@...@.......	@@@@@@@..@@@@.....@@@@@@
	;;	.......@@@@@@@@@.@......	@@@@@@.@@@@@@@@@...@@@@@
	;;	................@@......	@@@@@@@............@@@@@
	;;	............@@@@@@......	@@@@@@@@@@@........@@@@@
	;;	............@@@@@@@.....	@@@@@@@@@@@.........@@@@
	;;	............@@@@@@@.....	@@@@@@@@@@@..@@@....@@@@
	;;	............@@.@@@@.....	@@@@@@@@@@@.@@.@@@..@@@@
	;;	............@..@.@@@....	@@@@@@@@@@@.@..@.@...@@@
	;;	............@@...@@@....	@@@@@@@@@@@.@@...@@..@@@
	;;	............@@@.@.@@....	@@@@@@@@@@@..@@.@.@..@@@
	;;	.............@@@@@@@....	@@@@@@@@@@@@..@@@@...@@@
	;;	.............@@@@@@@....	@@@@@@@@@@@@.........@@@
	;;	...............@@@@@....	@@@@@@@@@@@@@........@@@
	;;	.................@@.....	@@@@@@@@@@@@@@@.....@@@@
	;;	........................	@@@@@@@@@@@@@@@@@..@@@@@

		;; SPR_QBALL EQU &45
	9FE0 DEFB &00, &00, &00, &00, &7E, &00, &01, &81, &80, &06, &00, &60, &08, &1F, &10, &10
	9FF0 DEFB &71, &C8, &10, &E0, &E8, &20, &CE, &64, &21, &C6, &74, &41, &E6, &72, &41, &FC
	A000 DEFB &F2, &41, &F9, &F2, &40, &F9, &E2, &40, &FF, &E2, &40, &79, &C2, &20, &1F, &04
	A010 DEFB &24, &00, &04, &10, &00, &08, &13, &00, &08, &09, &C0, &10, &06, &00, &60, &01
	A020 DEFB &81, &80, &00, &7E, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &81, &FF, &FE, &00
	A030 DEFB &7F, &F8, &00, &1F, &F0, &1F, &0F, &E0, &71, &C7, &E0, &E0, &E7, &C0, &CE, &63
	A040 DEFB &C1, &C6, &73, &81, &E6, &71, &81, &FC, &F1, &81, &F9, &F1, &80, &F9, &E1, &80
	A050 DEFB &FF, &E1, &80, &79, &C1, &C0, &1F, &03, &C0, &00, &03, &E0, &00, &07, &E0, &00
	A060 DEFB &07, &F0, &00, &0F, &F8, &00, &1F, &FE, &00, &7F, &FF, &81, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.........@@@@@@.........	@@@@@@@@@......@@@@@@@@@
	;;	.......@@......@@.......	@@@@@@@..........@@@@@@@
	;;	.....@@..........@@.....	@@@@@..............@@@@@
	;;	....@......@@@@@...@....	@@@@.......@@@@@....@@@@
	;;	...@.....@@@...@@@..@...	@@@......@@@...@@@...@@@
	;;	...@....@@@.....@@@.@...	@@@.....@@@.....@@@..@@@
	;;	..@.....@@..@@@..@@..@..	@@......@@..@@@..@@...@@
	;;	..@....@@@...@@..@@@.@..	@@.....@@@...@@..@@@..@@
	;;	.@.....@@@@..@@..@@@..@.	@......@@@@..@@..@@@...@
	;;	.@.....@@@@@@@..@@@@..@.	@......@@@@@@@..@@@@...@
	;;	.@.....@@@@@@..@@@@@..@.	@......@@@@@@..@@@@@...@
	;;	.@......@@@@@..@@@@...@.	@.......@@@@@..@@@@....@
	;;	.@......@@@@@@@@@@@...@.	@.......@@@@@@@@@@@....@
	;;	.@.......@@@@..@@@....@.	@........@@@@..@@@.....@
	;;	..@........@@@@@.....@..	@@.........@@@@@......@@
	;;	..@..@...............@..	@@....................@@
	;;	...@................@...	@@@..................@@@
	;;	...@..@@............@...	@@@..................@@@
	;;	....@..@@@.........@....	@@@@................@@@@
	;;	.....@@..........@@.....	@@@@@..............@@@@@
	;;	.......@@......@@.......	@@@@@@@..........@@@@@@@
	;;	.........@@@@@@.........	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_SALT EQU &46
	A070 DEFB &00, &00, &00, &00, &FF, &00, &03, &81, &C0, &06, &6C, &60, &0E, &12, &70, &0A
	A080 DEFB &00, &50, &17, &81, &E8, &17, &FF, &E8, &28, &BD, &14, &27, &00, &E4, &20, &FF
	A090 DEFB &14, &47, &00, &1A, &57, &0F, &1A, &99, &0F, &65, &B8, &F0, &E5, &58, &F0, &E2
	A0A0 DEFB &60, &F0, &E6, &78, &F0, &1E, &7F, &00, &FE, &3F, &FF, &FC, &1F, &FF, &F8, &07
	A0B0 DEFB &FF, &E0, &00, &FF, &00, &00, &00, &00, &FF, &00, &FF, &FC, &FF, &3F, &FB, &81
	A0C0 DEFB &DF, &F6, &00, &6F, &EE, &00, &77, &EA, &00, &57, &C7, &81, &E3, &C7, &FF, &E3
	A0D0 DEFB &A0, &BD, &05, &A0, &00, &05, &A0, &00, &15, &47, &00, &1A, &57, &0F, &1A, &99
	A0E0 DEFB &0F, &65, &B8, &F0, &E5, &18, &F0, &E0, &00, &F0, &E0, &00, &F0, &00, &00, &00
	A0F0 DEFB &00, &80, &00, &01, &C0, &00, &03, &E0, &00, &07, &F8, &00, &1F, &FF, &00, &FF
	;;	........................	@@@@@@@@........@@@@@@@@
	;;	........@@@@@@@@........	@@@@@@..@@@@@@@@..@@@@@@
	;;	......@@@......@@@......	@@@@@.@@@......@@@.@@@@@
	;;	.....@@..@@.@@...@@.....	@@@@.@@..........@@.@@@@
	;;	....@@@....@..@..@@@....	@@@.@@@..........@@@.@@@
	;;	....@.@..........@.@....	@@@.@.@..........@.@.@@@
	;;	...@.@@@@......@@@@.@...	@@...@@@@......@@@@...@@
	;;	...@.@@@@@@@@@@@@@@.@...	@@...@@@@@@@@@@@@@@...@@
	;;	..@.@...@.@@@@.@...@.@..	@.@.....@.@@@@.@.....@.@
	;;	..@..@@@........@@@..@..	@.@..................@.@
	;;	..@.....@@@@@@@@...@.@..	@.@................@.@.@
	;;	.@...@@@...........@@.@.	.@...@@@...........@@.@.
	;;	.@.@.@@@....@@@@...@@.@.	.@.@.@@@....@@@@...@@.@.
	;;	@..@@..@....@@@@.@@..@.@	@..@@..@....@@@@.@@..@.@
	;;	@.@@@...@@@@....@@@..@.@	@.@@@...@@@@....@@@..@.@
	;;	.@.@@...@@@@....@@@...@.	...@@...@@@@....@@@.....
	;;	.@@.....@@@@....@@@..@@.	........@@@@....@@@.....
	;;	.@@@@...@@@@.......@@@@.	........@@@@............
	;;	.@@@@@@@........@@@@@@@.	........................
	;;	..@@@@@@@@@@@@@@@@@@@@..	@......................@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	.....@@@@@@@@@@@@@@.....	@@@..................@@@
	;;	........@@@@@@@@........	@@@@@..............@@@@@
	;;	........................	@@@@@@@@........@@@@@@@@

		;; SPR_PILLAR EQU &47
	A100 DEFB &00, &00, &00, &00, &00, &00, &00, &FF, &00, &07, &00, &E0, &18, &6D, &18, &36
	A110 DEFB &DB, &6C, &2D, &B6, &D4, &33, &6D, &AC, &18, &DB, &18, &27, &00, &E4, &28, &FF
	A120 DEFB &14, &2E, &00, &B4, &2E, &F7, &B4, &2E, &F7, &B4, &2E, &F7, &B4, &2E, &F7, &B4
	A130 DEFB &2E, &F7, &B4, &2E, &F7, &B4, &2E, &F7, &B4, &0E, &F7, &B0, &06, &F7, &A0, &00
	A140 DEFB &F7, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &00, &FF, &F8, &FF
	A150 DEFB &1F, &E7, &00, &E7, &D8, &24, &1B, &B2, &49, &2D, &A4, &92, &45, &B1, &24, &8D
	A160 DEFB &D8, &49, &1B, &A7, &00, &E5, &A8, &FF, &15, &AE, &00, &B5, &AE, &F7, &B5, &AE
	A170 DEFB &F7, &B5, &AE, &F7, &B5, &AE, &F7, &B5, &AE, &F7, &B5, &AE, &F7, &B5, &AE, &F7
	A180 DEFB &B5, &CE, &F7, &B3, &F6, &F7, &AF, &F8, &F7, &1F, &FF, &08, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@........@@@@@@@@
	;;	........@@@@@@@@........	@@@@@...@@@@@@@@...@@@@@
	;;	.....@@@........@@@.....	@@@..@@@........@@@..@@@
	;;	...@@....@@.@@.@...@@...	@@.@@.....@..@.....@@.@@
	;;	..@@.@@.@@.@@.@@.@@.@@..	@.@@..@..@..@..@..@.@@.@
	;;	..@.@@.@@.@@.@@.@@.@.@..	@.@..@..@..@..@..@...@.@
	;;	..@@..@@.@@.@@.@@.@.@@..	@.@@...@..@..@..@...@@.@
	;;	...@@...@@.@@.@@...@@...	@@.@@....@..@..@...@@.@@
	;;	..@..@@@........@@@..@..	@.@..@@@........@@@..@.@
	;;	..@.@...@@@@@@@@...@.@..	@.@.@...@@@@@@@@...@.@.@
	;;	..@.@@@.........@.@@.@..	@.@.@@@.........@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	..@.@@@.@@@@.@@@@.@@.@..	@.@.@@@.@@@@.@@@@.@@.@.@
	;;	....@@@.@@@@.@@@@.@@....	@@..@@@.@@@@.@@@@.@@..@@
	;;	.....@@.@@@@.@@@@.@.....	@@@@.@@.@@@@.@@@@.@.@@@@
	;;	........@@@@.@@@........	@@@@@...@@@@.@@@...@@@@@
	;;	........................	@@@@@@@@....@...@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_BUNDLE EQU &48
	A190 DEFB &00, &00, &00, &00, &18, &00, &00, &24, &00, &09, &B5, &90, &1E, &99, &78, &04
	A1A0 DEFB &3C, &20, &12, &99, &48, &2D, &A5, &B4, &13, &3C, &C8, &35, &7E, &AC, &2E, &5E
	A1B0 DEFB &74, &4E, &FF, &72, &54, &7F, &2A, &54, &FF, &AA, &5A, &FF, &DA, &56, &FF, &EA
	A1C0 DEFB &2F, &FE, &F4, &1F, &FF, &F8, &0F, &BF, &F0, &03, &E7, &C0, &00, &7E, &00, &00
	A1D0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &E7, &FF, &FF, &C3, &FF, &F6, &00
	A1E0 DEFB &6F, &E9, &81, &97, &DE, &81, &7B, &E4, &00, &27, &D2, &81, &4B, &AD, &81, &B5
	A1F0 DEFB &D3, &00, &CB, &B5, &00, &AD, &AE, &00, &75, &4E, &00, &72, &54, &00, &2A, &54
	A200 DEFB &00, &2A, &58, &00, &1A, &50, &00, &0A, &A0, &00, &05, &C0, &00, &03, &E0, &00
	A210 DEFB &07, &F0, &00, &0F, &FC, &00, &3F, &FF, &81, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@..@@@@@@@@@@@
	;;	...........@@...........	@@@@@@@@@@....@@@@@@@@@@
	;;	..........@..@..........	@@@@.@@..........@@.@@@@
	;;	....@..@@.@@.@.@@..@....	@@@.@..@@......@@..@.@@@
	;;	...@@@@.@..@@..@.@@@@...	@@.@@@@.@......@.@@@@.@@
	;;	.....@....@@@@....@.....	@@@..@............@..@@@
	;;	...@..@.@..@@..@.@..@...	@@.@..@.@......@.@..@.@@
	;;	..@.@@.@@.@..@.@@.@@.@..	@.@.@@.@@......@@.@@.@.@
	;;	...@..@@..@@@@..@@..@...	@@.@..@@........@@..@.@@
	;;	..@@.@.@.@@@@@@.@.@.@@..	@.@@.@.@........@.@.@@.@
	;;	..@.@@@..@.@@@@..@@@.@..	@.@.@@@..........@@@.@.@
	;;	.@..@@@.@@@@@@@@.@@@..@.	.@..@@@..........@@@..@.
	;;	.@.@.@...@@@@@@@..@.@.@.	.@.@.@............@.@.@.
	;;	.@.@.@..@@@@@@@@@.@.@.@.	.@.@.@............@.@.@.
	;;	.@.@@.@.@@@@@@@@@@.@@.@.	.@.@@..............@@.@.
	;;	.@.@.@@.@@@@@@@@@@@.@.@.	.@.@................@.@.
	;;	..@.@@@@@@@@@@@.@@@@.@..	@.@..................@.@
	;;	...@@@@@@@@@@@@@@@@@@...	@@....................@@
	;;	....@@@@@.@@@@@@@@@@....	@@@..................@@@
	;;	......@@@@@..@@@@@......	@@@@................@@@@
	;;	.........@@@@@@.........	@@@@@@............@@@@@@
	;;	........................	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_BEACON EQU &49
	A220 DEFB &00, &00, &00, &00, &00, &00, &00, &3C, &00, &01, &E7, &80, &07, &7E, &E0, &0B
	A230 DEFB &C3, &D0, &16, &99, &68, &17, &C3, &E8, &2B, &7E, &C4, &29, &DB, &A4, &18, &7E
	A240 DEFB &68, &18, &80, &E8, &0C, &F0, &F0, &23, &F1, &C4, &20, &7E, &14, &57, &00, &1A
	A250 DEFB &37, &0F, &14, &3B, &0F, &24, &10, &F0, &E8, &0C, &F0, &F0, &03, &F1, &C0, &00
	A260 DEFB &7E, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &C3, &FF, &FE, &3C
	A270 DEFB &7F, &F9, &E7, &9F, &F7, &7E, &EF, &EB, &C3, &D7, &D6, &81, &6B, &D7, &C3, &EB
	A280 DEFB &AB, &7E, &C5, &A9, &DB, &A5, &D8, &7E, &6B, &D8, &80, &EB, &CC, &F0, &F3, &83
	A290 DEFB &F1, &C1, &80, &7E, &01, &00, &00, &00, &80, &00, &01, &80, &00, &01, &C0, &00
	A2A0 DEFB &03, &E0, &00, &07, &F0, &00, &0F, &FC, &00, &3F, &FF, &81, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@...@@@@...@@@@@@@
	;;	.......@@@@..@@@@.......	@@@@@..@@@@..@@@@..@@@@@
	;;	.....@@@.@@@@@@.@@@.....	@@@@.@@@.@@@@@@.@@@.@@@@
	;;	....@.@@@@....@@@@.@....	@@@.@.@@@@....@@@@.@.@@@
	;;	...@.@@.@..@@..@.@@.@...	@@.@.@@.@......@.@@.@.@@
	;;	...@.@@@@@....@@@@@.@...	@@.@.@@@@@....@@@@@.@.@@
	;;	..@.@.@@.@@@@@@.@@...@..	@.@.@.@@.@@@@@@.@@...@.@
	;;	..@.@..@@@.@@.@@@.@..@..	@.@.@..@@@.@@.@@@.@..@.@
	;;	...@@....@@@@@@..@@.@...	@@.@@....@@@@@@..@@.@.@@
	;;	...@@...@.......@@@.@...	@@.@@...@.......@@@.@.@@
	;;	....@@..@@@@....@@@@....	@@..@@..@@@@....@@@@..@@
	;;	..@...@@@@@@...@@@...@..	@.....@@@@@@...@@@.....@
	;;	..@......@@@@@@....@.@..	@........@@@@@@........@
	;;	.@.@.@@@...........@@.@.	........................
	;;	..@@.@@@....@@@@...@.@..	@......................@
	;;	..@@@.@@....@@@@..@..@..	@......................@
	;;	...@....@@@@....@@@.@...	@@....................@@
	;;	....@@..@@@@....@@@@....	@@@..................@@@
	;;	......@@@@@@...@@@......	@@@@................@@@@
	;;	.........@@@@@@.........	@@@@@@............@@@@@@
	;;	........................	@@@@@@@@@......@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_BUBBLE EQU &4A
	A2B0 DEFB &00, &00, &00, &00, &7E, &00, &01, &81, &80, &06, &00, &60, &08, &80, &10, &12
	A2C0 DEFB &00, &08, &16, &00, &08, &24, &00, &04, &20, &00, &04, &40, &00, &02, &40, &00
	A2D0 DEFB &02, &40, &00, &02, &40, &00, &02, &40, &00, &02, &40, &00, &02, &20, &00, &04
	A2E0 DEFB &20, &00, &04, &10, &00, &08, &10, &00, &08, &08, &00, &10, &06, &00, &60, &01
	A2F0 DEFB &81, &80, &00, &7E, &00, &00, &00, &00, &FF, &81, &FF, &FE, &00, &7F, &F8, &00
	A300 DEFB &1F, &F0, &7E, &0F, &E0, &BF, &87, &C2, &7F, &E3, &C6, &FF, &E3, &85, &FF, &F1
	A310 DEFB &8B, &FF, &F1, &1F, &FF, &F8, &1F, &FF, &F8, &1F, &FF, &F8, &1F, &FF, &F8, &1F
	A320 DEFB &FF, &F8, &1F, &FF, &F8, &8F, &FF, &F1, &8F, &FF, &F1, &C7, &FF, &E3, &C7, &FF
	A330 DEFB &E3, &E1, &FF, &87, &F0, &7E, &0F, &F8, &00, &1F, &FE, &00, &7F, &FF, &81, &FF
	;;	........................	@@@@@@@@@......@@@@@@@@@
	;;	.........@@@@@@.........	@@@@@@@..........@@@@@@@
	;;	.......@@......@@.......	@@@@@..............@@@@@
	;;	.....@@..........@@.....	@@@@.....@@@@@@.....@@@@
	;;	....@...@..........@....	@@@.....@.@@@@@@@....@@@
	;;	...@..@.............@...	@@....@..@@@@@@@@@@...@@
	;;	...@.@@.............@...	@@...@@.@@@@@@@@@@@...@@
	;;	..@..@...............@..	@....@.@@@@@@@@@@@@@...@
	;;	..@..................@..	@...@.@@@@@@@@@@@@@@...@
	;;	.@....................@.	...@@@@@@@@@@@@@@@@@@...
	;;	.@....................@.	...@@@@@@@@@@@@@@@@@@...
	;;	.@....................@.	...@@@@@@@@@@@@@@@@@@...
	;;	.@....................@.	...@@@@@@@@@@@@@@@@@@...
	;;	.@....................@.	...@@@@@@@@@@@@@@@@@@...
	;;	.@....................@.	...@@@@@@@@@@@@@@@@@@...
	;;	..@..................@..	@...@@@@@@@@@@@@@@@@...@
	;;	..@..................@..	@...@@@@@@@@@@@@@@@@...@
	;;	...@................@...	@@...@@@@@@@@@@@@@@...@@
	;;	...@................@...	@@...@@@@@@@@@@@@@@...@@
	;;	....@..............@....	@@@....@@@@@@@@@@....@@@
	;;	.....@@..........@@.....	@@@@.....@@@@@@.....@@@@
	;;	.......@@......@@.......	@@@@@..............@@@@@
	;;	.........@@@@@@.........	@@@@@@@..........@@@@@@@
	;;	........................	@@@@@@@@@......@@@@@@@@@

		;; SPR_BATCRAFT_RBLF EQU &4B
	A340 DEFB &00, &18, &00, &00, &66, &00, &01, &81, &80, &03, &00, &60, &07, &00, &18, &08
	A350 DEFB &00, &06, &16, &00, &02, &1E, &00, &02, &3F, &00, &0E, &3C, &00, &32, &3B, &80
	A360 DEFB &CA, &57, &C3, &3A, &4F, &D6, &CA, &6F, &BD, &EA, &33, &BD, &92, &3C, &79, &B2
	A370 DEFB &1F, &3A, &62, &1D, &C7, &92, &0C, &F7, &CC, &07, &FB, &30, &03, &FC, &C0, &00
	A380 DEFB &FF, &00, &00, &38, &00, &00, &00, &00, &FF, &9F, &FF, &FE, &67, &FF, &FD, &81
	A390 DEFB &FF, &FB, &00, &7F, &F7, &00, &1F, &E8, &00, &07, &D6, &00, &02, &DE, &00, &02
	A3A0 DEFB &BF, &00, &0E, &BC, &00, &30, &BB, &80, &C8, &17, &C3, &38, &0F, &D6, &08, &0F
	A3B0 DEFB &BC, &08, &83, &BC, &00, &80, &78, &00, &C0, &3A, &00, &C0, &07, &90, &E0, &07
	A3C0 DEFB &C1, &F0, &03, &03, &F8, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C7, &FF
	;;	...........@@...........	@@@@@@@@@..@@@@@@@@@@@@@
	;;	.........@@..@@.........	@@@@@@@..@@..@@@@@@@@@@@
	;;	.......@@......@@.......	@@@@@@.@@......@@@@@@@@@
	;;	......@@.........@@.....	@@@@@.@@.........@@@@@@@
	;;	.....@@@...........@@...	@@@@.@@@...........@@@@@
	;;	....@................@@.	@@@.@................@@@
	;;	...@.@@...............@.	@@.@.@@...............@.
	;;	...@@@@...............@.	@@.@@@@...............@.
	;;	..@@@@@@............@@@.	@.@@@@@@............@@@.
	;;	..@@@@............@@..@.	@.@@@@............@@....
	;;	..@@@.@@@.......@@..@.@.	@.@@@.@@@.......@@..@...
	;;	.@.@.@@@@@....@@..@@@.@.	...@.@@@@@....@@..@@@...
	;;	.@..@@@@@@.@.@@.@@..@.@.	....@@@@@@.@.@@.....@...
	;;	.@@.@@@@@.@@@@.@@@@.@.@.	....@@@@@.@@@@......@...
	;;	..@@..@@@.@@@@.@@..@..@.	@.....@@@.@@@@..........
	;;	..@@@@...@@@@..@@.@@..@.	@........@@@@...........
	;;	...@@@@@..@@@.@..@@...@.	@@........@@@.@.........
	;;	...@@@.@@@...@@@@..@..@.	@@...........@@@@..@....
	;;	....@@..@@@@.@@@@@..@@..	@@@..........@@@@@.....@
	;;	.....@@@@@@@@.@@..@@....	@@@@..........@@......@@
	;;	......@@@@@@@@..@@......	@@@@@...............@@@@
	;;	........@@@@@@@@........	@@@@@@............@@@@@@
	;;	..........@@@...........	@@@@@@@@........@@@@@@@@
	;;	........................	@@@@@@@@@@...@@@@@@@@@@@

		;; SPR_BATCRAFT_RFNT EQU &4C
	A3D0 DEFB &00, &00, &00, &00, &3C, &00, &00, &C3, &00, &03, &00, &C0, &0C, &00, &30, &30
	A3E0 DEFB &00, &0C, &40, &00, &02, &40, &00, &02, &38, &00, &1C, &77, &00, &EE, &6F, &BD
	A3F0 DEFB &F6, &6F, &7E, &F6, &1F, &7E, &F8, &47, &7E, &E2, &78, &FF, &1E, &7F, &00, &FE
	A400 DEFB &79, &FF, &9E, &3D, &FF, &BC, &0F, &FF, &F0, &00, &FF, &00, &00, &00, &00, &00
	A410 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &C3
	A420 DEFB &FF, &FF, &00, &FF, &FC, &00, &3F, &F0, &00, &0F, &C0, &00, &03, &C0, &00, &03
	A430 DEFB &B8, &00, &1D, &77, &00, &EE, &6F, &BD, &F6, &6F, &7E, &F6, &9F, &7E, &F9, &07
	A440 DEFB &7E, &E0, &00, &FF, &00, &00, &00, &00, &00, &00, &00, &80, &00, &01, &C0, &00
	A450 DEFB &03, &F0, &00, &0F, &FF, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	..........@@@@..........	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........@@....@@........	@@@@@@@@@@....@@@@@@@@@@
	;;	......@@........@@......	@@@@@@@@........@@@@@@@@
	;;	....@@............@@....	@@@@@@............@@@@@@
	;;	..@@................@@..	@@@@................@@@@
	;;	.@....................@.	@@....................@@
	;;	.@....................@.	@@....................@@
	;;	..@@@..............@@@..	@.@@@..............@@@.@
	;;	.@@@.@@@........@@@.@@@.	.@@@.@@@........@@@.@@@.
	;;	.@@.@@@@@.@@@@.@@@@@.@@.	.@@.@@@@@.@@@@.@@@@@.@@.
	;;	.@@.@@@@.@@@@@@.@@@@.@@.	.@@.@@@@.@@@@@@.@@@@.@@.
	;;	...@@@@@.@@@@@@.@@@@@...	@..@@@@@.@@@@@@.@@@@@..@
	;;	.@...@@@.@@@@@@.@@@...@.	.....@@@.@@@@@@.@@@.....
	;;	.@@@@...@@@@@@@@...@@@@.	........@@@@@@@@........
	;;	.@@@@@@@........@@@@@@@.	........................
	;;	.@@@@..@@@@@@@@@@..@@@@.	........................
	;;	..@@@@.@@@@@@@@@@.@@@@..	@......................@
	;;	....@@@@@@@@@@@@@@@@....	@@....................@@
	;;	........@@@@@@@@........	@@@@................@@@@
	;;	........................	@@@@@@@@........@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

		;; SPR_BATCRAFT_LBCK EQU &4D
	A460 DEFB &00, &00, &00, &00, &00, &00, &00, &FF, &00, &07, &00, &E0, &38, &00, &1C, &40
	A470 DEFB &00, &02, &40, &00, &02, &30, &00, &0C, &4C, &00, &32, &53, &00, &CA, &58, &C3
	A480 DEFB &1A, &43, &3C, &C2, &4F, &DB, &F2, &53, &DB, &CA, &5B, &18, &DA, &6C, &5A, &36
	A490 DEFB &61, &DB, &86, &37, &DB, &EC, &1B, &DB, &D8, &0C, &DB, &30, &03, &18, &C0, &00
	A4A0 DEFB &DB, &00, &00, &3C, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	A4B0 DEFB &FF, &FF, &00, &FF, &F8, &00, &1F, &C0, &00, &03, &40, &00, &02, &B0, &00, &0D
	A4C0 DEFB &4C, &00, &32, &53, &00, &CA, &58, &C3, &1A, &00, &3C, &00, &00, &18, &00, &00
	A4D0 DEFB &00, &00, &00, &00, &00, &00, &42, &00, &01, &C3, &80, &87, &C3, &E1, &C3, &C3
	A4E0 DEFB &C3, &E0, &C3, &07, &F0, &00, &0F, &FC, &00, &3F, &FF, &00, &FF, &FF, &C3, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........@@@@@@@@........	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	.....@@@........@@@.....	@@@@@@@@........@@@@@@@@
	;;	..@@@..............@@@..	@@@@@..............@@@@@
	;;	.@....................@.	@@....................@@
	;;	.@....................@.	.@....................@.
	;;	..@@................@@..	@.@@................@@.@
	;;	.@..@@............@@..@.	.@..@@............@@..@.
	;;	.@.@..@@........@@..@.@.	.@.@..@@........@@..@.@.
	;;	.@.@@...@@....@@...@@.@.	.@.@@...@@....@@...@@.@.
	;;	.@....@@..@@@@..@@....@.	..........@@@@..........
	;;	.@..@@@@@@.@@.@@@@@@..@.	...........@@...........
	;;	.@.@..@@@@.@@.@@@@..@.@.	........................
	;;	.@.@@.@@...@@...@@.@@.@.	........................
	;;	.@@.@@...@.@@.@...@@.@@.	.........@....@.........
	;;	.@@....@@@.@@.@@@....@@.	.......@@@....@@@.......
	;;	..@@.@@@@@.@@.@@@@@.@@..	@....@@@@@....@@@@@....@
	;;	...@@.@@@@.@@.@@@@.@@...	@@....@@@@....@@@@....@@
	;;	....@@..@@.@@.@@..@@....	@@@.....@@....@@.....@@@
	;;	......@@...@@...@@......	@@@@................@@@@
	;;	........@@.@@.@@........	@@@@@@............@@@@@@
	;;	..........@@@@..........	@@@@@@@@........@@@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@

		;; SPR_BATCRAFT_CKPIT EQU &4E
	A4F0 DEFB &00, &00, &00, &00, &00, &00, &00, &0E, &00, &00, &0B, &00, &00, &04, &80, &00
	A500 DEFB &18, &40, &70, &E4, &20, &4F, &07, &10, &40, &07, &B0, &40, &07, &28, &30, &00
	A510 DEFB &D8, &4E, &07, &3C, &71, &F8, &FC, &7E, &07, &FE, &7F, &FF, &FE, &7F, &FF, &FE
	A520 DEFB &7E, &BF, &FC, &3C, &1F, &FC, &1F, &7F, &F8, &07, &FF, &E0, &01, &FF, &80, &00
	A530 DEFB &3C, &00, &00, &00, &00, &00, &00, &00, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	A540 DEFB &FF, &FF, &FB, &FF, &FF, &F4, &FF, &FF, &FB, &7F, &FF, &E0, &BF, &CF, &10, &5F
	A550 DEFB &D0, &F0, &37, &CF, &F0, &23, &B1, &F8, &CB, &0E, &07, &09, &01, &F8, &0D, &00
	A560 DEFB &00, &00, &00, &00, &00, &03, &E0, &00, &06, &B0, &01, &84, &10, &01, &C7, &70
	A570 DEFB &03, &E3, &E0, &07, &F8, &00, &1F, &FE, &00, &7F, &FF, &C3, &FF, &FF, &FF, &FF
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	............@@@.........	@@@@@@@@@@@@@@@@@@@@@@@@
	;;	............@.@@........	@@@@@@@@@@@@@.@@@@@@@@@@
	;;	.............@..@.......	@@@@@@@@@@@@.@..@@@@@@@@
	;;	...........@@....@......	@@@@@@@@@@@@@.@@.@@@@@@@
	;;	.@@@....@@@..@....@.....	@@@@@@@@@@@.....@.@@@@@@
	;;	.@..@@@@.....@@@...@....	@@..@@@@...@.....@.@@@@@
	;;	.@...........@@@@.@@....	@@.@....@@@@......@@.@@@
	;;	.@...........@@@..@.@...	@@..@@@@@@@@......@...@@
	;;	..@@............@@.@@...	@.@@...@@@@@@...@@..@.@@
	;;	.@..@@@......@@@..@@@@..	....@@@......@@@....@..@
	;;	.@@@...@@@@@@...@@@@@@..	.......@@@@@@.......@@.@
	;;	.@@@@@@......@@@@@@@@@@.	........................
	;;	.@@@@@@@@@@@@@@@@@@@@@@.	........................
	;;	.@@@@@@@@@@@@@@@@@@@@@@.	......@@@@@.............
	;;	.@@@@@@.@.@@@@@@@@@@@@..	.....@@.@.@@...........@
	;;	..@@@@.....@@@@@@@@@@@..	@....@.....@...........@
	;;	...@@@@@.@@@@@@@@@@@@...	@@...@@@.@@@..........@@
	;;	.....@@@@@@@@@@@@@@.....	@@@...@@@@@..........@@@
	;;	.......@@@@@@@@@@.......	@@@@@..............@@@@@
	;;	..........@@@@..........	@@@@@@@..........@@@@@@@
	;;	........................	@@@@@@@@@@....@@@@@@@@@@
	;;	........................	@@@@@@@@@@@@@@@@@@@@@@@@

;; -----------------------------------------------------------------------------------------------------------
SPR_DOORSTEP		EQU		&50
SPR_SMILEY			EQU		&51
SPR_ROLLER			EQU		&52
SPR_CLEARBOX		EQU		&53
SPR_STEPBOX			EQU		&54
SPR_LAVAPIT			EQU		&55
SPR_COLUMN			EQU		&56
SPR_ECRIN			EQU		&57
SPR_BOX				EQU		&58
SPR_Z_CUSHION		EQU		&59
SPR_TURTLE			EQU		&5A
SPR_TABLE			EQU		&5B
SPR_CRATE			EQU		&5C
SPR_TARBOX			EQU		&5D
SPR_DSPIKES			EQU		&5E
SPR_BRICKW			EQU		&5F
SPR_1st_4x28_sprite	EQU		SPR_DOORSTEP

;; -----------------------------------------------------------------------------------------------------------
img_4x28_bin:			;; SPR_DOORSTEP EQU &50
	A580 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0F, &F0, &00, &00, &3F, &FC, &00
	A590 DEFB &00, &FF, &FF, &00, &03, &FF, &FF, &80, &0F, &FF, &F8, &00, &3F, &FF, &FB, &80
	A5A0 DEFB &3F, &FF, &83, &80, &4F, &FF, &BB, &80, &33, &F8, &3B, &80, &4C, &FB, &BB, &80
	A5B0 DEFB &33, &03, &B8, &00, &4C, &BB, &B8, &00, &33, &3B, &80, &00, &0C, &BB, &80, &00
	A5C0 DEFB &03, &38, &00, &00, &00, &B8, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	A5D0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	A5E0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	A5F0 DEFB &FF, &FC, &3F, &FF, &FF, &F0, &0F, &FF, &FF, &C0, &03, &FF, &FF, &00, &00, &FF
	A600 DEFB &FC, &00, &00, &3F, &F0, &00, &00, &3F, &C0, &00, &00, &3F, &80, &00, &03, &BF
	A610 DEFB &00, &00, &03, &BF, &00, &00, &3B, &BF, &20, &00, &3B, &BF, &08, &03, &BB, &BF
	A620 DEFB &12, &03, &B8, &7F, &04, &3B, &BB, &FF, &21, &3B, &87, &FF, &C8, &3B, &BF, &FF
	A630 DEFB &F2, &38, &7F, &FF, &FC, &3B, &FF, &FF, &FF, &07, &FF, &FF, &FF, &FF, &FF, &FF
	A640 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	A650 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@........@@@@@@@@@@@@
	;;	............@@@@@@@@............	@@@@@@@@@@............@@@@@@@@@@
	;;	..........@@@@@@@@@@@@..........	@@@@@@@@................@@@@@@@@
	;;	........@@@@@@@@@@@@@@@@........	@@@@@@....................@@@@@@
	;;	......@@@@@@@@@@@@@@@@@@@.......	@@@@......................@@@@@@
	;;	....@@@@@@@@@@@@@@@@@...........	@@........................@@@@@@
	;;	..@@@@@@@@@@@@@@@@@@@.@@@.......	@.....................@@@.@@@@@@
	;;	..@@@@@@@@@@@@@@@.....@@@.......	......................@@@.@@@@@@
	;;	.@..@@@@@@@@@@@@@.@@@.@@@.......	..................@@@.@@@.@@@@@@
	;;	..@@..@@@@@@@.....@@@.@@@.......	..@...............@@@.@@@.@@@@@@
	;;	.@..@@..@@@@@.@@@.@@@.@@@.......	....@.........@@@.@@@.@@@.@@@@@@
	;;	..@@..@@......@@@.@@@...........	...@..@.......@@@.@@@....@@@@@@@
	;;	.@..@@..@.@@@.@@@.@@@...........	.....@....@@@.@@@.@@@.@@@@@@@@@@
	;;	..@@..@@..@@@.@@@...............	..@....@..@@@.@@@....@@@@@@@@@@@
	;;	....@@..@.@@@.@@@...............	@@..@.....@@@.@@@.@@@@@@@@@@@@@@
	;;	......@@..@@@...................	@@@@..@...@@@....@@@@@@@@@@@@@@@
	;;	........@.@@@...................	@@@@@@....@@@.@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@.....@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

			;; SPR_SMILEY EQU &51
	A660 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &07, &E0, &00
	A670 DEFB &00, &38, &1C, &00, &00, &C7, &E3, &00, &03, &3E, &3C, &C0, &06, &FC, &FF, &60
	A680 DEFB &0D, &C7, &7B, &B0, &1B, &9E, &61, &D8, &3B, &BF, &8D, &DC, &3B, &FE, &39, &DC
	A690 DEFB &2D, &F8, &E3, &B4, &26, &FC, &0F, &64, &2B, &3F, &FC, &D4, &24, &C7, &E3, &24
	A6A0 DEFB &2B, &38, &1C, &D4, &31, &C7, &E3, &8C, &30, &F9, &9F, &0C, &18, &3D, &BC, &18
	A6B0 DEFB &1C, &05, &A0, &38, &0E, &01, &80, &70, &07, &81, &81, &E0, &01, &F3, &CF, &80
	A6C0 DEFB &00, &7F, &FE, &00, &00, &0F, &F0, &00, &00, &00, &00, &00, &00, &00, &00, &00
	A6D0 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F8, &1F, &FF, &FF, &C0, &03, &FF
	A6E0 DEFB &FF, &00, &00, &FF, &FC, &07, &E0, &3F, &F8, &3E, &3C, &1F, &F0, &FC, &FF, &0F
	A6F0 DEFB &E1, &C7, &7B, &87, &C3, &9E, &61, &C3, &83, &BF, &8D, &C1, &83, &FE, &39, &C1
	A700 DEFB &81, &F8, &E3, &81, &80, &FC, &0F, &01, &80, &3F, &FC, &01, &80, &07, &E0, &01
	A710 DEFB &83, &00, &00, &C1, &85, &C0, &03, &A1, &86, &78, &1E, &61, &C3, &8C, &31, &C3
	A720 DEFB &C1, &F0, &0F, &83, &E0, &7C, &3E, &07, &F0, &0C, &30, &0F, &F8, &00, &00, &1F
	A730 DEFB &FE, &00, &00, &7F, &FF, &80, &01, &FF, &FF, &F0, &0F, &FF, &FF, &FF, &FF, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@......@@@@@@@@@@@@@
	;;	.............@@@@@@.............	@@@@@@@@@@............@@@@@@@@@@
	;;	..........@@@......@@@..........	@@@@@@@@................@@@@@@@@
	;;	........@@...@@@@@@...@@........	@@@@@@.......@@@@@@.......@@@@@@
	;;	......@@..@@@@@...@@@@..@@......	@@@@@.....@@@@@...@@@@.....@@@@@
	;;	.....@@.@@@@@@..@@@@@@@@.@@.....	@@@@....@@@@@@..@@@@@@@@....@@@@
	;;	....@@.@@@...@@@.@@@@.@@@.@@....	@@@....@@@...@@@.@@@@.@@@....@@@
	;;	...@@.@@@..@@@@..@@....@@@.@@...	@@....@@@..@@@@..@@....@@@....@@
	;;	..@@@.@@@.@@@@@@@...@@.@@@.@@@..	@.....@@@.@@@@@@@...@@.@@@.....@
	;;	..@@@.@@@@@@@@@...@@@..@@@.@@@..	@.....@@@@@@@@@...@@@..@@@.....@
	;;	..@.@@.@@@@@@...@@@...@@@.@@.@..	@......@@@@@@...@@@...@@@......@
	;;	..@..@@.@@@@@@......@@@@.@@..@..	@.......@@@@@@......@@@@.......@
	;;	..@.@.@@..@@@@@@@@@@@@..@@.@.@..	@.........@@@@@@@@@@@@.........@
	;;	..@..@..@@...@@@@@@...@@..@..@..	@............@@@@@@............@
	;;	..@.@.@@..@@@......@@@..@@.@.@..	@.....@@................@@.....@
	;;	..@@...@@@...@@@@@@...@@@...@@..	@....@.@@@............@@@.@....@
	;;	..@@....@@@@@..@@..@@@@@....@@..	@....@@..@@@@......@@@@..@@....@
	;;	...@@.....@@@@.@@.@@@@.....@@...	@@....@@@...@@....@@...@@@....@@
	;;	...@@@.......@.@@.@.......@@@...	@@.....@@@@@........@@@@@.....@@
	;;	....@@@........@@........@@@....	@@@......@@@@@....@@@@@......@@@
	;;	.....@@@@......@@......@@@@.....	@@@@........@@....@@........@@@@
	;;	.......@@@@@..@@@@..@@@@@.......	@@@@@......................@@@@@
	;;	.........@@@@@@@@@@@@@@.........	@@@@@@@..................@@@@@@@
	;;	............@@@@@@@@............	@@@@@@@@@..............@@@@@@@@@
	;;	................................	@@@@@@@@@@@@........@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

			;; SPR_ROLLER EQU &52
	A740 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0C, &70, &00, &00, &3F, &9C, &00
	A750 DEFB &00, &FF, &E7, &00, &03, &FF, &F9, &C0, &07, &FF, &FE, &70, &18, &FF, &FF, &98
	A760 DEFB &0F, &3F, &FF, &EC, &31, &CF, &FF, &F6, &4C, &73, &FF, &F6, &43, &1C, &FF, &BA
	A770 DEFB &50, &C7, &3E, &7A, &4A, &31, &DD, &FA, &4E, &8C, &EF, &FA, &51, &A3, &6F, &FA
	A780 DEFB &50, &68, &B7, &FA, &48, &1A, &B7, &FA, &56, &0C, &B7, &FA, &25, &84, &B7, &F4
	A790 DEFB &29, &64, &B7, &F4, &1A, &5C, &B7, &E0, &06, &90, &B7, &C0, &01, &A4, &B7, &00
	A7A0 DEFB &00, &69, &6C, &00, &00, &1D, &60, &00, &00, &02, &C0, &00, &00, &00, &00, &00
	A7B0 DEFB &FF, &FC, &3F, &FF, &FF, &F3, &CF, &FF, &FF, &CC, &73, &FF, &FF, &3F, &9C, &FF
	A7C0 DEFB &FC, &FF, &E7, &3F, &FB, &FF, &F9, &CF, &E7, &FF, &FE, &77, &D8, &FF, &FF, &9B
	A7D0 DEFB &CF, &3F, &FF, &ED, &81, &CF, &FF, &F6, &00, &73, &FF, &F6, &00, &1C, &FF, &BA
	A7E0 DEFB &10, &07, &3E, &7A, &00, &01, &DD, &FA, &00, &00, &EF, &FA, &00, &00, &6F, &FA
	A7F0 DEFB &00, &00, &37, &FA, &00, &02, &37, &FA, &10, &00, &37, &FA, &80, &00, &37, &F5
	A800 DEFB &80, &00, &37, &F5, &C0, &00, &37, &E3, &E0, &00, &37, &DF, &F8, &04, &37, &3F
	A810 DEFB &FE, &00, &6C, &FF, &FF, &80, &63, &FF, &FF, &E0, &DF, &FF, &FF, &FD, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	............@@...@@@............	@@@@@@@@@@..@@...@@@..@@@@@@@@@@
	;;	..........@@@@@@@..@@@..........	@@@@@@@@..@@@@@@@..@@@..@@@@@@@@
	;;	........@@@@@@@@@@@..@@@........	@@@@@@..@@@@@@@@@@@..@@@..@@@@@@
	;;	......@@@@@@@@@@@@@@@..@@@......	@@@@@.@@@@@@@@@@@@@@@..@@@..@@@@
	;;	.....@@@@@@@@@@@@@@@@@@..@@@....	@@@..@@@@@@@@@@@@@@@@@@..@@@.@@@
	;;	...@@...@@@@@@@@@@@@@@@@@..@@...	@@.@@...@@@@@@@@@@@@@@@@@..@@.@@
	;;	....@@@@..@@@@@@@@@@@@@@@@@.@@..	@@..@@@@..@@@@@@@@@@@@@@@@@.@@.@
	;;	..@@...@@@..@@@@@@@@@@@@@@@@.@@.	@......@@@..@@@@@@@@@@@@@@@@.@@.
	;;	.@..@@...@@@..@@@@@@@@@@@@@@.@@.	.........@@@..@@@@@@@@@@@@@@.@@.
	;;	.@....@@...@@@..@@@@@@@@@.@@@.@.	...........@@@..@@@@@@@@@.@@@.@.
	;;	.@.@....@@...@@@..@@@@@..@@@@.@.	...@.........@@@..@@@@@..@@@@.@.
	;;	.@..@.@...@@...@@@.@@@.@@@@@@.@.	...............@@@.@@@.@@@@@@.@.
	;;	.@..@@@.@...@@..@@@.@@@@@@@@@.@.	................@@@.@@@@@@@@@.@.
	;;	.@.@...@@.@...@@.@@.@@@@@@@@@.@.	.................@@.@@@@@@@@@.@.
	;;	.@.@.....@@.@...@.@@.@@@@@@@@.@.	..................@@.@@@@@@@@.@.
	;;	.@..@......@@.@.@.@@.@@@@@@@@.@.	..............@...@@.@@@@@@@@.@.
	;;	.@.@.@@.....@@..@.@@.@@@@@@@@.@.	...@..............@@.@@@@@@@@.@.
	;;	..@..@.@@....@..@.@@.@@@@@@@.@..	@.................@@.@@@@@@@.@.@
	;;	..@.@..@.@@..@..@.@@.@@@@@@@.@..	@.................@@.@@@@@@@.@.@
	;;	...@@.@..@.@@@..@.@@.@@@@@@.....	@@................@@.@@@@@@...@@
	;;	.....@@.@..@....@.@@.@@@@@......	@@@...............@@.@@@@@.@@@@@
	;;	.......@@.@..@..@.@@.@@@........	@@@@@........@....@@.@@@..@@@@@@
	;;	.........@@.@..@.@@.@@..........	@@@@@@@..........@@.@@..@@@@@@@@
	;;	...........@@@.@.@@.............	@@@@@@@@@........@@...@@@@@@@@@@
	;;	..............@.@@..............	@@@@@@@@@@@.....@@.@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@.@..@@@@@@@@@@@@@@

			;; SPR_CLEARBOX EQU &53
	A820 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0E, &70, &00, &00, &3A, &5C, &00
	A830 DEFB &00, &E6, &67, &00, &03, &9A, &59, &C0, &0E, &62, &46, &70, &39, &82, &41, &9C
	A840 DEFB &78, &02, &40, &1E, &4E, &02, &40, &72, &73, &82, &41, &CE, &5C, &E6, &67, &3A
	A850 DEFB &47, &39, &9C, &E2, &51, &CE, &73, &8A, &50, &73, &CE, &0A, &56, &9C, &38, &6A
	A860 DEFB &59, &C6, &63, &9A, &57, &02, &40, &EA, &4C, &02, &40, &32, &66, &02, &40, &66
	A870 DEFB &39, &82, &41, &9C, &0E, &62, &46, &70, &03, &9A, &59, &C0, &00, &E2, &47, &00
	A880 DEFB &00, &3A, &5C, &00, &00, &0E, &70, &00, &00, &03, &C0, &00, &00, &00, &00, &00
	A890 DEFB &FF, &FC, &3F, &FF, &FF, &F3, &CF, &FF, &FF, &CE, &73, &FF, &FF, &3A, &5C, &FF
	A8A0 DEFB &FC, &E6, &67, &3F, &F3, &9A, &59, &CF, &CE, &62, &46, &73, &B9, &9A, &59, &9D
	A8B0 DEFB &78, &7A, &5E, &1E, &4E, &7A, &5E, &72, &73, &9A, &59, &CE, &5C, &E6, &67, &3A
	A8C0 DEFB &47, &39, &9C, &E2, &51, &CE, &73, &8A, &50, &73, &CE, &0A, &56, &9C, &38, &6A
	A8D0 DEFB &59, &C6, &63, &9A, &57, &3A, &5C, &EA, &4C, &FA, &5F, &32, &66, &7A, &5E, &66
	A8E0 DEFB &B9, &9A, &59, &9D, &CE, &62, &46, &73, &F3, &9A, &59, &CF, &FC, &E2, &47, &3F
	A8F0 DEFB &FF, &3A, &5C, &FF, &FF, &CE, &73, &FF, &FF, &F3, &CF, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	............@@@..@@@............	@@@@@@@@@@..@@@..@@@..@@@@@@@@@@
	;;	..........@@@.@..@.@@@..........	@@@@@@@@..@@@.@..@.@@@..@@@@@@@@
	;;	........@@@..@@..@@..@@@........	@@@@@@..@@@..@@..@@..@@@..@@@@@@
	;;	......@@@..@@.@..@.@@..@@@......	@@@@..@@@..@@.@..@.@@..@@@..@@@@
	;;	....@@@..@@...@..@...@@..@@@....	@@..@@@..@@...@..@...@@..@@@..@@
	;;	..@@@..@@.....@..@.....@@..@@@..	@.@@@..@@..@@.@..@.@@..@@..@@@.@
	;;	.@@@@.........@..@.........@@@@.	.@@@@....@@@@.@..@.@@@@....@@@@.
	;;	.@..@@@.......@..@.......@@@..@.	.@..@@@..@@@@.@..@.@@@@..@@@..@.
	;;	.@@@..@@@.....@..@.....@@@..@@@.	.@@@..@@@..@@.@..@.@@..@@@..@@@.
	;;	.@.@@@..@@@..@@..@@..@@@..@@@.@.	.@.@@@..@@@..@@..@@..@@@..@@@.@.
	;;	.@...@@@..@@@..@@..@@@..@@@...@.	.@...@@@..@@@..@@..@@@..@@@...@.
	;;	.@.@...@@@..@@@..@@@..@@@...@.@.	.@.@...@@@..@@@..@@@..@@@...@.@.
	;;	.@.@.....@@@..@@@@..@@@.....@.@.	.@.@.....@@@..@@@@..@@@.....@.@.
	;;	.@.@.@@.@..@@@....@@@....@@.@.@.	.@.@.@@.@..@@@....@@@....@@.@.@.
	;;	.@.@@..@@@...@@..@@...@@@..@@.@.	.@.@@..@@@...@@..@@...@@@..@@.@.
	;;	.@.@.@@@......@..@......@@@.@.@.	.@.@.@@@..@@@.@..@.@@@..@@@.@.@.
	;;	.@..@@........@..@........@@..@.	.@..@@..@@@@@.@..@.@@@@@..@@..@.
	;;	.@@..@@.......@..@.......@@..@@.	.@@..@@..@@@@.@..@.@@@@..@@..@@.
	;;	..@@@..@@.....@..@.....@@..@@@..	@.@@@..@@..@@.@..@.@@..@@..@@@.@
	;;	....@@@..@@...@..@...@@..@@@....	@@..@@@..@@...@..@...@@..@@@..@@
	;;	......@@@..@@.@..@.@@..@@@......	@@@@..@@@..@@.@..@.@@..@@@..@@@@
	;;	........@@@...@..@...@@@........	@@@@@@..@@@...@..@...@@@..@@@@@@
	;;	..........@@@.@..@.@@@..........	@@@@@@@@..@@@.@..@.@@@..@@@@@@@@
	;;	............@@@..@@@............	@@@@@@@@@@..@@@..@@@..@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_STEPBOX EQU &54
	A900 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0F, &F0, &00, &00, &3F, &FC, &00
	A910 DEFB &00, &FF, &FF, &00, &03, &FF, &FF, &C0, &0F, &FF, &FF, &F0, &3F, &FF, &FF, &FC
	A920 DEFB &7F, &FF, &FF, &FE, &4F, &FF, &FF, &F2, &73, &FF, &FF, &CE, &5C, &FF, &FF, &3A
	A930 DEFB &47, &3F, &FC, &E2, &51, &CF, &F3, &8A, &50, &73, &CE, &0A, &56, &9C, &38, &6A
	A940 DEFB &59, &C6, &63, &9A, &57, &02, &40, &EA, &4C, &02, &40, &32, &66, &02, &40, &66
	A950 DEFB &39, &82, &41, &9C, &0E, &62, &46, &70, &03, &9A, &59, &C0, &00, &E2, &47, &00
	A960 DEFB &00, &3A, &5C, &00, &00, &0E, &70, &00, &00, &03, &C0, &00, &00, &00, &00, &00
	A970 DEFB &FF, &FC, &3F, &FF, &FF, &F3, &CF, &FF, &FF, &CF, &F3, &FF, &FF, &3F, &FC, &FF
	A980 DEFB &FC, &FF, &FF, &3F, &F3, &FF, &FF, &CF, &CF, &FF, &FF, &F3, &BF, &FF, &FF, &FD
	A990 DEFB &3F, &FF, &FF, &FC, &0F, &FF, &FF, &F0, &03, &FF, &FF, &C0, &00, &FF, &FF, &00
	A9A0 DEFB &00, &3F, &FC, &00, &00, &0F, &F0, &00, &00, &03, &C0, &00, &06, &00, &00, &60
	A9B0 DEFB &08, &00, &00, &10, &00, &38, &1C, &00, &0C, &F8, &1F, &30, &06, &78, &1E, &60
	A9C0 DEFB &81, &98, &19, &81, &C0, &60, &06, &03, &F0, &18, &18, &0F, &FC, &00, &00, &3F
	A9D0 DEFB &FF, &00, &00, &FF, &FF, &C0, &03, &FF, &FF, &F0, &0F, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	............@@@@@@@@............	@@@@@@@@@@..@@@@@@@@..@@@@@@@@@@
	;;	..........@@@@@@@@@@@@..........	@@@@@@@@..@@@@@@@@@@@@..@@@@@@@@
	;;	........@@@@@@@@@@@@@@@@........	@@@@@@..@@@@@@@@@@@@@@@@..@@@@@@
	;;	......@@@@@@@@@@@@@@@@@@@@......	@@@@..@@@@@@@@@@@@@@@@@@@@..@@@@
	;;	....@@@@@@@@@@@@@@@@@@@@@@@@....	@@..@@@@@@@@@@@@@@@@@@@@@@@@..@@
	;;	..@@@@@@@@@@@@@@@@@@@@@@@@@@@@..	@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@
	;;	.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.	..@@@@@@@@@@@@@@@@@@@@@@@@@@@@..
	;;	.@..@@@@@@@@@@@@@@@@@@@@@@@@..@.	....@@@@@@@@@@@@@@@@@@@@@@@@....
	;;	.@@@..@@@@@@@@@@@@@@@@@@@@..@@@.	......@@@@@@@@@@@@@@@@@@@@......
	;;	.@.@@@..@@@@@@@@@@@@@@@@..@@@.@.	........@@@@@@@@@@@@@@@@........
	;;	.@...@@@..@@@@@@@@@@@@..@@@...@.	..........@@@@@@@@@@@@..........
	;;	.@.@...@@@..@@@@@@@@..@@@...@.@.	............@@@@@@@@............
	;;	.@.@.....@@@..@@@@..@@@.....@.@.	..............@@@@..............
	;;	.@.@.@@.@..@@@....@@@....@@.@.@.	.....@@..................@@.....
	;;	.@.@@..@@@...@@..@@...@@@..@@.@.	....@......................@....
	;;	.@.@.@@@......@..@......@@@.@.@.	..........@@@......@@@..........
	;;	.@..@@........@..@........@@..@.	....@@..@@@@@......@@@@@..@@....
	;;	.@@..@@.......@..@.......@@..@@.	.....@@..@@@@......@@@@..@@.....
	;;	..@@@..@@.....@..@.....@@..@@@..	@......@@..@@......@@..@@......@
	;;	....@@@..@@...@..@...@@..@@@....	@@.......@@..........@@.......@@
	;;	......@@@..@@.@..@.@@..@@@......	@@@@.......@@......@@.......@@@@
	;;	........@@@...@..@...@@@........	@@@@@@....................@@@@@@
	;;	..........@@@.@..@.@@@..........	@@@@@@@@................@@@@@@@@
	;;	............@@@..@@@............	@@@@@@@@@@............@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@........@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_LAVAPIT EQU &55
	A9E0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &03, &C0, &00, &00, &1C, &38, &00
	A9F0 DEFB &00, &63, &C6, &00, &01, &9F, &F9, &80, &02, &76, &BE, &40, &0D, &FA, &B7, &B0
	AA00 DEFB &13, &DB, &ED, &C8, &2B, &6C, &2A, &D4, &51, &D0, &0B, &9A, &54, &60, &06, &2A
	AA10 DEFB &55, &3C, &3C, &AA, &2A, &87, &E2, &D4, &2D, &68, &0D, &54, &55, &56, &B5, &5A
	AA20 DEFB &55, &B5, &AB, &AA, &55, &6A, &DA, &AA, &55, &6B, &5A, &B6, &6A, &AD, &5A, &AA
	AA30 DEFB &36, &AD, &55, &5C, &0D, &5A, &D5, &B0, &03, &D5, &AB, &C0, &00, &D5, &AB, &00
	AA40 DEFB &00, &3A, &AC, &00, &00, &0E, &F0, &00, &00, &03, &40, &00, &00, &00, &00, &00
	AA50 DEFB &FF, &FF, &FF, &FF, &FF, &FC, &3F, &FF, &FF, &E0, &07, &FF, &FF, &80, &01, &FF
	AA60 DEFB &FE, &03, &C0, &7F, &FC, &1F, &F8, &3F, &F0, &76, &BE, &0F, &E1, &FA, &B7, &87
	AA70 DEFB &C3, &DB, &ED, &C3, &83, &6C, &2A, &C1, &01, &D0, &0B, &80, &00, &60, &06, &00
	AA80 DEFB &00, &3C, &3C, &00, &80, &07, &E0, &01, &80, &00, &00, &01, &00, &00, &00, &00
	AA90 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	AAA0 DEFB &80, &00, &00, &01, &C0, &00, &00, &03, &F0, &00, &00, &0F, &FC, &00, &00, &3F
	AAB0 DEFB &FF, &00, &00, &FF, &FF, &C0, &03, &FF, &FF, &F0, &0F, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@..........@@@@@@@@@@@
	;;	...........@@@....@@@...........	@@@@@@@@@..............@@@@@@@@@
	;;	.........@@...@@@@...@@.........	@@@@@@@.......@@@@.......@@@@@@@
	;;	.......@@..@@@@@@@@@@..@@.......	@@@@@@.....@@@@@@@@@@.....@@@@@@
	;;	......@..@@@.@@.@.@@@@@..@......	@@@@.....@@@.@@.@.@@@@@.....@@@@
	;;	....@@.@@@@@@.@.@.@@.@@@@.@@....	@@@....@@@@@@.@.@.@@.@@@@....@@@
	;;	...@..@@@@.@@.@@@@@.@@.@@@..@...	@@....@@@@.@@.@@@@@.@@.@@@....@@
	;;	..@.@.@@.@@.@@....@.@.@.@@.@.@..	@.....@@.@@.@@....@.@.@.@@.....@
	;;	.@.@...@@@.@........@.@@@..@@.@.	.......@@@.@........@.@@@.......
	;;	.@.@.@...@@..........@@...@.@.@.	.........@@..........@@.........
	;;	.@.@.@.@..@@@@....@@@@..@.@.@.@.	..........@@@@....@@@@..........
	;;	..@.@.@.@....@@@@@@...@.@@.@.@..	@............@@@@@@............@
	;;	..@.@@.@.@@.@.......@@.@.@.@.@..	@..............................@
	;;	.@.@.@.@.@.@.@@.@.@@.@.@.@.@@.@.	................................
	;;	.@.@.@.@@.@@.@.@@.@.@.@@@.@.@.@.	................................
	;;	.@.@.@.@.@@.@.@.@@.@@.@.@.@.@.@.	................................
	;;	.@.@.@.@.@@.@.@@.@.@@.@.@.@@.@@.	................................
	;;	.@@.@.@.@.@.@@.@.@.@@.@.@.@.@.@.	................................
	;;	..@@.@@.@.@.@@.@.@.@.@.@.@.@@@..	@..............................@
	;;	....@@.@.@.@@.@.@@.@.@.@@.@@....	@@............................@@
	;;	......@@@@.@.@.@@.@.@.@@@@......	@@@@........................@@@@
	;;	........@@.@.@.@@.@.@.@@........	@@@@@@....................@@@@@@
	;;	..........@@@.@.@.@.@@..........	@@@@@@@@................@@@@@@@@
	;;	............@@@.@@@@............	@@@@@@@@@@............@@@@@@@@@@
	;;	..............@@.@..............	@@@@@@@@@@@@........@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_COLUMN EQU &56
	AAC0 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0F, &F0, &00, &00, &3F, &FC, &00
	AAD0 DEFB &00, &FF, &FF, &00, &03, &FF, &FF, &C0, &0F, &FF, &FF, &F0, &3F, &FF, &FF, &FC
	AAE0 DEFB &3F, &FF, &FF, &FC, &4F, &FF, &FF, &F2, &33, &FF, &FF, &CC, &1C, &FF, &FF, &38
	AAF0 DEFB &07, &3F, &FC, &E0, &01, &CF, &F3, &80, &00, &73, &CE, &00, &06, &9C, &39, &60
	AB00 DEFB &1C, &E7, &E7, &38, &72, &F9, &9F, &4E, &4E, &FE, &7F, &72, &67, &7F, &FE, &E6
	AB10 DEFB &39, &9F, &F9, &9C, &0E, &63, &C6, &70, &03, &9C, &39, &C0, &00, &E7, &E7, &00
	AB20 DEFB &00, &39, &9C, &00, &00, &0E, &70, &00, &00, &03, &C0, &00, &00, &00, &00, &00
	AB30 DEFB &FF, &FC, &3F, &FF, &FF, &F0, &0F, &FF, &FF, &C0, &03, &FF, &FF, &00, &00, &FF
	AB40 DEFB &FC, &00, &00, &3F, &F0, &00, &00, &0F, &C0, &00, &00, &03, &80, &00, &00, &01
	AB50 DEFB &80, &00, &00, &01, &40, &00, &00, &02, &B0, &00, &00, &0D, &DC, &00, &00, &3B
	AB60 DEFB &E7, &00, &00, &E7, &F9, &C0, &03, &9F, &F8, &70, &0E, &1F, &E6, &1C, &39, &67
	AB70 DEFB &9C, &47, &E5, &39, &70, &51, &95, &0E, &40, &54, &55, &02, &60, &55, &54, &06
	AB80 DEFB &B8, &15, &50, &1D, &CE, &01, &40, &73, &F3, &80, &01, &CF, &FC, &E0, &07, &3F
	AB90 DEFB &FF, &38, &1C, &FF, &FF, &CE, &73, &FF, &FF, &F3, &CF, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@........@@@@@@@@@@@@
	;;	............@@@@@@@@............	@@@@@@@@@@............@@@@@@@@@@
	;;	..........@@@@@@@@@@@@..........	@@@@@@@@................@@@@@@@@
	;;	........@@@@@@@@@@@@@@@@........	@@@@@@....................@@@@@@
	;;	......@@@@@@@@@@@@@@@@@@@@......	@@@@........................@@@@
	;;	....@@@@@@@@@@@@@@@@@@@@@@@@....	@@............................@@
	;;	..@@@@@@@@@@@@@@@@@@@@@@@@@@@@..	@..............................@
	;;	..@@@@@@@@@@@@@@@@@@@@@@@@@@@@..	@..............................@
	;;	.@..@@@@@@@@@@@@@@@@@@@@@@@@..@.	.@............................@.
	;;	..@@..@@@@@@@@@@@@@@@@@@@@..@@..	@.@@........................@@.@
	;;	...@@@..@@@@@@@@@@@@@@@@..@@@...	@@.@@@....................@@@.@@
	;;	.....@@@..@@@@@@@@@@@@..@@@.....	@@@..@@@................@@@..@@@
	;;	.......@@@..@@@@@@@@..@@@.......	@@@@@..@@@............@@@..@@@@@
	;;	.........@@@..@@@@..@@@.........	@@@@@....@@@........@@@....@@@@@
	;;	.....@@.@..@@@....@@@..@.@@.....	@@@..@@....@@@....@@@..@.@@..@@@
	;;	...@@@..@@@..@@@@@@..@@@..@@@...	@..@@@...@...@@@@@@..@.@..@@@..@
	;;	.@@@..@.@@@@@..@@..@@@@@.@..@@@.	.@@@.....@.@...@@..@.@.@....@@@.
	;;	.@..@@@.@@@@@@@..@@@@@@@.@@@..@.	.@.......@.@.@...@.@.@.@......@.
	;;	.@@..@@@.@@@@@@@@@@@@@@.@@@..@@.	.@@......@.@.@.@.@.@.@.......@@.
	;;	..@@@..@@..@@@@@@@@@@..@@..@@@..	@.@@@......@.@.@.@.@.......@@@.@
	;;	....@@@..@@...@@@@...@@..@@@....	@@..@@@........@.@.......@@@..@@
	;;	......@@@..@@@....@@@..@@@......	@@@@..@@@..............@@@..@@@@
	;;	........@@@..@@@@@@..@@@........	@@@@@@..@@@..........@@@..@@@@@@
	;;	..........@@@..@@..@@@..........	@@@@@@@@..@@@......@@@..@@@@@@@@
	;;	............@@@..@@@............	@@@@@@@@@@..@@@..@@@..@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_ECRIN EQU &57
	ABA0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &03, &C0, &00, &00, &1C, &38, &00
	ABB0 DEFB &00, &73, &CE, &00, &01, &CC, &33, &80, &03, &38, &1C, &C0, &0E, &F2, &0F, &70
	ABC0 DEFB &1F, &38, &1C, &F8, &33, &CE, &73, &CC, &64, &F3, &CF, &26, &44, &3C, &3C, &22
	ABD0 DEFB &48, &8F, &F0, &12, &29, &83, &C0, &14, &38, &01, &80, &1C, &4E, &01, &80, &72
	ABE0 DEFB &33, &81, &81, &CC, &4C, &E1, &87, &32, &43, &39, &9C, &C2, &64, &CE, &73, &26
	ABF0 DEFB &3A, &33, &CC, &5C, &0F, &0C, &30, &F0, &03, &83, &C1, &C0, &00, &E1, &87, &00
	AC00 DEFB &00, &3D, &BC, &00, &00, &0D, &B0, &00, &00, &03, &C0, &00, &00, &00, &00, &00
	AC10 DEFB &FF, &FF, &FF, &FF, &FF, &FC, &3F, &FF, &FF, &E3, &C7, &FF, &FF, &9C, &39, &FF
	AC20 DEFB &FE, &73, &CE, &7F, &FD, &CC, &33, &BF, &F3, &38, &1C, &CF, &EE, &F0, &0F, &77
	AC30 DEFB &DF, &38, &1C, &FB, &B3, &CE, &73, &CD, &60, &F3, &CF, &06, &50, &3C, &3C, &0A
	AC40 DEFB &40, &0F, &F0, &02, &A0, &03, &C0, &05, &B8, &01, &80, &1D, &4E, &01, &80, &72
	AC50 DEFB &33, &81, &81, &CC, &4C, &E1, &87, &32, &53, &39, &9C, &CA, &60, &CE, &73, &06
	AC60 DEFB &B8, &33, &CC, &1D, &CE, &0C, &30, &73, &F3, &83, &C1, &CF, &FC, &E1, &87, &3F
	AC70 DEFB &FF, &3D, &BC, &FF, &FF, &CD, &B3, &FF, &FF, &F3, &CF, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@...@@@@...@@@@@@@@@@@
	;;	...........@@@....@@@...........	@@@@@@@@@..@@@....@@@..@@@@@@@@@
	;;	.........@@@..@@@@..@@@.........	@@@@@@@..@@@..@@@@..@@@..@@@@@@@
	;;	.......@@@..@@....@@..@@@.......	@@@@@@.@@@..@@....@@..@@@.@@@@@@
	;;	......@@..@@@......@@@..@@......	@@@@..@@..@@@......@@@..@@..@@@@
	;;	....@@@.@@@@..@.....@@@@.@@@....	@@@.@@@.@@@@........@@@@.@@@.@@@
	;;	...@@@@@..@@@......@@@..@@@@@...	@@.@@@@@..@@@......@@@..@@@@@.@@
	;;	..@@..@@@@..@@@..@@@..@@@@..@@..	@.@@..@@@@..@@@..@@@..@@@@..@@.@
	;;	.@@..@..@@@@..@@@@..@@@@..@..@@.	.@@.....@@@@..@@@@..@@@@.....@@.
	;;	.@...@....@@@@....@@@@....@...@.	.@.@......@@@@....@@@@......@.@.
	;;	.@..@...@...@@@@@@@@.......@..@.	.@..........@@@@@@@@..........@.
	;;	..@.@..@@.....@@@@.........@.@..	@.@...........@@@@...........@.@
	;;	..@@@..........@@..........@@@..	@.@@@..........@@..........@@@.@
	;;	.@..@@@........@@........@@@..@.	.@..@@@........@@........@@@..@.
	;;	..@@..@@@......@@......@@@..@@..	..@@..@@@......@@......@@@..@@..
	;;	.@..@@..@@@....@@....@@@..@@..@.	.@..@@..@@@....@@....@@@..@@..@.
	;;	.@....@@..@@@..@@..@@@..@@....@.	.@.@..@@..@@@..@@..@@@..@@..@.@.
	;;	.@@..@..@@..@@@..@@@..@@..@..@@.	.@@.....@@..@@@..@@@..@@.....@@.
	;;	..@@@.@...@@..@@@@..@@...@.@@@..	@.@@@.....@@..@@@@..@@.....@@@.@
	;;	....@@@@....@@....@@....@@@@....	@@..@@@.....@@....@@.....@@@..@@
	;;	......@@@.....@@@@.....@@@......	@@@@..@@@.....@@@@.....@@@..@@@@
	;;	........@@@....@@....@@@........	@@@@@@..@@@....@@....@@@..@@@@@@
	;;	..........@@@@.@@.@@@@..........	@@@@@@@@..@@@@.@@.@@@@..@@@@@@@@
	;;	............@@.@@.@@............	@@@@@@@@@@..@@.@@.@@..@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_BOX EQU &58
	AC80 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &02, &40, &00, &00, &0F, &F0, &00
	AC90 DEFB &00, &3A, &5C, &00, &00, &E9, &97, &00, &03, &A7, &E5, &C0, &0E, &9F, &F9, &70
	ACA0 DEFB &3A, &7F, &FE, &5C, &71, &FF, &FF, &8E, &7C, &FF, &FF, &3E, &3F, &3F, &FC, &FC
	ACB0 DEFB &2F, &CF, &F3, &F4, &13, &F3, &CF, &C8, &14, &FC, &3F, &28, &09, &3E, &7C, &90
	ACC0 DEFB &0A, &4F, &F2, &50, &0A, &93, &C9, &50, &1A, &A4, &25, &58, &33, &55, &AA, &CC
	ACD0 DEFB &26, &D5, &AB, &64, &19, &B5, &AD, &98, &06, &6D, &B6, &60, &01, &9B, &D9, &80
	ACE0 DEFB &00, &66, &66, &00, &00, &19, &98, &00, &00, &06, &60, &00, &00, &00, &00, &00
	ACF0 DEFB &FF, &FF, &FF, &FF, &FF, &FD, &BF, &FF, &FF, &F2, &4F, &FF, &FF, &CF, &F3, &FF
	AD00 DEFB &FF, &3A, &5C, &FF, &FC, &E9, &17, &3F, &F3, &A2, &A5, &CF, &CE, &95, &51, &73
	AD10 DEFB &BA, &2A, &AA, &5D, &71, &55, &55, &0E, &7C, &AA, &AA, &3E, &BF, &15, &54, &FD
	AD20 DEFB &AF, &CA, &A3, &F5, &D3, &F1, &4F, &CB, &D0, &FC, &3F, &0B, &E8, &3E, &7C, &17
	AD30 DEFB &E8, &0F, &F0, &17, &E8, &03, &C0, &17, &D8, &00, &00, &1B, &B3, &01, &80, &CD
	AD40 DEFB &A6, &C1, &83, &65, &D9, &B1, &8D, &9B, &E6, &6D, &B6, &67, &F9, &9B, &D9, &9F
	AD50 DEFB &FE, &66, &66, &7F, &FF, &99, &99, &FF, &FF, &E6, &67, &FF, &FF, &F9, &9F, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@.@@.@@@@@@@@@@@@@@
	;;	..............@..@..............	@@@@@@@@@@@@..@..@..@@@@@@@@@@@@
	;;	............@@@@@@@@............	@@@@@@@@@@..@@@@@@@@..@@@@@@@@@@
	;;	..........@@@.@..@.@@@..........	@@@@@@@@..@@@.@..@.@@@..@@@@@@@@
	;;	........@@@.@..@@..@.@@@........	@@@@@@..@@@.@..@...@.@@@..@@@@@@
	;;	......@@@.@..@@@@@@..@.@@@......	@@@@..@@@.@...@.@.@..@.@@@..@@@@
	;;	....@@@.@..@@@@@@@@@@..@.@@@....	@@..@@@.@..@.@.@.@.@...@.@@@..@@
	;;	..@@@.@..@@@@@@@@@@@@@@..@.@@@..	@.@@@.@...@.@.@.@.@.@.@..@.@@@.@
	;;	.@@@...@@@@@@@@@@@@@@@@@@...@@@.	.@@@...@.@.@.@.@.@.@.@.@....@@@.
	;;	.@@@@@..@@@@@@@@@@@@@@@@..@@@@@.	.@@@@@..@.@.@.@.@.@.@.@...@@@@@.
	;;	..@@@@@@..@@@@@@@@@@@@..@@@@@@..	@.@@@@@@...@.@.@.@.@.@..@@@@@@.@
	;;	..@.@@@@@@..@@@@@@@@..@@@@@@.@..	@.@.@@@@@@..@.@.@.@...@@@@@@.@.@
	;;	...@..@@@@@@..@@@@..@@@@@@..@...	@@.@..@@@@@@...@.@..@@@@@@..@.@@
	;;	...@.@..@@@@@@....@@@@@@..@.@...	@@.@....@@@@@@....@@@@@@....@.@@
	;;	....@..@..@@@@@..@@@@@..@..@....	@@@.@.....@@@@@..@@@@@.....@.@@@
	;;	....@.@..@..@@@@@@@@..@..@.@....	@@@.@.......@@@@@@@@.......@.@@@
	;;	....@.@.@..@..@@@@..@..@.@.@....	@@@.@.........@@@@.........@.@@@
	;;	...@@.@.@.@..@....@..@.@.@.@@...	@@.@@......................@@.@@
	;;	..@@..@@.@.@.@.@@.@.@.@.@@..@@..	@.@@..@@.......@@.......@@..@@.@
	;;	..@..@@.@@.@.@.@@.@.@.@@.@@..@..	@.@..@@.@@.....@@.....@@.@@..@.@
	;;	...@@..@@.@@.@.@@.@.@@.@@..@@...	@@.@@..@@.@@...@@...@@.@@..@@.@@
	;;	.....@@..@@.@@.@@.@@.@@..@@.....	@@@..@@..@@.@@.@@.@@.@@..@@..@@@
	;;	.......@@..@@.@@@@.@@..@@.......	@@@@@..@@..@@.@@@@.@@..@@..@@@@@
	;;	.........@@..@@..@@..@@.........	@@@@@@@..@@..@@..@@..@@..@@@@@@@
	;;	...........@@..@@..@@...........	@@@@@@@@@..@@..@@..@@..@@@@@@@@@
	;;	.............@@..@@.............	@@@@@@@@@@@..@@..@@..@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@..@@..@@@@@@@@@@@@@

			;; SPR_Z_CUSHION EQU &59
	AD60 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0F, &F0, &00, &00, &03, &FC, &00
	AD70 DEFB &00, &08, &FF, &00, &00, &0A, &3F, &C0, &00, &00, &0F, &F0, &1F, &FF, &FF, &FC
	AD80 DEFB &3F, &FF, &FF, &FA, &4F, &F0, &00, &06, &63, &FC, &AA, &A6, &58, &FF, &15, &56
	AD90 DEFB &76, &3F, &C5, &56, &6D, &8F, &F2, &A6, &5B, &63, &C9, &56, &76, &D8, &39, &56
	ADA0 DEFB &6D, &B6, &7A, &A6, &5B, &6E, &79, &56, &76, &DA, &79, &56, &6D, &B6, &7A, &A6
	ADB0 DEFB &3B, &6E, &79, &54, &0E, &DA, &78, &00, &03, &B6, &78, &00, &00, &EE, &78, &00
	ADC0 DEFB &00, &3A, &78, &00, &00, &0E, &70, &00, &00, &02, &40, &00, &00, &00, &00, &00
	ADD0 DEFB &FF, &FC, &3F, &FF, &FF, &F3, &CF, &FF, &FF, &EF, &F3, &FF, &FF, &E3, &FC, &FF
	ADE0 DEFB &FF, &E0, &FF, &3F, &FF, &E0, &3F, &CF, &E0, &00, &0F, &F3, &DF, &FF, &FF, &FC
	ADF0 DEFB &BF, &FF, &FF, &FA, &0F, &F0, &00, &04, &03, &FC, &00, &02, &00, &FF, &00, &04
	AE00 DEFB &00, &3F, &C0, &02, &00, &0F, &F0, &04, &00, &03, &C8, &02, &00, &00, &10, &04
	AE10 DEFB &00, &00, &28, &02, &00, &00, &50, &04, &00, &00, &28, &02, &00, &00, &50, &04
	AE20 DEFB &80, &00, &28, &01, &C0, &00, &50, &03, &F0, &00, &2B, &FF, &FC, &00, &53, &FF
	AE30 DEFB &FF, &00, &2B, &FF, &FF, &C0, &57, &FF, &FF, &F0, &0F, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	............@@@@@@@@............	@@@@@@@@@@@.@@@@@@@@..@@@@@@@@@@
	;;	..............@@@@@@@@..........	@@@@@@@@@@@...@@@@@@@@..@@@@@@@@
	;;	............@...@@@@@@@@........	@@@@@@@@@@@.....@@@@@@@@..@@@@@@
	;;	............@.@...@@@@@@@@......	@@@@@@@@@@@.......@@@@@@@@..@@@@
	;;	....................@@@@@@@@....	@@@.................@@@@@@@@..@@
	;;	...@@@@@@@@@@@@@@@@@@@@@@@@@@@..	@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@..
	;;	..@@@@@@@@@@@@@@@@@@@@@@@@@@@.@.	@.@@@@@@@@@@@@@@@@@@@@@@@@@@@.@.
	;;	.@..@@@@@@@@.................@@.	....@@@@@@@@.................@..
	;;	.@@...@@@@@@@@..@.@.@.@.@.@..@@.	......@@@@@@@@................@.
	;;	.@.@@...@@@@@@@@...@.@.@.@.@.@@.	........@@@@@@@@.............@..
	;;	.@@@.@@...@@@@@@@@...@.@.@.@.@@.	..........@@@@@@@@............@.
	;;	.@@.@@.@@...@@@@@@@@..@.@.@..@@.	............@@@@@@@@.........@..
	;;	.@.@@.@@.@@...@@@@..@..@.@.@.@@.	..............@@@@..@.........@.
	;;	.@@@.@@.@@.@@.....@@@..@.@.@.@@.	...................@.........@..
	;;	.@@.@@.@@.@@.@@..@@@@.@.@.@..@@.	..................@.@.........@.
	;;	.@.@@.@@.@@.@@@..@@@@..@.@.@.@@.	.................@.@.........@..
	;;	.@@@.@@.@@.@@.@..@@@@..@.@.@.@@.	..................@.@.........@.
	;;	.@@.@@.@@.@@.@@..@@@@.@.@.@..@@.	.................@.@.........@..
	;;	..@@@.@@.@@.@@@..@@@@..@.@.@.@..	@.................@.@..........@
	;;	....@@@.@@.@@.@..@@@@...........	@@...............@.@..........@@
	;;	......@@@.@@.@@..@@@@...........	@@@@..............@.@.@@@@@@@@@@
	;;	........@@@.@@@..@@@@...........	@@@@@@...........@.@..@@@@@@@@@@
	;;	..........@@@.@..@@@@...........	@@@@@@@@..........@.@.@@@@@@@@@@
	;;	............@@@..@@@............	@@@@@@@@@@.......@.@.@@@@@@@@@@@
	;;	..............@..@..............	@@@@@@@@@@@@........@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_TURTLE EQU &5A
	AE40 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &07, &E0, &00, &00, &38, &1C, &00
	AE50 DEFB &00, &C3, &C3, &00, &01, &37, &EC, &80, &02, &63, &C6, &40, &05, &9D, &B9, &A0
	AE60 DEFB &05, &BC, &3D, &A0, &0B, &BD, &BD, &D0, &09, &5B, &DA, &90, &14, &E3, &C7, &28
	AE70 DEFB &2E, &F1, &8F, &74, &5E, &6E, &76, &7A, &69, &9E, &79, &96, &33, &D8, &1B, &CC
	AE80 DEFB &18, &D7, &EB, &18, &0E, &0F, &F0, &70, &17, &FC, &3F, &E8, &39, &F3, &CF, &9C
	AE90 DEFB &5E, &0F, &F0, &7A, &24, &31, &8C, &24, &08, &25, &A4, &10, &00, &1B, &D8, &00
	AEA0 DEFB &00, &0F, &F0, &00, &00, &07, &E0, &00, &00, &01, &80, &00, &00, &00, &00, &00
	AEB0 DEFB &FF, &FF, &FF, &FF, &FF, &F8, &1F, &FF, &FF, &C0, &03, &FF, &FF, &00, &00, &FF
	AEC0 DEFB &FE, &00, &00, &7F, &FC, &00, &00, &3F, &F8, &00, &00, &1F, &F0, &00, &00, &0F
	AED0 DEFB &F0, &00, &00, &0F, &E0, &00, &00, &07, &E0, &00, &00, &07, &C0, &00, &00, &03
	AEE0 DEFB &80, &00, &00, &01, &00, &00, &00, &00, &00, &00, &00, &00, &80, &00, &00, &01
	AEF0 DEFB &C0, &00, &00, &03, &E0, &00, &00, &07, &D0, &00, &00, &0B, &B8, &03, &C0, &1D
	AF00 DEFB &5E, &0F, &F0, &7A, &A5, &B1, &8D, &A5, &CB, &A1, &85, &D3, &F7, &DB, &DB, &EF
	AF10 DEFB &FF, &EF, &F7, &FF, &FF, &F7, &EF, &FF, &FF, &F9, &9F, &FF, &FF, &FE, &7F, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@......@@@@@@@@@@@@@
	;;	.............@@@@@@.............	@@@@@@@@@@............@@@@@@@@@@
	;;	..........@@@......@@@..........	@@@@@@@@................@@@@@@@@
	;;	........@@....@@@@....@@........	@@@@@@@..................@@@@@@@
	;;	.......@..@@.@@@@@@.@@..@.......	@@@@@@....................@@@@@@
	;;	......@..@@...@@@@...@@..@......	@@@@@......................@@@@@
	;;	.....@.@@..@@@.@@.@@@..@@.@.....	@@@@........................@@@@
	;;	.....@.@@.@@@@....@@@@.@@.@.....	@@@@........................@@@@
	;;	....@.@@@.@@@@.@@.@@@@.@@@.@....	@@@..........................@@@
	;;	....@..@.@.@@.@@@@.@@.@.@..@....	@@@..........................@@@
	;;	...@.@..@@@...@@@@...@@@..@.@...	@@............................@@
	;;	..@.@@@.@@@@...@@...@@@@.@@@.@..	@..............................@
	;;	.@.@@@@..@@.@@@..@@@.@@..@@@@.@.	................................
	;;	.@@.@..@@..@@@@..@@@@..@@..@.@@.	................................
	;;	..@@..@@@@.@@......@@.@@@@..@@..	@..............................@
	;;	...@@...@@.@.@@@@@@.@.@@...@@...	@@............................@@
	;;	....@@@.....@@@@@@@@.....@@@....	@@@..........................@@@
	;;	...@.@@@@@@@@@....@@@@@@@@@.@...	@@.@........................@.@@
	;;	..@@@..@@@@@..@@@@..@@@@@..@@@..	@.@@@.........@@@@.........@@@.@
	;;	.@.@@@@.....@@@@@@@@.....@@@@.@.	.@.@@@@.....@@@@@@@@.....@@@@.@.
	;;	..@..@....@@...@@...@@....@..@..	@.@..@.@@.@@...@@...@@.@@.@..@.@
	;;	....@.....@..@.@@.@..@.....@....	@@..@.@@@.@....@@....@.@@@.@..@@
	;;	...........@@.@@@@.@@...........	@@@@.@@@@@.@@.@@@@.@@.@@@@@.@@@@
	;;	............@@@@@@@@............	@@@@@@@@@@@.@@@@@@@@.@@@@@@@@@@@
	;;	.............@@@@@@.............	@@@@@@@@@@@@.@@@@@@.@@@@@@@@@@@@
	;;	...............@@...............	@@@@@@@@@@@@@..@@..@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@..@@@@@@@@@@@@@@@

			;; SPR_TABLE EQU &5B
	AF20 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0E, &70, &00, &00, &39, &1C, &00
	AF30 DEFB &00, &E2, &A7, &00, &03, &8A, &A9, &C0, &0E, &55, &54, &70, &39, &55, &55, &1C
	AF40 DEFB &78, &AA, &AA, &9E, &4E, &2A, &AA, &72, &73, &95, &51, &CE, &1C, &E5, &47, &38
	AF50 DEFB &07, &38, &9C, &E0, &01, &CE, &73, &80, &1A, &73, &CE, &58, &37, &9C, &39, &EC
	AF60 DEFB &2F, &E7, &E7, &F4, &6F, &D8, &1B, &F6, &6E, &1B, &D8, &76, &70, &06, &60, &0E
	AF70 DEFB &00, &05, &A0, &00, &00, &05, &A0, &00, &00, &05, &A0, &00, &00, &03, &C0, &00
	AF80 DEFB &00, &03, &C0, &00, &00, &03, &C0, &00, &00, &01, &80, &00, &00, &00, &00, &00
	AF90 DEFB &FF, &FC, &3F, &FF, &FF, &F3, &CF, &FF, &FF, &CE, &73, &FF, &FF, &38, &1C, &FF
	AFA0 DEFB &FC, &E0, &07, &3F, &F3, &80, &01, &CF, &CE, &00, &00, &73, &B8, &00, &00, &1D
	AFB0 DEFB &78, &00, &00, &1E, &4E, &00, &00, &72, &73, &80, &01, &CE, &9C, &E0, &07, &39
	AFC0 DEFB &E7, &38, &1C, &E7, &E1, &CE, &73, &87, &D8, &73, &CE, &1B, &B0, &1C, &38, &0D
	AFD0 DEFB &A0, &07, &E0, &05, &60, &00, &00, &06, &60, &00, &00, &06, &71, &E0, &07, &8E
	AFE0 DEFB &8F, &F1, &8F, &F1, &FF, &F1, &8F, &FF, &FF, &F1, &8F, &FF, &FF, &FB, &DF, &FF
	AFF0 DEFB &FF, &FB, &DF, &FF, &FF, &FB, &DF, &FF, &FF, &FD, &BF, &FF, &FF, &FE, &7F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	............@@@..@@@............	@@@@@@@@@@..@@@..@@@..@@@@@@@@@@
	;;	..........@@@..@...@@@..........	@@@@@@@@..@@@......@@@..@@@@@@@@
	;;	........@@@...@.@.@..@@@........	@@@@@@..@@@..........@@@..@@@@@@
	;;	......@@@...@.@.@.@.@..@@@......	@@@@..@@@..............@@@..@@@@
	;;	....@@@..@.@.@.@.@.@.@...@@@....	@@..@@@..................@@@..@@
	;;	..@@@..@.@.@.@.@.@.@.@.@...@@@..	@.@@@......................@@@.@
	;;	.@@@@...@.@.@.@.@.@.@.@.@..@@@@.	.@@@@......................@@@@.
	;;	.@..@@@...@.@.@.@.@.@.@..@@@..@.	.@..@@@..................@@@..@.
	;;	.@@@..@@@..@.@.@.@.@...@@@..@@@.	.@@@..@@@..............@@@..@@@.
	;;	...@@@..@@@..@.@.@...@@@..@@@...	@..@@@..@@@..........@@@..@@@..@
	;;	.....@@@..@@@...@..@@@..@@@.....	@@@..@@@..@@@......@@@..@@@..@@@
	;;	.......@@@..@@@..@@@..@@@.......	@@@....@@@..@@@..@@@..@@@....@@@
	;;	...@@.@..@@@..@@@@..@@@..@.@@...	@@.@@....@@@..@@@@..@@@....@@.@@
	;;	..@@.@@@@..@@@....@@@..@@@@.@@..	@.@@.......@@@....@@@.......@@.@
	;;	..@.@@@@@@@..@@@@@@..@@@@@@@.@..	@.@..........@@@@@@..........@.@
	;;	.@@.@@@@@@.@@......@@.@@@@@@.@@.	.@@..........................@@.
	;;	.@@.@@@....@@.@@@@.@@....@@@.@@.	.@@..........................@@.
	;;	.@@@.........@@..@@.........@@@.	.@@@...@@@@..........@@@@...@@@.
	;;	.............@.@@.@.............	@...@@@@@@@@...@@...@@@@@@@@...@
	;;	.............@.@@.@.............	@@@@@@@@@@@@...@@...@@@@@@@@@@@@
	;;	.............@.@@.@.............	@@@@@@@@@@@@...@@...@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@@.@@@@.@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@@.@@@@.@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@@.@@@@.@@@@@@@@@@@@@
	;;	...............@@...............	@@@@@@@@@@@@@@.@@.@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@..@@@@@@@@@@@@@@@

			;; SPR_CRATE EQU &5C
	B000 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &0D, &B0, &00, &00, &32, &4C, &00
	B010 DEFB &00, &C5, &1B, &00, &03, &2A, &66, &C0, &0C, &51, &99, &B0, &32, &A6, &66, &0C
	B020 DEFB &55, &19, &99, &5A, &62, &66, &62, &86, &5D, &99, &95, &3A, &4F, &66, &28, &F2
	B030 DEFB &33, &D9, &53, &CC, &4C, &F2, &8F, &32, &63, &3E, &7C, &CA, &48, &CD, &B3, &12
	B040 DEFB &4C, &33, &4C, &AA, &6C, &0F, &71, &52, &4E, &33, &CA, &AA, &67, &B4, &15, &56
	B050 DEFB &31, &F1, &AA, &8C, &0C, &61, &95, &30, &03, &01, &A8, &C0, &00, &C5, &93, &00
	B060 DEFB &00, &33, &4C, &00, &00, &0F, &70, &00, &00, &03, &C0, &00, &00, &00, &00, &00
	B070 DEFB &FF, &FC, &3F, &FF, &FF, &F3, &CF, &FF, &FF, &C1, &83, &FF, &FF, &00, &00, &FF
	B080 DEFB &FC, &00, &00, &3F, &F0, &00, &00, &0F, &C0, &00, &00, &03, &B0, &00, &00, &0D
	B090 DEFB &50, &00, &00, &0A, &60, &00, &00, &06, &40, &00, &00, &02, &40, &00, &00, &02
	B0A0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &08, &01, &80, &00
	B0B0 DEFB &0C, &03, &40, &00, &0C, &07, &60, &00, &4E, &33, &C0, &02, &67, &B0, &00, &06
	B0C0 DEFB &81, &F0, &00, &01, &C0, &60, &00, &03, &F0, &00, &00, &0F, &FC, &01, &80, &3F
	B0D0 DEFB &FF, &03, &40, &FF, &FF, &C7, &63, &FF, &FF, &F3, &CF, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	............@@.@@.@@............	@@@@@@@@@@.....@@.....@@@@@@@@@@
	;;	..........@@..@..@..@@..........	@@@@@@@@................@@@@@@@@
	;;	........@@...@.@...@@.@@........	@@@@@@....................@@@@@@
	;;	......@@..@.@.@..@@..@@.@@......	@@@@........................@@@@
	;;	....@@...@.@...@@..@@..@@.@@....	@@............................@@
	;;	..@@..@.@.@..@@..@@..@@.....@@..	@.@@........................@@.@
	;;	.@.@.@.@...@@..@@..@@..@.@.@@.@.	.@.@........................@.@.
	;;	.@@...@..@@..@@..@@...@.@....@@.	.@@..........................@@.
	;;	.@.@@@.@@..@@..@@..@.@.@..@@@.@.	.@............................@.
	;;	.@..@@@@.@@..@@...@.@...@@@@..@.	.@............................@.
	;;	..@@..@@@@.@@..@.@.@..@@@@..@@..	................................
	;;	.@..@@..@@@@..@.@...@@@@..@@..@.	................................
	;;	.@@...@@..@@@@@..@@@@@..@@..@.@.	................................
	;;	.@..@...@@..@@.@@.@@..@@...@..@.	....@..........@@...............
	;;	.@..@@....@@..@@.@..@@..@.@.@.@.	....@@........@@.@..............
	;;	.@@.@@......@@@@.@@@...@.@.@..@.	....@@.......@@@.@@.............
	;;	.@..@@@...@@..@@@@..@.@.@.@.@.@.	.@..@@@...@@..@@@@............@.
	;;	.@@..@@@@.@@.@.....@.@.@.@.@.@@.	.@@..@@@@.@@.................@@.
	;;	..@@...@@@@@...@@.@.@.@.@...@@..	@......@@@@@...................@
	;;	....@@...@@....@@..@.@.@..@@....	@@.......@@...................@@
	;;	......@@.......@@.@.@...@@......	@@@@........................@@@@
	;;	........@@...@.@@..@..@@........	@@@@@@.........@@.........@@@@@@
	;;	..........@@..@@.@..@@..........	@@@@@@@@......@@.@......@@@@@@@@
	;;	............@@@@.@@@............	@@@@@@@@@@...@@@.@@...@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@..@@@@..@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_TARBOX EQU &5D
	B0E0 DEFB &00, &00, &00, &00, &00, &03, &C0, &00, &00, &07, &E0, &00, &00, &34, &2C, &00
	B0F0 DEFB &00, &60, &06, &00, &03, &86, &01, &C0, &07, &10, &00, &E0, &3A, &38, &00, &5C
	B100 DEFB &7C, &60, &00, &3E, &7C, &40, &00, &3E, &7B, &00, &00, &DE, &77, &80, &01, &EE
	B110 DEFB &37, &F0, &0F, &EC, &3B, &FB, &DF, &DC, &38, &77, &EE, &1C, &39, &37, &EC, &9C
	B120 DEFB &39, &07, &E0, &9C, &7D, &83, &C1, &BE, &7C, &83, &81, &3E, &7B, &23, &C4, &DE
	B130 DEFB &37, &83, &C1, &EC, &07, &F3, &CF, &E0, &03, &FB, &DF, &C0, &00, &77, &EE, &00
	B140 DEFB &00, &37, &EC, &00, &00, &07, &E0, &00, &00, &03, &C0, &00, &00, &00, &00, &00
	B150 DEFB &FF, &FC, &3F, &FF, &FF, &FB, &DF, &FF, &FF, &C7, &E3, &FF, &FF, &B4, &2D, &FF
	B160 DEFB &FC, &60, &06, &3F, &FB, &80, &01, &DF, &C7, &00, &00, &E3, &BA, &00, &00, &5D
	B170 DEFB &7C, &00, &00, &3E, &7C, &00, &00, &3E, &7B, &00, &00, &DE, &77, &80, &01, &EE
	B180 DEFB &B7, &F0, &0F, &ED, &BB, &FB, &DF, &DD, &B8, &77, &EE, &1D, &B8, &37, &EC, &1D
	B190 DEFB &B8, &07, &E0, &1D, &7C, &03, &C0, &3E, &7C, &03, &80, &3E, &7B, &03, &C0, &DE
	B1A0 DEFB &B7, &83, &C1, &ED, &C7, &F3, &CF, &E3, &FB, &FB, &DF, &DF, &FC, &77, &EE, &3F
	B1B0 DEFB &FF, &B7, &ED, &FF, &FF, &C7, &E3, &FF, &FF, &FB, &DF, &FF, &FF, &FC, &3F, &FF
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@@.@@@@.@@@@@@@@@@@@@
	;;	.............@@@@@@.............	@@@@@@@@@@...@@@@@@...@@@@@@@@@@
	;;	..........@@.@....@.@@..........	@@@@@@@@@.@@.@....@.@@.@@@@@@@@@
	;;	.........@@..........@@.........	@@@@@@...@@..........@@...@@@@@@
	;;	......@@@....@@........@@@......	@@@@@.@@@..............@@@.@@@@@
	;;	.....@@@...@............@@@.....	@@...@@@................@@@...@@
	;;	..@@@.@...@@@............@.@@@..	@.@@@.@..................@.@@@.@
	;;	.@@@@@...@@...............@@@@@.	.@@@@@....................@@@@@.
	;;	.@@@@@...@................@@@@@.	.@@@@@....................@@@@@.
	;;	.@@@@.@@................@@.@@@@.	.@@@@.@@................@@.@@@@.
	;;	.@@@.@@@@..............@@@@.@@@.	.@@@.@@@@..............@@@@.@@@.
	;;	..@@.@@@@@@@........@@@@@@@.@@..	@.@@.@@@@@@@........@@@@@@@.@@.@
	;;	..@@@.@@@@@@@.@@@@.@@@@@@@.@@@..	@.@@@.@@@@@@@.@@@@.@@@@@@@.@@@.@
	;;	..@@@....@@@.@@@@@@.@@@....@@@..	@.@@@....@@@.@@@@@@.@@@....@@@.@
	;;	..@@@..@..@@.@@@@@@.@@..@..@@@..	@.@@@.....@@.@@@@@@.@@.....@@@.@
	;;	..@@@..@.....@@@@@@.....@..@@@..	@.@@@........@@@@@@........@@@.@
	;;	.@@@@@.@@.....@@@@.....@@.@@@@@.	.@@@@@........@@@@........@@@@@.
	;;	.@@@@@..@.....@@@......@..@@@@@.	.@@@@@........@@@.........@@@@@.
	;;	.@@@@.@@..@...@@@@...@..@@.@@@@.	.@@@@.@@......@@@@......@@.@@@@.
	;;	..@@.@@@@.....@@@@.....@@@@.@@..	@.@@.@@@@.....@@@@.....@@@@.@@.@
	;;	.....@@@@@@@..@@@@..@@@@@@@.....	@@...@@@@@@@..@@@@..@@@@@@@...@@
	;;	......@@@@@@@.@@@@.@@@@@@@......	@@@@@.@@@@@@@.@@@@.@@@@@@@.@@@@@
	;;	.........@@@.@@@@@@.@@@.........	@@@@@@...@@@.@@@@@@.@@@...@@@@@@
	;;	..........@@.@@@@@@.@@..........	@@@@@@@@@.@@.@@@@@@.@@.@@@@@@@@@
	;;	.............@@@@@@.............	@@@@@@@@@@...@@@@@@...@@@@@@@@@@
	;;	..............@@@@..............	@@@@@@@@@@@@@.@@@@.@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@....@@@@@@@@@@@@@@

			;; SPR_DSPIKES EQU &5E
	B1C0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &06, &00
	B1D0 DEFB &00, &00, &19, &80, &00, &00, &77, &00, &00, &01, &9C, &80, &00, &07, &73, &80
	B1E0 DEFB &00, &19, &CF, &00, &00, &77, &3C, &00, &01, &9C, &F3, &00, &03, &73, &CB, &00
	B1F0 DEFB &04, &CF, &37, &00, &05, &3C, &B6, &00, &07, &73, &76, &00, &03, &4B, &6E, &00
	B200 DEFB &00, &37, &64, &00, &01, &B6, &E4, &00, &01, &F6, &40, &00, &00, &EE, &40, &00
	B210 DEFB &00, &E4, &00, &00, &00, &E4, &00, &00, &00, &40, &00, &00, &00, &40, &00, &00
	B220 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	B230 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &F9, &FF, &FF, &FF, &E0, &7F
	B240 DEFB &FF, &FF, &80, &3F, &FF, &FE, &00, &7F, &FF, &F8, &00, &3F, &FF, &E0, &00, &3F
	B250 DEFB &FF, &80, &00, &7F, &FE, &00, &00, &FF, &FC, &00, &03, &7F, &F8, &00, &0B, &7F
	B260 DEFB &F0, &00, &37, &7F, &F0, &00, &B6, &FF, &F0, &03, &76, &FF, &F8, &0B, &6E, &FF
	B270 DEFB &FC, &37, &65, &FF, &FD, &B6, &E5, &FF, &FD, &F6, &5B, &FF, &FE, &EE, &5F, &FF
	B280 DEFB &FE, &E5, &BF, &FF, &FE, &E5, &FF, &FF, &FF, &5B, &FF, &FF, &FF, &5F, &FF, &FF
	B290 DEFB &FF, &BF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@..@@@@@@@@@
	;;	.....................@@.........	@@@@@@@@@@@@@@@@@@@......@@@@@@@
	;;	...................@@..@@.......	@@@@@@@@@@@@@@@@@.........@@@@@@
	;;	.................@@@.@@@........	@@@@@@@@@@@@@@@..........@@@@@@@
	;;	...............@@..@@@..@.......	@@@@@@@@@@@@@.............@@@@@@
	;;	.............@@@.@@@..@@@.......	@@@@@@@@@@@...............@@@@@@
	;;	...........@@..@@@..@@@@........	@@@@@@@@@................@@@@@@@
	;;	.........@@@.@@@..@@@@..........	@@@@@@@.................@@@@@@@@
	;;	.......@@..@@@..@@@@..@@........	@@@@@@................@@.@@@@@@@
	;;	......@@.@@@..@@@@..@.@@........	@@@@@...............@.@@.@@@@@@@
	;;	.....@..@@..@@@@..@@.@@@........	@@@@..............@@.@@@.@@@@@@@
	;;	.....@.@..@@@@..@.@@.@@.........	@@@@............@.@@.@@.@@@@@@@@
	;;	.....@@@.@@@..@@.@@@.@@.........	@@@@..........@@.@@@.@@.@@@@@@@@
	;;	......@@.@..@.@@.@@.@@@.........	@@@@@.......@.@@.@@.@@@.@@@@@@@@
	;;	..........@@.@@@.@@..@..........	@@@@@@....@@.@@@.@@..@.@@@@@@@@@
	;;	.......@@.@@.@@.@@@..@..........	@@@@@@.@@.@@.@@.@@@..@.@@@@@@@@@
	;;	.......@@@@@.@@..@..............	@@@@@@.@@@@@.@@..@.@@.@@@@@@@@@@
	;;	........@@@.@@@..@..............	@@@@@@@.@@@.@@@..@.@@@@@@@@@@@@@
	;;	........@@@..@..................	@@@@@@@.@@@..@.@@.@@@@@@@@@@@@@@
	;;	........@@@..@..................	@@@@@@@.@@@..@.@@@@@@@@@@@@@@@@@
	;;	.........@......................	@@@@@@@@.@.@@.@@@@@@@@@@@@@@@@@@
	;;	.........@......................	@@@@@@@@.@.@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

			;; SPR_BRICKW EQU &5F
	B2A0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &1C, &00
	B2B0 DEFB &00, &00, &7F, &00, &00, &01, &FF, &C0, &00, &03, &FF, &00, &00, &1C, &FC, &C0
	B2C0 DEFB &00, &7F, &33, &C0, &01, &FF, &CF, &C0, &07, &FF, &1F, &C0, &01, &FC, &DF, &80
	B2D0 DEFB &06, &73, &DE, &40, &07, &8F, &D9, &C0, &07, &DF, &C5, &C0, &07, &DF, &9D, &C0
	B2E0 DEFB &01, &DE, &7D, &C0, &06, &59, &FD, &80, &07, &85, &FC, &00, &07, &DD, &F8, &00
	B2F0 DEFB &07, &DD, &E0, &00, &07, &DD, &80, &00, &01, &DC, &00, &00, &00, &58, &00, &00
	B300 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	B310 DEFB &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &E3, &FF, &FF, &FF, &80, &FF
	B320 DEFB &FF, &FE, &00, &3F, &FF, &FC, &00, &1F, &FF, &E0, &00, &3F, &FF, &80, &00, &DF
	B330 DEFB &FE, &00, &03, &DF, &F8, &00, &0F, &DF, &F0, &00, &1F, &DF, &F8, &00, &DF, &BF
	B340 DEFB &F6, &03, &DE, &5F, &F7, &8F, &D9, &DF, &F7, &DF, &C5, &DF, &F7, &DF, &9D, &DF
	B350 DEFB &F9, &DE, &7D, &DF, &F6, &59, &FD, &BF, &F7, &85, &FC, &7F, &F7, &DD, &FB, &FF
	B360 DEFB &F7, &DD, &E7, &FF, &F7, &DD, &9F, &FF, &F9, &DC, &7F, &FF, &FE, &5B, &FF, &FF
	B370 DEFB &FF, &A7, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF, &FF
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@...@@@@@@@@@@
	;;	...................@@@..........	@@@@@@@@@@@@@@@@@.......@@@@@@@@
	;;	.................@@@@@@@........	@@@@@@@@@@@@@@@...........@@@@@@
	;;	...............@@@@@@@@@@@......	@@@@@@@@@@@@@@.............@@@@@
	;;	..............@@@@@@@@@@........	@@@@@@@@@@@...............@@@@@@
	;;	...........@@@..@@@@@@..@@......	@@@@@@@@@...............@@.@@@@@
	;;	.........@@@@@@@..@@..@@@@......	@@@@@@@...............@@@@.@@@@@
	;;	.......@@@@@@@@@@@..@@@@@@......	@@@@@...............@@@@@@.@@@@@
	;;	.....@@@@@@@@@@@...@@@@@@@......	@@@@...............@@@@@@@.@@@@@
	;;	.......@@@@@@@..@@.@@@@@@.......	@@@@@...........@@.@@@@@@.@@@@@@
	;;	.....@@..@@@..@@@@.@@@@..@......	@@@@.@@.......@@@@.@@@@..@.@@@@@
	;;	.....@@@@...@@@@@@.@@..@@@......	@@@@.@@@@...@@@@@@.@@..@@@.@@@@@
	;;	.....@@@@@.@@@@@@@...@.@@@......	@@@@.@@@@@.@@@@@@@...@.@@@.@@@@@
	;;	.....@@@@@.@@@@@@..@@@.@@@......	@@@@.@@@@@.@@@@@@..@@@.@@@.@@@@@
	;;	.......@@@.@@@@..@@@@@.@@@......	@@@@@..@@@.@@@@..@@@@@.@@@.@@@@@
	;;	.....@@..@.@@..@@@@@@@.@@.......	@@@@.@@..@.@@..@@@@@@@.@@.@@@@@@
	;;	.....@@@@....@.@@@@@@@..........	@@@@.@@@@....@.@@@@@@@...@@@@@@@
	;;	.....@@@@@.@@@.@@@@@@...........	@@@@.@@@@@.@@@.@@@@@@.@@@@@@@@@@
	;;	.....@@@@@.@@@.@@@@.............	@@@@.@@@@@.@@@.@@@@..@@@@@@@@@@@
	;;	.....@@@@@.@@@.@@...............	@@@@.@@@@@.@@@.@@..@@@@@@@@@@@@@
	;;	.......@@@.@@@..................	@@@@@..@@@.@@@...@@@@@@@@@@@@@@@
	;;	.........@.@@...................	@@@@@@@..@.@@.@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@.@..@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;;	................................	@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

;; -----------------------------------------------------------------------------------------------------------
img_2x24_bin:
floor_tiles
floor_tile_pattern0:				;;
	B380 DEFB &E0, &00, &78, &00, &1E, &00, &07, &80, &01, &E0, &00, &78, &00, &1E, &00, &07
	B390 DEFB &00, &07, &00, &1E, &00, &78, &01, &E0, &07, &80, &1E, &00, &78, &00, &E0, &00
	B3A0 DEFB &E0, &00, &78, &00, &1E, &00, &07, &80, &01, &E0, &00, &78, &00, &1E, &00, &07
	;;	@@@.............
	;;	.@@@@...........
	;;	...@@@@.........
	;;	.....@@@@.......
	;;	.......@@@@.....
	;;	.........@@@@...
	;;	...........@@@@.
	;;	.............@@@
	;;	.............@@@
	;;	...........@@@@.
	;;	.........@@@@...
	;;	.......@@@@.....
	;;	.....@@@@.......
	;;	...@@@@.........
	;;	.@@@@...........
	;;	@@@.............
	;;	@@@.............
	;;	.@@@@...........
	;;	...@@@@.........
	;;	.....@@@@.......
	;;	.......@@@@.....
	;;	.........@@@@...
	;;	...........@@@@.
	;;	.............@@@

floor_tile_pattern1
	B3B0 DEFB &3C, &03, &FC, &00, &FE, &00, &1F, &C0, &03, &F8, &00, &7F, &00, &3F, &C0, &3C
	B3C0 DEFB &C0, &3C, &00, &3F, &00, &7F, &03, &F8, &1F, &C0, &FE, &00, &FC, &00, &3C, &03
	B3D0 DEFB &3C, &03, &FC, &00, &FE, &00, &1F, &C0, &03, &F8, &00, &7F, &00, &3F, &C0, &3C
	;;	..@@@@........@@
	;;	@@@@@@..........
	;;	@@@@@@@.........
	;;	...@@@@@@@......
	;;	......@@@@@@@...
	;;	.........@@@@@@@
	;;	..........@@@@@@
	;;	@@........@@@@..
	;;	@@........@@@@..
	;;	..........@@@@@@
	;;	.........@@@@@@@
	;;	......@@@@@@@...
	;;	...@@@@@@@......
	;;	@@@@@@@.........
	;;	@@@@@@..........
	;;	..@@@@........@@
	;;	..@@@@........@@
	;;	@@@@@@..........
	;;	@@@@@@@.........
	;;	...@@@@@@@......
	;;	......@@@@@@@...
	;;	.........@@@@@@@
	;;	..........@@@@@@
	;;	@@........@@@@..

floor_tile_pattern2
	B3E0 DEFB &07, &38, &03, &9F, &01, &C3, &F0, &78, &1E, &0F, &C3, &80, &F9, &C0, &1C, &E0
	B3F0 DEFB &1C, &E0, &F9, &C0, &C3, &80, &1E, &0F, &F0, &78, &01, &C3, &03, &9F, &07, &38
	B400 DEFB &07, &38, &03, &9F, &01, &C3, &F0, &78, &1E, &0F, &C3, &80, &F9, &C0, &1C, &E0
	;;	.....@@@..@@@...
	;;	......@@@..@@@@@
	;;	.......@@@....@@
	;;	@@@@.....@@@@...
	;;	...@@@@.....@@@@
	;;	@@....@@@.......
	;;	@@@@@..@@@......
	;;	...@@@..@@@.....
	;;	...@@@..@@@.....
	;;	@@@@@..@@@......
	;;	@@....@@@.......
	;;	...@@@@.....@@@@
	;;	@@@@.....@@@@...
	;;	.......@@@....@@
	;;	......@@@..@@@@@
	;;	.....@@@..@@@...
	;;	.....@@@..@@@...
	;;	......@@@..@@@@@
	;;	.......@@@....@@
	;;	@@@@.....@@@@...
	;;	...@@@@.....@@@@
	;;	@@....@@@.......
	;;	@@@@@..@@@......
	;;	...@@@..@@@.....

floor_tile_pattern3
	B410 DEFB &10, &26, &40, &10, &00, &20, &C0, &C4, &26, &30, &18, &8C, &21, &02, &44, &01
	B420 DEFB &30, &02, &88, &1C, &02, &63, &01, &80, &02, &10, &0C, &40, &23, &00, &88, &C1
	B430 DEFB &00, &26, &40, &00, &00, &21, &C1, &C4, &26, &30, &18, &0C, &01, &00, &C4, &01
	;;	...@......@..@@.
	;;	.@.........@....
	;;	..........@.....
	;;	@@......@@...@..
	;;	..@..@@...@@....
	;;	...@@...@...@@..
	;;	..@....@......@.
	;;	.@...@.........@
	;;	..@@..........@.
	;;	@...@......@@@..
	;;	......@..@@...@@
	;;	.......@@.......
	;;	......@....@....
	;;	....@@...@......
	;;	..@...@@........
	;;	@...@...@@.....@
	;;	..........@..@@.
	;;	.@..............
	;;	..........@....@
	;;	@@.....@@@...@..
	;;	..@..@@...@@....
	;;	...@@.......@@..
	;;	.......@........
	;;	@@...@.........@

floor_tile_pattern4
	B440 DEFB &CC, &30, &33, &C0, &CC, &03, &33, &0C, &30, &CC, &C0, &33, &03, &CC, &0C, &33
	B450 DEFB &0C, &33, &03, &CC, &C0, &33, &30, &CC, &33, &0C, &CC, &03, &33, &C0, &CC, &30
	B460 DEFB &CC, &30, &33, &C0, &CC, &03, &33, &0C, &30, &CC, &C0, &33, &03, &CC, &0C, &33
	;;	@@..@@....@@....
	;;	..@@..@@@@......
	;;	@@..@@........@@
	;;	..@@..@@....@@..
	;;	..@@....@@..@@..
	;;	@@........@@..@@
	;;	......@@@@..@@..
	;;	....@@....@@..@@
	;;	....@@....@@..@@
	;;	......@@@@..@@..
	;;	@@........@@..@@
	;;	..@@....@@..@@..
	;;	..@@..@@....@@..
	;;	@@..@@........@@
	;;	..@@..@@@@......
	;;	@@..@@....@@....
	;;	@@..@@....@@....
	;;	..@@..@@@@......
	;;	@@..@@........@@
	;;	..@@..@@....@@..
	;;	..@@....@@..@@..
	;;	@@........@@..@@
	;;	......@@@@..@@..
	;;	....@@....@@..@@

floor_tile_pattern5
	B470 DEFB &00, &00, &45, &02, &00, &00, &00, &00, &01, &01, &04, &84, &02, &00, &00, &00
	B480 DEFB &30, &00, &00, &40, &00, &10, &42, &00, &40, &C0, &01, &00, &00, &10, &40, &00
	B490 DEFB &00, &43, &0C, &21, &00, &80, &00, &00, &21, &00, &00, &00, &0A, &08, &21, &04
	;;	................
	;;	.@...@.@......@.
	;;	................
	;;	................
	;;	.......@.......@
	;;	.....@..@....@..
	;;	......@.........
	;;	................
	;;	..@@............
	;;	.........@......
	;;	...........@....
	;;	.@....@.........
	;;	.@......@@......
	;;	.......@........
	;;	...........@....
	;;	.@..............
	;;	.........@....@@
	;;	....@@....@....@
	;;	........@.......
	;;	................
	;;	..@....@........
	;;	................
	;;	....@.@.....@...
	;;	..@....@.....@..

floor_tile_pattern6
	B4A0 DEFB &47, &80, &B3, &C0, &8C, &00, &C3, &01, &C0, &C1, &E0, &33, &80, &CC, &00, &C3
	B4B0 DEFB &01, &E2, &01, &CD, &03, &31, &80, &C3, &83, &03, &CC, &07, &33, &01, &C3, &00
	B4C0 DEFB &47, &80, &B3, &80, &8C, &C0, &C3, &01, &C0, &C1, &E0, &33, &80, &CC, &00, &C3
	;;	.@...@@@@.......
	;;	@.@@..@@@@......
	;;	@...@@..........
	;;	@@....@@.......@
	;;	@@......@@.....@
	;;	@@@.......@@..@@
	;;	@.......@@..@@..
	;;	........@@....@@
	;;	.......@@@@...@.
	;;	.......@@@..@@.@
	;;	......@@..@@...@
	;;	@.......@@....@@
	;;	@.....@@......@@
	;;	@@..@@.......@@@
	;;	..@@..@@.......@
	;;	@@....@@........
	;;	.@...@@@@.......
	;;	@.@@..@@@.......
	;;	@...@@..@@......
	;;	@@....@@.......@
	;;	@@......@@.....@
	;;	@@@.......@@..@@
	;;	@.......@@..@@..
	;;	........@@....@@

empty_floor_tile:
floor_tile_pattern7: 				;; Empty tile
	B4D0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	B4E0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	B4F0 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00

Char_symbol_data:
	B500	DEFB	&00, &00, &00, &00, &00, &00, &00, &00
	;;	................
	;;	................
	;;	................
	;;	................
	;;	................
	;;	................
	;;	................
	;;	................
	B508	DEFB	&22, &33, &7F, &7F, &7F, &FF, &C9, &80
	;;	....@@......@@..
	;;	....@@@@....@@@@
	;;	..@@@@@@@@@@@@@@
	;;	..@@@@@@@@@@@@@@
	;;	..@@@@@@@@@@@@@@
	;;	@@@@@@@@@@@@@@@@
	;;	@@@@....@@....@@
	;;	@@..............
	B510	DEFB	&44, &CC, &FE, &FE, &FE, &FF, &93, &01
	;;	..@@......@@....
	;;	@@@@....@@@@....
	;;	@@@@@@@@@@@@@@..
	;;	@@@@@@@@@@@@@@..
	;;	@@@@@@@@@@@@@@..
	;;	@@@@@@@@@@@@@@@@
	;;	@@....@@....@@@@
	;;	..............@@
	B518	DEFB	&03, &03, &03, &03, &0F, &07, &03, &01
	;;	............@@@@
	;;	............@@@@
	;;	............@@@@
	;;	............@@@@
	;;	........@@@@@@@@
	;;	..........@@@@@@
	;;	............@@@@
	;;	..............@@
	B520	DEFB	&C0, &C0, &C0, &C0, &F0, &E0, &C0, &80
	;;	@@@@............
	;;	@@@@............
	;;	@@@@............
	;;	@@@@............
	;;	@@@@@@@@........
	;;	@@@@@@..........
	;;	@@@@............
	;;	@@..............
	B528	DEFB	&C0, &70, &3C, &18, &3C, &0E, &03, &00
	;;	@@@@............
	;;	..@@@@@@........
	;;	....@@@@@@@@....
	;;	......@@@@......
	;;	....@@@@@@@@....
	;;	........@@@@@@..
	;;	............@@@@
	;;	................
	B530	DEFB	&06, &03, &3B, &66, &3D, &42, &3C, &00
	;;	..........@@@@..
	;;	............@@@@
	;;	....@@@@@@..@@@@
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@..@@
	;;	..@@........@@..
	;;	....@@@@@@@@....
	;;	................
	B538	DEFB	&FE, &AA, &82, &82, &6C, &38, &10, &00
	;;	@@@@@@@@@@@@@@..
	;;	@@..@@..@@..@@..
	;;	@@..........@@..
	;;	@@..........@@..
	;;	..@@@@..@@@@....
	;;	....@@@@@@......
	;;	......@@........
	;;	................
	B540	DEFB	&00, &00, &00, &00, &18, &18, &08, &10
	;;	................
	;;	................
	;;	................
	;;	................
	;;	......@@@@......
	;;	......@@@@......
	;;	........@@......
	;;	......@@........
	B548	DEFB	&00, &00, &00, &3C, &3C, &00, &00, &00
	;;	................
	;;	................
	;;	................
	;;	....@@@@@@@@....
	;;	....@@@@@@@@....
	;;	................
	;;	................
	;;	................
	B550	DEFB	&00, &00, &00, &00, &00, &00, &18, &18
	;;	................
	;;	................
	;;	................
	;;	................
	;;	................
	;;	................
	;;	......@@@@......
	;;	......@@@@......
	B558	DEFB	&0C, &0C, &18, &18, &30, &30, &60, &60
	;;	........@@@@....
	;;	........@@@@....
	;;	......@@@@......
	;;	......@@@@......
	;;	....@@@@........
	;;	....@@@@........
	;;	..@@@@..........
	;;	..@@@@..........
	B560	DEFB	&3C, &66, &6E, &7E, &76, &66, &66, &3C
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@..@@@@@@..
	;;	..@@@@@@@@@@@@..
	;;	..@@@@@@..@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B568	DEFB	&18, &38, &18, &18, &18, &18, &3C, &3C
	;;	......@@@@......
	;;	....@@@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	....@@@@@@@@....
	;;	....@@@@@@@@....
	B570	DEFB	&3C, &66, &46, &0C, &18, &30, &7E, &7E
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@......@@@@..
	;;	........@@@@....
	;;	......@@@@......
	;;	....@@@@........
	;;	..@@@@@@@@@@@@..
	;;	..@@@@@@@@@@@@..
	B578	DEFB	&7E, &06, &0C, &1C, &06, &06, &66, &3C
	;;	..@@@@@@@@@@@@..
	;;	..........@@@@..
	;;	........@@@@....
	;;	......@@@@@@....
	;;	..........@@@@..
	;;	..........@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B580	DEFB	&0C, &1C, &14, &34, &24, &64, &7E, &04
	;;	........@@@@....
	;;	......@@@@@@....
	;;	......@@..@@....
	;;	....@@@@..@@....
	;;	....@@....@@....
	;;	..@@@@....@@....
	;;	..@@@@@@@@@@@@..
	;;	..........@@....
	B588	DEFB	&7E, &60, &60, &7C, &06, &06, &66, &3C
	;;	..@@@@@@@@@@@@..
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@@@@@@@....
	;;	..........@@@@..
	;;	..........@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B590	DEFB	&1C, &30, &60, &7C, &66, &66, &66, &3C
	;;	......@@@@@@....
	;;	....@@@@........
	;;	..@@@@..........
	;;	..@@@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B598	DEFB	&7E, &06, &0C, &0C, &18, &18, &30, &30
	;;	..@@@@@@@@@@@@..
	;;	..........@@@@..
	;;	........@@@@....
	;;	........@@@@....
	;;	......@@@@......
	;;	......@@@@......
	;;	....@@@@........
	;;	....@@@@........
	B5A0	DEFB	&3C, &66, &66, &3C, &7E, &66, &66, &3C
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	;;	..@@@@@@@@@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B5A8	DEFB	&3C, &66, &66, &66, &3E, &06, &66, &3C
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@@@..
	;;	..........@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B5B0	DEFB	&00, &00, &18, &18, &00, &18, &18, &00
	;;	................
	;;	................
	;;	......@@@@......
	;;	......@@@@......
	;;	................
	;;	......@@@@......
	;;	......@@@@......
	;;	................
	B5B8	DEFB	&00, &18, &18, &00, &18, &18, &08, &10
	;;	................
	;;	......@@@@......
	;;	......@@@@......
	;;	................
	;;	......@@@@......
	;;	......@@@@......
	;;	........@@......
	;;	......@@........
	B5C0	DEFB	&00, &7C, &C6, &BA, &AA, &BE, &C0, &7C
	;;	................
	;;	..@@@@@@@@@@....
	;;	@@@@......@@@@..
	;;	@@..@@@@@@..@@..
	;;	@@..@@..@@..@@..
	;;	@@..@@@@@@@@@@..
	;;	@@@@............
	;;	..@@@@@@@@@@....
	B5C8	DEFB	&3C, &7E, &66, &66, &7E, &7E, &66, &66
	;;	....@@@@@@@@....
	;;	..@@@@@@@@@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@@@..
	;;	..@@@@@@@@@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	B5D0	DEFB	&7C, &66, &66, &7C, &7C, &66, &66, &7C
	;;	..@@@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@....
	;;	..@@@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@....
	B5D8	DEFB	&3C, &7E, &66, &60, &60, &66, &7E, &3C
	;;	....@@@@@@@@....
	;;	..@@@@@@@@@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@@@..
	;;	....@@@@@@@@....
	B5E0	DEFB	&7C, &66, &66, &66, &66, &66, &66, &7C
	;;	..@@@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@....
	B5E8	DEFB	&7E, &60, &60, &78, &60, &60, &60, &7E
	;;	..@@@@@@@@@@@@..
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@@@@@......
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@@@@@@@@@..
	B5F0	DEFB	&7E, &60, &60, &78, &60, &60, &60, &60
	;;	..@@@@@@@@@@@@..
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@@@@@......
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	B5F8	DEFB	&3C, &66, &60, &60, &60, &66, &7E, &3A
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@@@..
	;;	....@@@@@@..@@..
	B600	DEFB	&66, &66, &66, &7E, &66, &66, &66, &66
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	B608	DEFB	&3C, &18, &18, &18, &18, &18, &18, &3C
	;;	....@@@@@@@@....
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	....@@@@@@@@....
	B610	DEFB	&1E, &0C, &0C, &0C, &0C, &0C, &6C, &38
	;;	......@@@@@@@@..
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	..@@@@..@@@@....
	;;	....@@@@@@......
	B618	DEFB	&62, &66, &6C, &78, &78, &6C, &66, &62
	;;	..@@@@......@@..
	;;	..@@@@....@@@@..
	;;	..@@@@..@@@@....
	;;	..@@@@@@@@......
	;;	..@@@@@@@@......
	;;	..@@@@..@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@......@@..
	B620	DEFB	&60, &60, &60, &60, &60, &60, &60, &7E
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@@@@@@@@@..
	B628	DEFB	&C6, &EE, &FE, &D6, &C6, &C6, &C6, &C6
	;;	@@@@......@@@@..
	;;	@@@@@@..@@@@@@..
	;;	@@@@@@@@@@@@@@..
	;;	@@@@..@@..@@@@..
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	B630	DEFB	&C6, &C6, &E6, &F6, &DE, &CE, &C6, &C6
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	;;	@@@@@@....@@@@..
	;;	@@@@@@@@..@@@@..
	;;	@@@@..@@@@@@@@..
	;;	@@@@....@@@@@@..
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	B638	DEFB	&3C, &66, &66, &66, &66, &66, &66, &3C
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B640	DEFB	&7C, &66, &66, &7C, &60, &60, &60, &60
	;;	..@@@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@....
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	;;	..@@@@..........
	B648	DEFB	&78, &CC, &CC, &CC, &CC, &DC, &CC, &7A
	;;	..@@@@@@@@......
	;;	@@@@....@@@@....
	;;	@@@@....@@@@....
	;;	@@@@....@@@@....
	;;	@@@@....@@@@....
	;;	@@@@..@@@@@@....
	;;	@@@@....@@@@....
	;;	..@@@@@@@@..@@..
	B650	DEFB	&7C, &66, &66, &7C, &6C, &6C, &66, &66
	;;	..@@@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@@@@@@@....
	;;	..@@@@..@@@@....
	;;	..@@@@..@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	B658	DEFB	&3C, &66, &60, &3C, &06, &06, &66, &3C
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@..........
	;;	....@@@@@@@@....
	;;	..........@@@@..
	;;	..........@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B660	DEFB	&7E, &18, &18, &18, &18, &18, &18, &18
	;;	..@@@@@@@@@@@@..
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	B668	DEFB	&66, &66, &66, &66, &66, &66, &66, &3C
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	B670	DEFB	&66, &66, &66, &66, &3C, &3C, &18, &18
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	;;	....@@@@@@@@....
	;;	......@@@@......
	;;	......@@@@......
	B678	DEFB	&C6, &C6, &C6, &C6, &D6, &FE, &EE, &C6
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	;;	@@@@......@@@@..
	;;	@@@@..@@..@@@@..
	;;	@@@@@@@@@@@@@@..
	;;	@@@@@@..@@@@@@..
	;;	@@@@......@@@@..
	B680	DEFB	&66, &66, &3C, &18, &18, &3C, &66, &66
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	;;	......@@@@......
	;;	......@@@@......
	;;	....@@@@@@@@....
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	B688	DEFB	&66, &66, &3C, &18, &18, &18, &18, &18
	;;	..@@@@....@@@@..
	;;	..@@@@....@@@@..
	;;	....@@@@@@@@....
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	B690	DEFB	&7E, &0E, &0C, &1C, &18, &38, &30, &7E
	;;	..@@@@@@@@@@@@..
	;;	........@@@@@@..
	;;	........@@@@....
	;;	......@@@@@@....
	;;	......@@@@......
	;;	....@@@@@@......
	;;	....@@@@........
	;;	..@@@@@@@@@@@@..
	B698	DEFB	&3C, &30, &30, &30, &30, &30, &30, &3C
	;;	....@@@@@@@@....
	;;	....@@@@........
	;;	....@@@@........
	;;	....@@@@........
	;;	....@@@@........
	;;	....@@@@........
	;;	....@@@@........
	;;	....@@@@@@@@....
	B6A0	DEFB	&60, &60, &30, &30, &18, &18, &0C, &0C
	;;	..@@@@..........
	;;	..@@@@..........
	;;	....@@@@........
	;;	....@@@@........
	;;	......@@@@......
	;;	......@@@@......
	;;	........@@@@....
	;;	........@@@@....
	B6A8	DEFB	&3C, &0C, &0C, &0C, &0C, &0C, &0C, &3C
	;;	....@@@@@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	........@@@@....
	;;	....@@@@@@@@....
	B6B0	DEFB	&18, &3C, &7E, &18, &18, &18, &18, &18
	;;	......@@@@......
	;;	....@@@@@@@@....
	;;	..@@@@@@@@@@@@..
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	B6B8	DEFB	&18, &18, &18, &18, &18, &7E, &3C, &18
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	......@@@@......
	;;	..@@@@@@@@@@@@..
	;;	....@@@@@@@@....
	;;	......@@@@......
	B6C0	DEFB	&00, &08, &0C, &FE, &FE, &0C, &08, &00
	;;	................
	;;	........@@......
	;;	........@@@@....
	;;	@@@@@@@@@@@@@@..
	;;	@@@@@@@@@@@@@@..
	;;	........@@@@....
	;;	........@@......
	;;	................
	B6C8	DEFB	&00, &20, &60, &FE, &FE, &60, &20, &00
	;;	................
	;;	....@@..........
	;;	..@@@@..........
	;;	@@@@@@@@@@@@@@..
	;;	@@@@@@@@@@@@@@..
	;;	..@@@@..........
	;;	....@@..........
	;;	................

;; -----------------------------------------------------------------------------------------------------------
;; These are the pillars sprites that may go under some of the doors (type 4)
.img_pillar_top: 				;; 4x9 *2  Pillar Top
	;; (shown as "msk1+msk2 img1+img2 : result" so it is easier to see the result)
	B6D0 DEFB &00, &00, &00, &03, &00, &00, &00, &0F, &00, &00, &00, &10, &AE, &FF, &F2, &BF
	B6E0 DEFB &FF, &03, &00, &F3, &00, &0F, &00, &FC, &00, &3F, &00, &FF, &00, &FF, &00, &FC
	B6F0 DEFB &00, &FF, &00, &F3, &00, &FF, &00, &CF, &00, &FF, &00, &3E, &00, &FC, &00, &F8
	B700 DEFB &00, &F4, &04, &E4, &00, &CF, &14, &84, &00, &3E, &1A, &02, &01, &78, &2A, &32
	B710 DEFB &05, &64, &0A, &02, &1D, &1C, &9A, &02
;; To have a blit without the glitch, use these values instead (Alt):
;;  B6D0 DEFB &00, &00, &00, &03, &00, &00, &00, &0F, &00, &00, &00, &3F, &00, &00, &00, &CF
;;  B6E0 DEFB &00, &03, &00, &F3, &00, &0F, &00, &FC, &00, &3F, &00, &FF, &00, &FF, &00, &FC
;;  B6F0 DEFB &00, &FF, &00, &F3, &00, &FF, &00, &CF, &00, &FF, &00, &3E, &00, &FC, &00, &F8
;;  B700 DEFB &00, &F3, &04, &E4, &00, &CF, &14, &84, &00, &3E, &1A, &02, &01, &78, &2A, &32
;;	B710 DEFB &05, &64, &0A, &02, &1D, &1C, &9A, &02
	;;	................ ..............@@		;		................ ..............@@
	;;	................ ............@@@@		; Alt:	................ ............@@@@
	;;	................ ...........@....		;		................ ..........@@@@@@
	;;	@.@.@@@.@@@@..@. @@@@@@@@@.@@@@@@		;		................ ........@@..@@@@
	;;	@@@@@@@@........ ......@@@@@@..@@		;		................ ......@@@@@@..@@
	;;	................ ....@@@@@@@@@@..		;		................ ....@@@@@@@@@@..
	;;	................ ..@@@@@@@@@@@@@@		;		................ ..@@@@@@@@@@@@@@
	;;	................ @@@@@@@@@@@@@@..		;		................ @@@@@@@@@@@@@@..
	;;	................ @@@@@@@@@@@@..@@		;		................ @@@@@@@@@@@@..@@
	;;	................ @@@@@@@@@@..@@@@		;		................ @@@@@@@@@@..@@@@
	;;	................ @@@@@@@@..@@@@@.		;		................ @@@@@@@@..@@@@@.
	;;	................ @@@@@@..@@@@@...		;		................ @@@@@@..@@@@@...
	;;	.............@.. @@@@.@..@@@..@..		;		.............@.. @@@@..@@@@@..@..
	;;	...........@.@.. @@..@@@@@....@..		;		...........@.@.. @@..@@@@@....@..
	;;	...........@@.@. ..@@@@@.......@.		;		...........@@.@. ..@@@@@.......@.
	;;	.......@..@.@.@. .@@@@.....@@..@.		;		.......@..@.@.@. .@@@@.....@@..@.
	;;	.....@.@....@.@. .@@..@........@.		;		.....@.@....@.@. .@@..@........@.
	;;	...@@@.@@..@@.@. ...@@@........@.		;		...@@@.@@..@@.@. ...@@@........@.

img_pillar_mid
	B718 DEFB &3E, &BE, &F6, &06, &17, &97, &0C, &0C, &17, &97, &FC, &FC, &0D, &8D, &FA, &F8
	B728 DEFB &23, &83, &E6, &E0, &34, &84, &1A, &18, &2F, &8F, &0C, &0C, &1E, &9E, &F4, &04
	B738 DEFB &1D, &9C, &9A, &02, &3D, &BC, &2A, &32, &3D, &BC, &0A, &02, &3D, &BC, &9A, &02
	;;	..@@@@@.@@@@.@@. @.@@@@@......@@.
	;;	...@.@@@....@@.. @..@.@@@....@@..
	;;	...@.@@@@@@@@@.. @..@.@@@@@@@@@..
	;;	....@@.@@@@@@.@. @...@@.@@@@@@...
	;;	..@...@@@@@..@@. @.....@@@@@.....
	;;	..@@.@.....@@.@. @....@.....@@...
	;;	..@.@@@@....@@.. @...@@@@....@@..
	;;	...@@@@.@@@@.@.. @..@@@@......@..
	;;	...@@@.@@..@@.@. @..@@@........@.
	;;	..@@@@.@..@.@.@. @.@@@@....@@..@.
	;;	..@@@@.@....@.@. @.@@@@........@.
	;;	..@@@@.@@..@@.@. @.@@@@........@.

img_pillar_btm
	B748 DEFB &3E, &BE, &F6, &06, &17, &97, &0C, &0C, &17, &97, &FC, &FC, &0D, &8D, &F8, &F8
	B758 DEFB &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00, &00
	;;	..@@@@@.@@@@.@@. @.@@@@@......@@.
	;;	...@.@@@....@@.. @..@.@@@....@@..
	;;	...@.@@@@@@@@@.. @..@.@@@@@@@@@..
	;;	....@@.@@@@@@... @...@@.@@@@@@...
	;;	................ ................
	;;	................ ................
	;;	................ ................
	;;	................ ................

end_moved_block

;; -----------------------------------------------------------------------------------------------------------
PillarBuf
	B768 DEFS 296

DoorwayBuf
DoorwayImgBuf
	B890 DEFS 168	;;
DoorwayMaskBuf
	B938 DEFS 168	;;
